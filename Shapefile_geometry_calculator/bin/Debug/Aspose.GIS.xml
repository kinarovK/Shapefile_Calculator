<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aspose.GIS</name>
    </assembly>
    <members>
        <member name="T:Aspose.Gis.AbstractPath">
            <summary>
            An <c>AbstractPath</c> is a base class for classes that specify a unique location in an environment similar to a filesystem,
            like a local filesystem, a remote file storage or a ZIP archive, among others.
            </summary>
            <remarks>
            An <c>AbstractPath</c> might specify a location on a local filesystem, a location on a remote filesystem
            or an external storage like the Azure Blob storage, and so on. The location might point to an existing or not existing
            file-like objects, directory-like objects, or have any other meaning reasonable for the environment it belongs to.<br/>
            As an example, an <c>AbstractPath</c> inheritor that represents a location on the local filesystem can point to an existing
            file, directory, or to a place in the filesystem that has not been created yet.<cr/>
            In order to make a new filesystem-like storage available to <c>Aspose.GIS</c>, one should inherit this class
            and implement its abstract methods.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.FromLocalPath(System.String)">
            <summary>
            Creates an <see cref="T:Aspose.Gis.AbstractPath"/> that represents a location on the local filesystem.
            </summary>
            <param name="path">A path on the local filesystem, like <c>"C:\\file.shp"</c> or <c>"D:\\directory\\"</c>.</param>
            <returns>
            An <see cref="T:Aspose.Gis.AbstractPath"/> that represents the location defined by the <paramref name="path"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.FromStream(System.IO.Stream)">
            <summary>
            Creates an <see cref="T:Aspose.Gis.AbstractPath"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A stream to create an <see cref="T:Aspose.Gis.AbstractPath"/> from. <c>Aspose.GIS</c> does not dispose the stream.</param>
            <returns>
            An instance of <see cref="T:Aspose.Gis.AbstractPath"/> with the specified <see cref="T:System.IO.Stream"/> as its content.
            </returns>
            <remarks>
            This method is useful for passing a stream of data in a single-file format (such as GeoJSON or KML) to methods that expect an <see cref="T:Aspose.Gis.AbstractPath"/> .
            </remarks>
        </member>
        <member name="P:Aspose.Gis.AbstractPath.Location">
            <summary>
            Gets a string representation of the location of this <c>AbstractPath</c>.
            </summary>
            <remarks>
            Any two <see cref="T:Aspose.Gis.AbstractPath"/>s that equal <see cref="P:Aspose.Gis.AbstractPath.Location"/>s point to the same file or directory.
            The string representation must use <see cref="P:Aspose.Gis.AbstractPath.Separator"/> to separate directory levels. <cr/>
            As an example, for the local file system a location is a filesystem path,
            for Azure blobs it can be a path to the blob within a blob container.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.AbstractPath.Separator">
            <summary> Gets a separator character used to separate directory levels of the <see cref="P:Aspose.Gis.AbstractPath.Location"/> string. </summary>
            <value> A separator character used to separate directory levels of the <see cref="P:Aspose.Gis.AbstractPath.Location"/> string. </value>
            <remarks> Usually this is equal to forward '/' or backward slash '\\'. </remarks>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.IsFile">
            <summary> Gets a value indicating whether this path points to an existing file that can be opened for reading. </summary>
            <returns> <see langword="true"/> if location points to a file; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.Delete">
            <summary> Deletes a file pointed to by this path. </summary>
            <remarks>
            No exception is thrown if the file doesn't exist.
            </remarks>
            <exception cref="T:System.InvalidOperationException">The argument points to a directory instead of a file.</exception>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.Open(System.IO.FileAccess)">
            <summary>
            Opens this <c>AbstractPath</c> as a file.
            </summary>
            <param name="access">Specifies a subset of operations that can be performed on a <see cref="T:System.IO.Stream"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> opened with the specified <see cref="T:System.IO.FileAccess"/>. </returns>
            <remarks>
            If <paramref name="access"/> has the flag <see cref="F:System.IO.FileAccess.Write"/> set, and the file does not exist,
            an inheritor must create it. <cr/>
            An <c>AbstractPath</c> can be opened multiple times by <c>Aspose.GIS</c>. This is required in order to read a file
            independently with multiple streams. You should not cache the result but rather return new <see cref="T:System.IO.Stream"/> every time
            this method is called.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.ListDirectory">
            <summary>
            Returns paths located inside this <c>AbstractPath</c>, if it's a directory.
            </summary>
            <returns>
            Paths located inside this <c>AbstractPath</c>.
            </returns>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.Combine(System.String)">
            <summary>
            Combines this <see cref="T:Aspose.Gis.AbstractPath"/> with specified path components.
            </summary>
            <param name="location">A path component to append to this <see cref="T:Aspose.Gis.AbstractPath"/>.</param>
            <returns>
            A new <see cref="T:Aspose.Gis.AbstractPath"/> pointing to a <see cref="P:Aspose.Gis.AbstractPath.Location"/> that is a combination of locations of this <see cref="T:Aspose.Gis.AbstractPath"/> and
            the argument.
            </returns>
            <remarks>
            Usually this method should not be overridden by an inheritor. The default implementation
            concatenates this <see cref="P:Aspose.Gis.AbstractPath.Location"/> with the argument and calls the <see cref="M:Aspose.Gis.AbstractPath.WithLocation(System.String)"/>
            method with the concatenated string as an argument.<cr/>
            The combination result is defined in the following way:
            <ul>
            <li>If the argument starts with the <see cref="P:Aspose.Gis.AbstractPath.Separator"/>, the combination result equals to the argument;</li>
            <li>Otherwise, if <see cref="P:Aspose.Gis.AbstractPath.Location"/> ends with the <see cref="P:Aspose.Gis.AbstractPath.Separator"/>,
            the combination result equals to <c><see cref="P:Aspose.Gis.AbstractPath.Location"/> + <paramref name="location"/></c>;</li>
            <li>Otherwise, the result is equal to <c><see cref="P:Aspose.Gis.AbstractPath.Location"/> + <see cref="P:Aspose.Gis.AbstractPath.Separator"/> + <paramref name="location"/></c></li>
            </ul>
            </remarks>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.WithExtension(System.String)">
            <summary>
            Returns a new <see cref="T:Aspose.Gis.AbstractPath"/> with the file extension changed to the specified value.
            </summary>
            <param name="newExtension">A new extension.</param>
            <returns>
            A new <see cref="T:Aspose.Gis.AbstractPath"/>, that points to a file in the same directory, but with a new extension.
            </returns>
            <remarks>
            Usually, an inheritor should not override this method. The default implementation substitutes
            the extension and calls <see cref="M:Aspose.Gis.AbstractPath.WithLocation(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.GetFileName">
            <summary>
            Returns the file name and extension of this <see cref="T:Aspose.Gis.AbstractPath"/>.
            </summary>
            <returns>
            The characters after the last <see cref="P:Aspose.Gis.AbstractPath.Separator"/> character in the <see cref="P:Aspose.Gis.AbstractPath.Location"/>. If the
            last character is the <see cref="P:Aspose.Gis.AbstractPath.Separator"/> character, an empty string is returned. If there is no
            <see cref="P:Aspose.Gis.AbstractPath.Separator"/> characters in the <see cref="P:Aspose.Gis.AbstractPath.Location"/>, the <see cref="P:Aspose.Gis.AbstractPath.Location"/> itself
            is returned.
            </returns>
            <example>
            For an <c>AbstractPath</c> with <see cref="P:Aspose.Gis.AbstractPath.Location"/> equal to <c>"/directory/file.txt"</c>
            and <see cref="P:Aspose.Gis.AbstractPath.Separator"/> equal to <c>'/'</c>, this method returns <c>"file.txt"</c>.
            </example>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.GetFileNameWithoutExtension">
            <summary>
            Returns the file name of this <see cref="T:Aspose.Gis.AbstractPath"/> without the extension.
            </summary>
            <returns>
            The string returned by <see cref="M:Aspose.Gis.AbstractPath.GetFileName"/> minus the last period and all characters following it.
            </returns>
            <example>
            For an <c>AbstractPath</c> with <see cref="P:Aspose.Gis.AbstractPath.Location"/> equal to <c>"/directory/file.txt"</c>
            and <see cref="P:Aspose.Gis.AbstractPath.Separator"/> equal to <c>'/'</c>, this method returns <c>"file"</c>.
            </example>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.GetExtension">
            <summary>
            Returns the extension of this <see cref="T:Aspose.Gis.AbstractPath"/>.
            </summary>
            <returns>
            The extension of this <see cref="T:Aspose.Gis.AbstractPath"/> (including the period ".") or
            an empty string if the <see cref="T:Aspose.Gis.AbstractPath"/> has no extension.
            </returns>
            <example>
            For an <c>AbstractPath</c> with <see cref="P:Aspose.Gis.AbstractPath.Location"/> equal to <c>"/directory/file.txt"</c> this
            property returns <c>".txt"</c>.
            </example>
        </member>
        <member name="M:Aspose.Gis.AbstractPath.WithLocation(System.String)">
            <summary>
            Returns a copy of this <see cref="T:Aspose.Gis.AbstractPath"/> with its <see cref="P:Aspose.Gis.AbstractPath.Location"/> changed to the specified value.
            </summary>
            <param name="newLocation">The new <see cref="P:Aspose.Gis.AbstractPath.Location"/>.</param>
            <returns>A new <see cref="T:Aspose.Gis.AbstractPath"/> with <see cref="P:Aspose.Gis.AbstractPath.Location"/> changed to the specified value.</returns>
        </member>
        <member name="T:Aspose.Gis.AttributeDataType">
            <summary>
            The data type of a feature attribute.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.Integer">
            <summary>
            32-bit integer.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.Long">
            <summary>
            64-bit integer.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.Guid">
            <summary>
            A globally unique identifier (GUID).
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.Boolean">
            <summary>
            Boolean (true/false) value.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.Double">
            <summary>
            Double-precision real number.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.Date">
            <summary>
            Date value.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.Time">
            <summary>
            Time value.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.DateTime">
            <summary>
            Date and time value.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AttributeDataType.String">
            <summary>
            String value.
            </summary>
        </member>
        <member name="T:Aspose.Gis.AttributesConverterActions">
            <summary>
            Optional actions with attributes of the destination layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.AttributesConverterActions.Exclude">
            <summary>
            Sets <see langword="true" /> to exclude the attribute from the destination layer. The initial value is <see langword="false" />.
            </summary>
        </member>
        <member name="T:Aspose.Gis.AutoIds">
            <summary>
            Auto-generate ids.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AutoIds.None">
            <summary> Hide Auto Ids. </summary>
        </member>
        <member name="F:Aspose.Gis.AutoIds.Number">
            <summary> Increment Number Ids. </summary>
        </member>
        <member name="F:Aspose.Gis.AutoIds.Guid">
            <summary> Generate Guid Ids. </summary>
        </member>
        <member name="T:Aspose.Gis.ConversionOptions">
            <summary>
            Options for converting data between formats.
            </summary>
        </member>
        <member name="P:Aspose.Gis.ConversionOptions.SourceDriverOptions">
            <summary>
            Driver-specific options for the source layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.ConversionOptions.DestinationDriverOptions">
            <summary>
            Driver-specific options for the destination layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.ConversionOptions.AttributesConverter">
            <summary>
            A custom converter for attributes. It allows us to rename or exclude destination attributes.
            If not <see langword="null" />, it is called for each attribute of the source layer and is expected to change it if necessary. 
            </summary>
            <remarks>
            The attribute data type can be changed also.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.ConversionOptions.DestinationSpatialReferenceSystem">
            <summary>
            Spatial reference system to assign to destination layer.
            </summary>
        </member>
        <member name="T:Aspose.Gis.DatabaseDriver">
            <summary>
            A driver for a specific database based format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.DatabaseDriver.OpenDataset(System.Data.IDbConnection)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="connection">Opened connection to the database.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentNullException">The connection is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="T:Aspose.Gis.DatabaseDriverOptions">
            <summary>
            Options for a <see cref="T:Aspose.Gis.DatabaseDriver" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.DatabaseDriverOptions.SpatialReferenceSystemMode">
            <summary>
            Determines how the unknown geometries' SRS for the database should be handle when they are added to the layer.
            The default value is <see cref="F:Aspose.Gis.SpatialReferenceSystemMode.ThrowException"/>.
            </summary>
            <remarks>
            This is a creation option - it does not affect opening.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.DatabaseDriverOptions.#ctor(Aspose.Gis.DatabaseDriverOptions)">
            <summary> Create new instance, that is clone of argument. </summary>
        </member>
        <member name="M:Aspose.Gis.DatabaseDriverOptions.#ctor">
            <summary> Create new instance. </summary>
        </member>
        <member name="T:Aspose.Gis.Dataset">
            <summary>
            A dataset is the collection of <see cref="T:Aspose.Gis.VectorLayer"/> instances.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Dataset.Open(System.String,Aspose.Gis.FileDriver)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Open(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Open(System.Data.IDbConnection,Aspose.Gis.DatabaseDriver)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="connection">Opened connection to the database.</param>
            <param name="driver">Driver to use.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Create(System.String,Aspose.Gis.FileDriver)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets.</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="P:Aspose.Gis.Dataset.CanCreateLayers">
            <summary>
            Gets a value indicating whether this dataset can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this dataset can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Dataset.CanRemoveLayers">
            <summary>
            Gets a value indicating whether this dataset can remove vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this dataset can remove vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Dataset.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Dataset.Driver" /> that instantiated this dataset.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Dataset.LayersCount">
            <summary>
            Gets the number of layers in this dataset.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Dataset.GetLayerName(System.Int32)">
            <summary>
            Gets the name of the layer at specified index.
            </summary>
            <param name="index">Index of the layer.</param>
            <returns>Name of the layer.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.OpenLayer(System.String,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the layer with specified name for reading.
            </summary>
            <param name="name">Name of the layer to open.</param>
            <param name="options">Open options.</param>
            <returns>The layer opened for reading.</returns>
            <exception cref="T:System.ArgumentException">
            Layer with specified name does not exist;<cr/>
            Options object has an incorrect type for this dataset.
            </exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this dataset.</exception>
            <exception cref="T:System.ArgumentNullException">The name is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the layer.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.OpenLayerAt(System.Int32,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the layer at specified index for reading.
            </summary>
            <param name="index">Index of the layer to open.</param>
            <param name="options">Open options.</param>
            <returns>The layer opened for reading.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this dataset.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this dataset.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the layer.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.EditLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Opens the layer with specified name for editing.
            </summary>
            <param name="name">Name of the layer to edit.</param>
            <param name="options">Open options.</param>
            <param name="spatialReferenceSystem">Spatial reference system for new geometries.</param>
            <returns>The layer opened for editing.</returns>
            <exception cref="T:System.ArgumentException">
            Layer with specified name does not exist;<cr/>
            Options object has an incorrect type for this dataset.
            </exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this dataset.</exception>
            <exception cref="T:System.ArgumentNullException">The name is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the layer.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.CreateLayer">
            <summary>
            Creates a new vector layer and opens it for appending.
            </summary>
            <returns>A <see cref="T:Aspose.Gis.VectorLayer"/> opened for writing.</returns>
        </member>
        <member name="M:Aspose.Gis.Dataset.CreateLayer(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a new vector layer and opens it for appending.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
            <returns>A <see cref="T:Aspose.Gis.VectorLayer"/> opened for writing.</returns>
        </member>
        <member name="M:Aspose.Gis.Dataset.CreateLayer(Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a new vector layer and opens it for appending.
            </summary>
            <param name="options">Open options.</param>
            <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
            <returns>A <see cref="T:Aspose.Gis.VectorLayer"/> opened for writing.</returns>
            <exception cref="T:System.NotSupportedException">Layer creation is not supported for this dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while creating the layer.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.CreateLayer(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a new vector layer with specified name and opens it for appending.
            </summary>
            <param name="name">Name of the layer.</param>
            <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
            <returns>A <see cref="T:Aspose.Gis.VectorLayer"/> opened for writing.</returns>
            <exception cref="T:System.NotSupportedException">Layer creation is not supported for this dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while creating the layer.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a new vector layer with specified name and opens it for appending.
            </summary>
            <param name="name">Name of the layer.</param>
            <param name="options">Open options.</param>
            <param name="spatialReferenceSystem">Spatial reference system of the new layer.</param>
            <returns>A <see cref="T:Aspose.Gis.VectorLayer"/> opened for writing.</returns>
            <exception cref="T:System.NotSupportedException">Layer creation is not supported for this dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while creating the layer.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.RemoveLayer(System.String)">
            <summary>
            Removes the vector layer with specified name.
            </summary>
            <param name="name">Name of the layer</param>
            <exception cref="T:System.ArgumentException">No layer with specified name found.</exception>
            <exception cref="T:System.NotSupportedException">Layer removing is not supported.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while removing the layer.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.RemoveLayerAt(System.Int32)">
            <summary>
            Removes the vector layer at specified index.
            </summary>
            <param name="index">Index of the layer</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
            <exception cref="T:System.NotSupportedException">Layer removing is not supported.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while removing the layer.</exception>
        </member>
        <member name="M:Aspose.Gis.Dataset.Dispose">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.Dataset" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Dataset.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.Dataset" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Driver">
            <summary>
            A base class for drivers to GIS data.
            </summary>
        </member>
        <member name="T:Aspose.Gis.DriverOptions">
            <summary>
            Options for a <see cref="T:Aspose.Gis.Driver" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.ValidateGeometriesOnWrite">
            <summary>
            Determines if geometries should be validated when they are added to the layer.
            If set to <see langword="true"/>, <see cref="P:Aspose.Gis.Geometries.Geometry.IsValid"/> is called for each
            geometry when it's added to the layer, and if validation fails (<see cref="P:Aspose.Gis.Geometries.Geometry.IsValid"/> is <see langword="false"/>), <see cref="T:Aspose.Gis.GisException"/> is thrown.
            </summary>
            <remarks>
            This is a creation option - it does not affect opening.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.WritePolygonsAsLines">
            <summary>
            Determines if transformation of polygon or multipolygon to linestring is allowed. Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This is a creation option - it does not affect opening.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.CreateMidpoints">
            <summary>
             Determines if add a new point in the middle to each segment of geometry. Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.CloseLinearRing">
            <summary>
             Determines if close a unclosed <see cref="F:Aspose.Gis.Geometries.GeometryType.LinearRing"/> in each geometry. Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This is a opening option - it does not affect creation.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.DeleteNearPoints">
            <summary>
             Determines if delete near points in each geometry. Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This is a opening option - it does not affect creation.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.DeleteNearPointsDistance">
            <summary>
             Determines distance for <see cref="P:Aspose.Gis.DriverOptions.DeleteNearPoints"/>. Defaults to <see langword="0"/>.
            </summary>
            <remarks>
            It does not affect if <see cref="P:Aspose.Gis.DriverOptions.DeleteNearPoints"/>  is false.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.SimplifySegments">
            <summary>
             Determines if delete points lying on the same segment in each geometry. Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This is a opening option - it does not affect creation.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.SimplifySegmentsDistance">
            <summary>
             Determines distance for <see cref="P:Aspose.Gis.DriverOptions.SimplifySegments"/>. Defaults to <see langword="0"/>.
            </summary>
            <remarks>
            It does not affect if <see cref="P:Aspose.Gis.DriverOptions.SimplifySegments"/>  is false.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.XYPrecisionModel">
            <summary>
            A <see cref="T:Aspose.Gis.PrecisionModel"/> that will be applied to X and Y coordinates
            when geometries are added to the <see cref="T:Aspose.Gis.VectorLayer"/> or when they are read from the <see cref="T:Aspose.Gis.VectorLayer"/>.
            The default value is <see cref="P:Aspose.Gis.PrecisionModel.Exact"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.ZPrecisionModel">
            <summary>
            A <see cref="T:Aspose.Gis.PrecisionModel"/> that will be applied to Z coordinate
            when geometries are added to the <see cref="T:Aspose.Gis.VectorLayer"/> or when they are read from the <see cref="T:Aspose.Gis.VectorLayer"/>.
            The default value is <see cref="P:Aspose.Gis.PrecisionModel.Exact"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.MPrecisionModel">
            <summary>
            A <see cref="T:Aspose.Gis.PrecisionModel"/> that will be applied to M coordinate
            when geometries are added to the <see cref="T:Aspose.Gis.VectorLayer"/> or when they are read from the <see cref="T:Aspose.Gis.VectorLayer"/>.
            The default value is <see cref="P:Aspose.Gis.PrecisionModel.Exact"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.DriverOptions.LinearizationTolerance">
            <summary>
            A tolerance to use to linearize curve geometries.
            </summary>
            <value>
            The tolerance to pass to <see cref="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry(System.Double)"/> before adding geometries.
            </value>
            <remarks>
            This is a creation options - it does not affect opening.
            If driver does not support non-linear geometries they are automatically linearized.
            This property specifies an argument to the <see cref="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry(System.Double)"/> method that is used
            for linearization.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.DriverOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.DriverOptions.#ctor(Aspose.Gis.DriverOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Drivers">
            <summary>
            Drivers for all supported formats.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.EsriJson">
            <summary>
            A driver for the EsriJson format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.GDAL">
            <summary>
            A driver for the GDAL format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.GeoJson">
            <summary>
            A driver for the GeoJSON format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.GeoJsonSeq">
            <summary>
            A driver for the GeoJsonSeq: sequence of GeoJSON features.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.InMemory">
            <summary>
            A driver for work with data in memory.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.InFile">
            <summary>
            A driver for work with data and save changes in file on HDD.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.Kml">
            <summary>
            A driver for the KML format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.Shapefile">
            <summary>
            A driver for the Shapefile format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.OsmXml">
            <summary>
            A driver for the OSM XML format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.Gpx">
            <summary>
            A driver for the GPX format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.Gml">
            <summary>
            A driver for the GML format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.FileGdb">
            <summary>
            A driver for the ESRI File Geodatabase format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.TopoJson">
            <summary>
            A driver for the TopoJSON format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.MapInfoInterchange">
            <summary>
            A driver for the MapInfo Interchange Format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.MapInfoTab">
            <summary>
            A driver for the MapInfo Tab format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.PostGis">
            <summary>
            A driver for the PostGIS database.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.SqlServer">
            <summary>
            A driver for the SQL Server database.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.EsriAscii">
            <summary>
            A driver for the Esri AscII raster format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.GeoTiff">
            <summary>
            A driver for the GeoTIFF or TIFF raster format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.XyzTiles">
            <summary>
            A driver for the tiled web map like OpenStreetMaps, Google Maps, etc.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Drivers.Csv">
            <summary>
            A driver for the CSV format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Extent">
            <summary>
            A two-dimensional spatial bounding box.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Extent.#ctor">
            <summary>
            Creates new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Extent.#ctor(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates new instance.
            </summary>
            <param name="srs">
            <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> associated with this extent.
            Can be <see langword="null"/> to indicate that SRS is unknown.
            </param>
        </member>
        <member name="M:Aspose.Gis.Extent.#ctor(System.Double,System.Double,System.Double,System.Double,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates new instance.
            </summary>
            <param name="xMin">Minimum X value.</param>
            <param name="yMin">Minimum Y value.</param>
            <param name="xMax">Maximum X value.</param>
            <param name="yMax">Maximum Y value.</param>
            <param name="srs">
            <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> associated with this extent.
            Can be <see langword="null"/> to indicate that SRS is unknown.
            </param>
        </member>
        <member name="P:Aspose.Gis.Extent.XMin">
            <summary> Minimum value of the X coordinate. </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.XMax">
            <summary> Maximum value of the X coordinate. </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.YMin">
            <summary> Minimum value of the Y coordinate. </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.YMax">
            <summary> Maximum value of the Y coordinate. </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.SpatialReferenceSystem">
            <summary>
            <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> associated with this extent.
            Can be <see langword="null"/> if <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> is unknown.
            Use <see cref="M:Aspose.Gis.Extent.GetTransformed(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>
            in order to transform extent between difference spatial reference systems.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.Center">
            <summary> Center of the extent. </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.Width">
            <summary> Width of the extent. </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.Height">
            <summary> Height of the extent. </summary>
        </member>
        <member name="P:Aspose.Gis.Extent.IsValid">
            <summary>
            Determines whether this <see cref="T:Aspose.Gis.Extent"/> is valid.
            </summary>
            <remarks>
            A valid extent has non negative <see cref="P:Aspose.Gis.Extent.Width"/> and <see cref="P:Aspose.Gis.Extent.Height"/>. Also,
            all of its values are not <c>NaN</c> and finite.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Extent.GetTransformed(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Returns new extent in specified <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> that contains this extent.
            </summary>
            <param name="targetSrs"><see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> to transform to.</param>
            <exception cref="T:System.ArgumentNullException"> Argument is <see langword="null"/>. </exception>
            <exception cref="T:System.NotSupportedException"> Transformation to the provided SRS is not supported. </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Transformation failed. </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this extent is <see langword="null"/>.
            </exception>
            <returns>
            The result of transformation this extent to the specified SRS.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Extent.Normalize">
            <summary>
            Swaps <see cref="P:Aspose.Gis.Extent.XMin"/> with <see cref="P:Aspose.Gis.Extent.XMax"/> if <see cref="P:Aspose.Gis.Extent.Width"/> is negative and
            <see cref="P:Aspose.Gis.Extent.YMin"/> with <see cref="P:Aspose.Gis.Extent.YMax"/> if <see cref="P:Aspose.Gis.Extent.Height"/> is negative.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Extent.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance.</returns>
        </member>
        <member name="M:Aspose.Gis.Extent.ToPolygon">
            <summary>
            Converts this extent to a rectangular polygon that represents it.
            </summary>
            <returns>
            A rectangular <see cref="T:Aspose.Gis.Geometries.Polygon"/> that represents this extent. For invalid extents
            an empty polygon is returned.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Extent.Grow(Aspose.Gis.Extent)">
            <summary>
            Grows this extent so it includes the argument.
            </summary>
            <param name="extent">Other extent.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this extent and the argument are both not <see langword="null"/> and not equal to each other.
            </exception>
            <remarks>
            If <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this SRS is <see langword="null"/> then it is updated with SRS of the argument.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Extent.Grow(System.Double,System.Double)">
            <summary> Grows this extent so it includes the specified point. </summary>
            <param name="x">X coordinate to include.</param>
            <param name="y">Y coordinate to include.</param>
        </member>
        <member name="M:Aspose.Gis.Extent.GrowX(System.Double)">
            <summary> Grows this extent along the X axis so it includes the specified value. </summary>
            <param name="value">Value to include.</param>
        </member>
        <member name="M:Aspose.Gis.Extent.GrowY(System.Double)">
            <summary> Grows this extent along the Y axis so it includes the specified value. </summary>
            <param name="value">Value to include.</param>
        </member>
        <member name="M:Aspose.Gis.Extent.Contains(System.Double,System.Double)">
            <summary>
            Determines whether this extent contains a coordinate defined by the arguments.
            </summary>
            <param name="x">X of the coordinate.</param>
            <param name="y">Y of the coordinate.</param>
            <returns>Value, indicating whether coordinate is inside bounding box.</returns>
            <remarks>
            Coordinates located on the bounds of this <see cref="T:Aspose.Gis.Extent"/> are
            considered to be contained by this <see cref="T:Aspose.Gis.Extent"/>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Extent)">
            <summary>
            Determines whether this extent contains the argument.
            </summary>
            <param name="extent">Another extent.</param>
            <returns>Value, indicating whether this extent contains the argument.</returns>
            <remarks>
            Coordinates located on the bounds of this <see cref="T:Aspose.Gis.Extent"/> are
            considered to be contained by this <see cref="T:Aspose.Gis.Extent"/>. For this reason, equal extents are considered
            to contain each other.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this extent and the argument are both not <see langword="null"/> and not equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Geometries.IGeometry)">
             <summary>
             Determines whether this extent contains the argument.
             </summary>
             <param name="geometry">A geometry to test for containment.</param>
             <returns>Value, indicating whether this extent contains the argument.</returns>
             <remarks>
             Coordinates located on the bounds of this <see cref="T:Aspose.Gis.Extent"/> are
             considered to be contained by this <see cref="T:Aspose.Gis.Extent"/>.
            </remarks>
             <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">
             <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this extent and the argument are both not <see langword="null"/> and not equal to each other.
             </exception>
        </member>
        <member name="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Extent)">
            <summary>
            Determines whether this extent intersects with the argument.
            </summary>
            <param name="extent">Another extent.</param>
            <returns>Value, indicating whether this extent intersects with the argument.</returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this extent and the argument are both not <see langword="null"/> and not equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this extent intersects with the argument.
            </summary>
            <param name="geometry">A geometry to test for intersection</param>
            <returns>Value, indicating whether this extent intersects with the argument.</returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this extent and the argument are both not <see langword="null"/> and not equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Extent.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Extent.IsNormalDouble(System.Double)">
            <summary> Value is finite or non NaN. </summary>
        </member>
        <member name="M:Aspose.Gis.Extent.GetTransformed(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,System.Int32)">
             <summary>
             Returns new extent in specified <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> that contains this extent.
             </summary>
             <param name="targetSrs"><see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> to transform to.</param>
             <param name="pointsPerSide">
             Number of points on every side of this envelope to transform.
             Increasing this number increases precision of the transformation, but slightly decreases performance.
             </param>
             <exception cref="T:System.ArgumentNullException"> Argument is <see langword="null"/>. </exception>
             <exception cref="T:System.ArgumentOutOfRangeException"> Number of intermediate points is negative. </exception>
             <exception cref="T:System.NotSupportedException"> Transformation to the provided SRS is not supported. </exception>
             <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Transformation failed. </exception>
             <exception cref="T:System.InvalidOperationException">
             <ul>
             <li><see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> of this extent is <see langword="null"/>.</li>
             <li><see cref="P:Aspose.Gis.Extent.IsValid"/> is <see langword="false"/>.</li>
            </ul>
             </exception>
             <returns>
             The result of transformation this extent to the specified SRS.
             </returns>
        </member>
        <member name="M:Aspose.Gis.Extent.TryGrowAlongSegment(Aspose.Gis.Extent,Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,Aspose.Gis.Common.Coordinate,Aspose.Gis.Common.Coordinate)">
            <summary>
            Grows 'target' with points along [origin;destination] segment,
            trying to find the closest point to the 'origin' that doesn't fail to transform.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Extent.Equals(Aspose.Gis.Extent)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Extent.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>
            <see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Extent.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Extent.op_Equality(Aspose.Gis.Extent,Aspose.Gis.Extent)">
            <summary>
            Implements the '==' operator.
            </summary>
            <param name="left">First argument.</param>
            <param name="right">Second argument.</param>
            <returns>Value indicating whether arguments are equal.</returns>
        </member>
        <member name="M:Aspose.Gis.Extent.op_Inequality(Aspose.Gis.Extent,Aspose.Gis.Extent)">
            <summary>
            Implements the '!=' operator.
            </summary>
            <param name="left">First argument.</param>
            <param name="right">Second argument.</param>
            <returns>Value indicating whether arguments are not equal.</returns>
        </member>
        <member name="T:Aspose.Gis.Feature">
            <summary>
            A geographic feature composed of a geometry and user-defined attributes.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Feature.Geometry">
            <summary>
            Gets or sets geometry of the feature.
            Cannot be <see langword="null" />, use <see cref="P:Aspose.Gis.Geometries.Geometry.Null" /> to indicate missing geometry.
            </summary>
            <exception cref="T:System.ArgumentNullException" accessor="set">The value is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValue``1(System.String)">
            <summary>
            Gets the value of an attribute.
            </summary>
            <typeparam name="T">Desired type for the value.</typeparam>
            <param name="attributeName">Name of the attribute.</param>
            <returns>Value of the attribute.</returns>
            <remarks>
            This method converts the value automatically to the type requested in the generic type parameter.
            <br/>
            If the layer does not require its features to have values for all attributes defined for the layer,
            this method may fail with <see cref="T:System.InvalidOperationException" /> when a missing value is requested.
            When working with such layers, consider using <see cref="M:Aspose.Gis.Feature.GetValueOrDefault``1(System.String)" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
            <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValuesList``1(System.String,System.String,System.Int32)">
            <summary>
            Gets the values of an attributes sequence as a list.
            </summary>
            <typeparam name="T">Desired type for the values.</typeparam>
            <param name="attributeName">Name of the attribute.</param>
            <param name="separator">A string which is used to separate attribute name and index value of sequence.</param>
            <param name="count">Count of values to return (missed value fill as null)</param>
            <returns>List of values of the attributes which names different by sequence index value.</returns>
            <remarks>
            This uses <see cref="M:Aspose.Gis.Feature.GetValue``1(System.String)"/>  to get single value. So, this method converts the value automatically to the type requested in the generic type parameter.
            <br/>
            If attribute with index 0 will not be found it will generate <see cref="T:System.ArgumentException"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
            <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValue(System.String)">
            <summary>
            Gets the value of an attribute.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>Value of the attribute.</returns>
            <remarks>
            If the layer does not require its features to have values for all attributes defined for the layer,
            this method may fail with <see cref="T:System.InvalidOperationException" /> when a missing value is requested.
            When working with such layers, consider using <see cref="M:Aspose.Gis.Feature.GetValueOrDefault(System.String,System.Object)" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValueOrDefault``1(System.String)">
            <summary>
            Gets the value of an attribute, or <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> if the value is unset or <c>null</c>.
            </summary>
            <typeparam name="T">Desired type for the value.</typeparam>
            <param name="attributeName">Name of the attribute.</param>
            <returns>Value of the attribute.</returns>
            <remarks>
            This method converts the value automatically to the type requested in the generic type parameter.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
            <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValueOrDefault(System.String,System.Object)">
            <summary>
            Gets the value of an attribute, or <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> if the value is unset or <c>null</c>.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="defaultValue">The value to return if the attribute value is missing. Default value is <see langword="null" />. </param>
            <returns>Value of the attribute.</returns>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValueOrDefault``1(System.String,System.Object)">
            <summary>
            Gets the value of an attribute, or <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> if the value is unset or <c>null</c>.
            </summary>
            <typeparam name="T">Desired type for the value.</typeparam>
            <param name="attributeName">Name of the attribute.</param>
            <param name="defaultValue">The value to return if the attribute value is missing.</param>
            <returns>Value of the attribute.</returns>
            <remarks>
            This method converts the value automatically to the type requested in the generic type parameter.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
            <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.SetValue``1(System.String,``0)">
            <summary>
            Sets a new value of an attribute.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="attributeName">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
            <remarks>
            This method converts the value automatically to the type of the attribute.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidCastException">The type of the value does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.IsValueNull(System.String)">
            <summary>
            Determines whether the specified attribute has been explicitly set to <c>null</c> value.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>
            <see langword="true" /> if the attribute value is <c>null</c>; otherwise, <see langword="false" />.
            </returns>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.ArgumentNullException">The attribute name is <c>null</c>.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.SetValueNull(System.String)">
            <summary>
            Sets value of the attribute to <c>null</c>.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">Value of this attribute cannot be Null.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.UnsetValue(System.String)">
            <summary>
            Removes the attribute value from this feature.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">Value of this attribute cannot be unset.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.IsValueSet(System.String)">
            <summary>
            Checks if the attribute value is set in this feature.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>
            <see langword="true" /> if value for the specified attribute is set; otherwise, <see langword="false" />.
            </returns>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.CopyValues(Aspose.Gis.Feature)">
            <summary>
            Copies values of attributes from another feature.
            </summary>
            <param name="inputFeature">The feature to copy values from.</param>
            <remarks>
            This method only copies attributes with matching names.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">Input value is null an the attribute in this feature cannot be null.</exception>
            <exception cref="T:Aspose.Gis.GisException">An attribute has same name but different data types in the features.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValues(System.Object[],System.Object)">
            <summary>
            Returns the values for all the attributes in an array.
            </summary>
            <param name="values">The array into which to copy the attributes values.</param>
            <param name="defaultValue">
            The value to return if the attribute value is missing (unset). Default value is <see langword="null" />.
            Consider to use '<see cref="T:System.DBNull"/>.Value' for separating 'unset' and '<see langword="null" />' values.
            </param>
            <returns>A number of attributes copied.</returns>
            <remarks>
            The values attributes of the feature are copied into the values array that is passed as a parameter.
            For attributes with unset value, the specified 'unsetValue' parameter is returned.
            <br/>
            The length of the values array does not need to match the number of attributes in the feature.
            If the array length is greater than the number of attributes, all of the attribute values are copied into the array;
            if it is less, only the array length number of attribute values is copied into the array,
            starting at the attribute value with ordinal 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValuesDump(System.Object)">
            <summary>
            Returns the values for all the attributes in an array.
            Consider to use <see cref="M:Aspose.Gis.Feature.GetValues(System.Object[],System.Object)"/> method to avoid additional memory allocation.
            </summary>
            <param name="defaultValue">
            The value to return if the attribute value is missing (unset). Default value is <see langword="null" />.
            Consider to use '<see cref="T:System.DBNull"/>.Value' for separating 'unset' and '<see langword="null" />' values.
            </param>
            <returns>A new array into which to copy the attributes values.</returns>
            <remarks>
            The values attributes of the feature are copied into the values array that is passed as a parameter.
            For attributes with unset value, the specified 'unsetValue' parameter is returned.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.SetValues(System.Object[])">
            <summary>
            Sets new values for all of the attributes.
            Also consider to use <see cref="M:Aspose.Gis.Feature.CopyValues(Aspose.Gis.Feature)"/> method to streamline setting values in one call.
            </summary>
            <param name="values">The array of new values.</param>
            <returns>The number of attribute values set.</returns>
            <remarks>
            This method converts the each value automatically to the type of the attribute.
            <br/>
            The length of the values array does not need to match the number of attributes in the feature.
            If the array length is greater than the number of attributes, all of the array values are copied into the attributes;
            if it is less, only the array length number of values is copied into the attributes,
            starting at the attribute value with ordinal 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument cannot be <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidCastException">The type of the value does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.#ctor(Aspose.Gis.FeatureAttributeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Feature"/> class.
            </summary>
            <param name="attributes">Attributes collection.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.#ctor(Aspose.Gis.FeatureAttributeCollection,Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Feature"/> class.
            </summary>
            <param name="attributes">Attributes collection.</param>
            <param name="geometry">Geometry of the feature</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Feature.AttributeCollection">
            <summary>
            Gets attributes collection of this feature.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValueDangerous(System.String)">
            <summary>
            Get value of the attribute without any precautions.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>Value of the attribute.</returns>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The attribute does not exist in the collection.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValueDangerousOrNull(System.String)">
            <summary> Get value of the attribute without any precautions. Return 'null' If not exist. </summary>
        </member>
        <member name="M:Aspose.Gis.Feature.SetValueDangerous(System.String,System.Object)">
            <summary>
            Set value of the attribute without any precautions.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="value">Value of the attribute.</param>
            <remarks>
            Calling code must guarantee that:
            <ul>
            <li>Attribute with such name exists for the feature.</li>
            <li>Type of the <paramref name="value"/> matches underlying type for the attribute.</li>
            <li>If value is <see langword="null" />, the attribute is nullable.</li>
            </ul>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.WithGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Creates a new instance of the <see cref="T:Aspose.Gis.Feature"/> class with same attributes but new geometry.
            </summary>
            <param name="newGeometry">a new geometry.</param>
            <returns>A new instance of feature class.</returns>
            <remarks>
            For performance reasons, this features and the result of this method share the same storage of attributes,
            thus you should not modify attributes of this feature or attributes of result of this method.
            If for some reason we will need to modify features after.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Feature.#ctor(Aspose.Gis.FeatureAttributeCollection,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Feature.AttributesStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Feature"/> class.
            </summary>
            <param name="attributes">Attributes collection.</param>
            <param name="geometry">Geometry of the feature</param>
            <param name="storage">Storage of attribute values.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.GetValueOrDefaultImpl``1(Aspose.Gis.FeatureAttribute,System.Object)">
            <summary>
            Gets the value of an attribute, or <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> if the value is unset or <c>null</c>.
            </summary>
            <typeparam name="T">Desired type for the value.</typeparam>
            <param name="attribute">The attribute.</param>
            <param name="defaultValue">The value to return if the attribute value is missing.</param>
            <returns>Value of the attribute.</returns>
            <remarks>
            This method converts the value automatically to the type requested in the generic type parameter.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
            <exception cref="T:System.InvalidOperationException">The value of this attribute is not set for this feature.</exception>
            <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.FindLockedAttribute(System.String)">
            <summary>
            Finds an attribute by its name and checks that it's locked.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.FeatureAttribute" />.</returns>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The attribute with this name does not exist in this layer.</exception>
            <exception cref="T:System.InvalidOperationException">The attribute is not locked.</exception>
        </member>
        <member name="M:Aspose.Gis.Feature.ChangeType(System.Object,System.Type)">
            <summary>
            Converts a value to a desired type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetType">Desired type for the value.</param>
            <returns>Converted value.</returns>
            <exception cref="T:System.InvalidCastException">The requested type does not implement <see cref="T:System.IConvertible" />.</exception>
            <exception cref="T:System.InvalidCastException">Value of the attribute is <see langword="null" />, but the requested type is a value type.</exception>
            <exception cref="T:System.FormatException">Conversion failed because the value is in incorrect format.</exception>
            <exception cref="T:System.OverflowException">Conversion failed because of overflow.</exception>
        </member>
        <member name="T:Aspose.Gis.FeatureAttribute">
            <summary>
            An attribute of a <see cref="T:Aspose.Gis.Feature" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.#ctor(System.String,Aspose.Gis.AttributeDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.FeatureAttribute"/> class.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="dataType">The data type of the attribute.</param>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.#ctor(System.String,Aspose.Gis.AttributeDataType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.FeatureAttribute"/> class.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="dataType">The data type of the attribute.</param>
            <param name="canBeNull"><see langword="true" /> if this instance can be null; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.Name">
            <summary>
            Gets the name of the attribute.
            </summary>
            <value>
            The name of the attribute.
            </value>
            <exception cref="T:System.ArgumentNullException" accessor="set">The attribute name is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.DataType">
            <summary>
            Gets the data type of the attribute.
            </summary>
            <value>
            The data type of the attribute.
            </value>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.TypeName">
            <summary>
            The type name of the attribute.
            </summary>         
            <value>
            The type name is read only.
            </value>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.CanBeNull">
            <summary>
            Gets a value indicating whether this instance can be null.
            </summary>
            <value>
              <see langword="true" /> if this instance can be null; otherwise, <see langword="false" />.
            </value>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.CanBeUnset">
            <summary>
            Gets or sets a value indicating whether value for this attribute can be omitted.
            </summary>
            <value>
              <see langword="true" /> if this instance can be unset; otherwise, <see langword="false" />.
            </value>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.DefaultValue">
            <summary>
            Gets or sets a value for the attribute, that indicates missing data.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute does not allow <c>null</c> values.</exception>
            <remarks>
            This is the value representing a missing piece of information, when an attribute does not allow the <c>null</c> value.
            For attributes that do allow <c>null</c> values (<see cref="P:Aspose.Gis.FeatureAttribute.CanBeNull" /> == <c>true</c>), <see cref="P:Aspose.Gis.FeatureAttribute.DefaultValue" /> is <c>null</c> unless explicitly changed.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.HasCustomDefaultValue">
            <summary>
            Gets a value indicating whether the pre-defined default value for this attribute was overridden with a custom value.
            </summary>
            <value>
              <c>true</c> if this instance has a custom default value; otherwise, <c>false</c>.
            </value>
            <remarks>
            Unless <see cref="M:Aspose.Gis.FeatureAttribute.set_DefaultValue(System.Object)" /> was called, value of this property is <c>false</c>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.Width">
            <summary>
            Gets or sets maximum allowed width of character representation of the attribute.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.Precision">
            <summary>
            Gets or sets maximum number of decimal digits to store.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="set">The attribute is locked.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttribute.IsLocked">
            <summary>
            Gets a value indicating whether this attribute is locked.
            </summary>
            <value>
            <see langword="true" /> if this attribute is locked; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.Lock">
            <summary>
            Locks this attribute.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.#ctor(Aspose.Gis.FeatureAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.FeatureAttribute"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.FeatureAttribute" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.DropDefaultValue">
            <summary>
            Discards any custom default value if it is set.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FeatureAttribute.EnsureNotLocked">
            <summary>
            Throws an exception if this attribute is locked.
            </summary>
            <exception cref="T:System.InvalidOperationException">The attribute is locked.</exception>
        </member>
        <member name="T:Aspose.Gis.FeatureAttributeCollection">
            <summary>
            A <see cref="T:Aspose.Gis.FeatureAttributeCollection" /> defines what attributes are available for a <see cref="T:Aspose.Gis.Feature" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.FeatureAttributeCollection.Count">
            <summary>
            Gets the number of attributes in a <see cref="T:Aspose.Gis.Feature" />.
            </summary>
            <value>
            The number of attributes in a <see cref="T:Aspose.Gis.Feature" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.FeatureAttributeCollection.IsLocked">
            <summary>
            Gets a value indicating whether this attribute collection is locked.
            </summary>
            <value>
            <see langword="true" /> if this attribute collection is locked; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.FeatureAttributeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Gis.FeatureAttribute"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the attribute to get or set.</param>
            <returns>The attribute at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
            <exception cref="T:System.InvalidOperationException">Attempt to modify a locked collection.</exception>
        </member>
        <member name="P:Aspose.Gis.FeatureAttributeCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Gis.FeatureAttribute"/> with a specified name.
            </summary>
            <param name="name">Name of the attributes.</param>
            <returns>The attribute with the specified name, or <see langword="null" /> if it's not found.</returns>
            <exception cref="T:System.ArgumentNullException" accessor="get">The attribute name is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.Lock">
            <summary>
            Locks this attribute collection to prevent further modifications.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.Contains(System.String)">
            <summary>
            Determines whether the attribute collection contains an attribute with the specified name.
            </summary>
            <param name="name">Name of the attribute.</param>
            <returns>
            <see langword="true" /> if the attribute collection contains and attribute with the specified name; otherwise, <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.IndexOf(System.String)">
            <summary>
            Searches for the attribute and returns the its zero-based index.
            </summary>
            <param name="name">Name of the attribute.</param>
            <returns>The zero-based index of the attribute within the collection, if found; otherwise, –1.</returns>
            <exception cref="T:System.ArgumentNullException">The attribute name is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.Add(Aspose.Gis.FeatureAttribute)">
            <summary>
            Adds an attribute to the collection.
            </summary>
            <param name="attribute">The attribute to add.</param>
            <exception cref="T:System.ArgumentNullException">The attribute is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
            <exception cref="T:System.ArgumentException">An attribute with the same name already exists in the collection.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.Remove(System.String)">
            <summary>
            Removes the attribute from the collection.
            </summary>
            <param name="name">Name of the attribute.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.Remove(System.Int32)">
            <summary>
            Removes the attribute from the collection.
            </summary>
            <param name="index">Index of the attribute.</param>
            <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.FeatureAttributeCollection"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.AddOrAdjust(Aspose.Gis.FeatureAttributeCollection)">
            <summary>
            Adds or adjusts all attributes from argument. Width, precision and default value are erased.
            </summary>
            <param name="attributes">Attributes to add or adjust</param>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.AddOrAdjust(System.String,Aspose.Gis.AttributeDataType,System.Boolean,System.Boolean)">
            <summary>
            Adds an attribute to the attributes collection or adjust an existing attribute to accommodate the desired data type.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeType">Desired data type. Attribute type is adjusted between existing and specified.</param>
            <param name="canBeUnset">Whether attribute can be unset.</param>
            <param name="canBeNull">Whether attribute can be null.</param>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.AddOrAdjust(Aspose.Gis.FeatureAttribute)">
            <summary>
            Adds an attribute to the attributes collection or adjust an existing attribute to accommodate the desired data type.
            </summary>
            <param name="attribute">Attribute to add or adjust.</param>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.IndexOf(Aspose.Gis.FeatureAttribute)">
            <summary>
            Searches for the attribute and returns the its zero-based index.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>The zero-based index of the attribute within the collection, if found; otherwise, –1.</returns>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.Remove(Aspose.Gis.FeatureAttribute)">
            <summary>
            Removes the attribute from the collection.
            </summary>
            <param name="attribute">The attribute.</param>
            <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.Adjust(System.String,Aspose.Gis.AttributeDataType,System.Boolean,System.Boolean)">
            <summary>
            Adjust an existing attribute to accommodate the desired data type.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeType">Desired data type.</param>
            <param name="canBeUnset">Whether attribute can be unset.</param>
            <param name="canBeNull">Whether attribute can be null.</param>
        </member>
        <member name="M:Aspose.Gis.FeatureAttributeCollection.EnsureNotLocked">
            <summary>
            Throws an exception if this collection is locked.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection is locked.</exception>
        </member>
        <member name="T:Aspose.Gis.FeaturesSequence">
            <summary>
            <see cref="T:Aspose.Gis.FeaturesSequence"/> represents a set of vector features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the operation is not supported by the layer.</exception>
        </member>
        <member name="P:Aspose.Gis.FeaturesSequence.SpatialReferenceSystem">
            <summary> Gets spatial reference system of this features sequence. </summary>
            <value> Spatial reference system. Can be <see langword="null"/> if it is unknown. </value>
        </member>
        <member name="P:Aspose.Gis.FeaturesSequence.Attributes">
            <summary> Gets the collection of custom attributes for features in this <see cref="T:Aspose.Gis.VectorLayer" />. </summary>
            <value> The collection of attributes. </value>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.GetExtent">
            <summary> Gets a spatial extent of this layer. </summary>
            <returns>A spatial extent of this layer.</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.FeaturesSequence)">
            <summary>Filters features based on the union of all geometries in other features sequence.</summary>
            <param name="sequence">Other features sequence.</param>
            <returns>Features that intersect with the union of all geometries in other features sequence.</returns>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Geometries.IGeometry)">
            <summary>Filters features based on the provided geometry.</summary>
            <param name="geometry">Filter geometry.</param>
            <returns>Features that intersect with the provided geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Extent)">
            <summary>Filters features based on the extent.</summary>
            <param name="extent">Filter extent.</param>
            <returns>Features that intersect with the provided geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereGreater``1(System.String,``0)">
            <summary>Selects features with attribute value greater than the provided value.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <param name="value">Value to compare against.</param>
            <typeparam name="T">Type of the value to compare against.</typeparam>
            <returns>Features with attribute value greater than the provided value.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereGreaterOrEqual``1(System.String,``0)">
            <summary>Selects features with attribute value greater or equal to the provided value.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <param name="value">Value to compare against.</param>
            <typeparam name="T">Type of the value to compare against.</typeparam>
            <returns>Features with attribute value greater or equal to the provided value.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereSmaller``1(System.String,``0)">
            <summary>Selects features with attribute value smaller than the provided value.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <param name="value">Value to compare against.</param>
            <typeparam name="T">Type of the value to compare against.</typeparam>
            <returns>Features with attribute value smaller than the provided value.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereSmallerOrEqual``1(System.String,``0)">
            <summary>Selects features with attribute value smaller or equal to the provided value.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <param name="value">Value to compare against.</param>
            <typeparam name="T">Type of the value to compare against.</typeparam>
            <returns>Features with attribute value smaller or equal to the provided value.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereEqual``1(System.String,``0)">
            <summary>Selects features with attribute value equal to the provided value.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <param name="value">Value to compare against.</param>
            <typeparam name="T">Type of the value to compare against.</typeparam>
            <returns>Features with attribute value equal to the provided value.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereNotEqual``1(System.String,``0)">
            <summary>Selects features with attribute value not equal to the provided value.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <param name="value">Value to compare against.</param>
            <typeparam name="T">Type of the value to compare against.</typeparam>
            <returns>Features with attribute value not equal to the provided value.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereNull(System.String)">
            <summary>Selects features with attribute equal to null.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <returns>Features with attribute value equal to null.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereNotNull(System.String)">
            <summary>Selects features with attribute not equal to null.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <returns>Features with attribute value not equal to null.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereSet(System.String)">
            <summary>Selects features with attribute set.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <returns>Features with set attribute value.</returns>
            <exception cref="T:System.ArgumentException">No attribute with such name exists in this features sequence.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.WhereUnset(System.String)">
            <summary>Selects features where specified attribute is not set.</summary>
            <param name="attributeName">Attribute to filter by.</param>
            <returns>Features with unset attribute value.</returns>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(System.String,Aspose.Gis.FileDriver)">
            <summary> Saves features sequence to layer. </summary>
            <param name="destinationPath">Path to the output layer.</param>
            <param name="destinationDriver">The format driver for the output layer.</param>
            <exception cref="T:System.ArgumentNullException">Any argument is <see langword="null"/>.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
            <summary> Saves features sequence to layer. </summary>
            <param name="destinationPath">Path to the output layer.</param>
            <param name="destinationDriver">The format driver for the output layer.</param>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(System.String,Aspose.Gis.FileDriver,Aspose.Gis.SavingOptions)">
            <summary> Saves features sequence to layer. </summary>
            <param name="destinationPath">Path to the output layer.</param>
            <param name="destinationDriver">The format driver for the output layer.</param>
            <param name="options">Options for the saving procedure.</param>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options"/> is not supported by <paramref name="destinationDriver"/>.
            </exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.SaveTo(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.SavingOptions)">
            <summary> Saves features sequence to layer. </summary>
            <param name="destinationPath">Path to the output layer.</param>
            <param name="destinationDriver">The format driver for the output layer.</param>
            <param name="options">Options for the saving procedure.</param>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options"/> is not supported by <paramref name="destinationDriver"/>.
            </exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.SplitTo">
            <summary> Split features by geometry type. </summary>
            <returns> Layers with the same type of geometry. </returns>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.Cache">
            <summary> Gets version of this features sequence that caches features in memory</summary>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.CopyFeatures(Aspose.Gis.FeaturesSequence,Aspose.Gis.VectorLayer,Aspose.Gis.Formats.Common.WrapAttributesConverter)">
            <summary> Copies features from source to destination. </summary>
        </member>
        <member name="M:Aspose.Gis.FeaturesSequence.CopyAttributeValues(Aspose.Gis.Feature,Aspose.Gis.Feature,Aspose.Gis.Formats.Common.WrapAttributesConverter)">
            <summary> Copies attribute values from source feature to destination feature. </summary>
        </member>
        <member name="T:Aspose.Gis.FeatureStyle">
            <summary> The abstract root class of the feature styles hierarchy. </summary>
        </member>
        <member name="P:Aspose.Gis.FeatureStyle.Null">
            <summary> Gets an instance of null style. </summary>
        </member>
        <member name="M:Aspose.Gis.FeatureStyle.#ctor">
            <summary> Create new instance. </summary>
        </member>
        <member name="T:Aspose.Gis.FeatureStyle.NullFeatureStyle">
            <summary>
            Singleton class for Null style.
            </summary>
        </member>
        <member name="F:Aspose.Gis.FeatureStyle.NullFeatureStyle.Instance">
            <summary>
            The only instance of the <see cref="T:Aspose.Gis.FeatureStyle.NullFeatureStyle" />.
            </summary>
        </member>
        <member name="T:Aspose.Gis.FileDriver">
            <summary>
            A driver for a specific file based format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>
            Boolean value, indicating whether specified spatial reference system is supported by the driver.
            <see langword="null"/> is considered supported by any driver.
            </returns>
            <remarks>
            If spatial reference system is not supported, and you pass it to <see cref="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> method,
            a <see cref="T:System.NotSupportedException"/> will be thrown.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.FileDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.FileDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenLayer(System.String)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenLayer(Aspose.Gis.AbstractPath)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenLayer(System.String,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.DriverOptions)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
            <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
            <exception cref="T:System.NotSupportedException">Driver can not create vector layers (see <see cref="P:Aspose.Gis.FileDriver.CanCreateLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.EditLayer(System.String,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for editing.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.EditLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for editing.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.NotSupportedException">Driver can not edit layers.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <remarks>
            The driver creates an inner layer with all the features. But we have the option to use disk space instead RAM.
            There are drivers for more optimal use of resources (see the specific driver documentation).
            Also the driver can edit a layer If it can create and open the layers.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.FileDriver.CanOpenDatasets">
            <summary>
            Gets a value indicating whether this driver can open datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.FileDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenDataset(System.String)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenDataset(Aspose.Gis.AbstractPath)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenDataset(System.String,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.OpenDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateDataset(System.String)">
            <summary>
            Creates a dataset.
            </summary>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <param name="path">Path to the dataset.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateDataset(Aspose.Gis.AbstractPath)">
            <summary>
            Creates a dataset.
            </summary>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <param name="path">Path to the dataset.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateDataset(System.String,Aspose.Gis.DriverOptions)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.FileDriver.CreateDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error creating the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="T:Aspose.Gis.Filtering.AttributeFilter">
            <summary>
            A filter that represents selection of features based on attribute value.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.AttributeFilter.Filter">
            <summary> Filter to use. </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.AttributeFilter.AttributeName">
            <summary> Name of the attribute to filter by. </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.AttributeIndex">
            <summary>
            An implementation of <see cref="T:Aspose.Gis.Filtering.IAttributeIndex"/> that works over vector layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.AttributeIndex.#ctor(Aspose.Gis.VectorLayer,Aspose.Gis.Indexing.BPlusTree.BPlusTree{Aspose.Gis.Filtering.AttributeValue},System.Boolean)">
            <summary> Creates new instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.AttributeIndex.Select(Aspose.Gis.Indexing.ValuesRangesList{Aspose.Gis.Filtering.AttributeValue})">
            <summary> Selects features from the provided values range. </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.AttributeValue">
            <summary>
            Represents a value of the attribute. Unites value and 'is set' flag.
            Attribute values are ordered.
            The smallest AttributeValue is <see cref="P:Aspose.Gis.Filtering.AttributeValue.Unset"/>.
            The next smallest AttributeValue is <see cref="P:Aspose.Gis.Filtering.AttributeValue.Null"/>.
            Then all values are ordered by their <see cref="P:Aspose.Gis.Filtering.AttributeValue.Value"/> property.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Filtering.AttributeValue.UnsetValue">
            <summary> We use some random object as a marker of 'unset' value. </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.AttributeValue.Unset">
            <summary> Get's a value representing an unset attribute. </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.AttributeValue.Null">
            <summary> Get's a value representing a null attribute. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.AttributeValue.Create(System.Object)">
            <summary>
            Creates new instance that represents the provided value.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.AttributeValue.Create(Aspose.Gis.Feature,System.String)">
            <summary>
            Creates new instance that represents value of the specifies attribute in the provided feature.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.AttributeValue.IsSet">
            <summary> Gets a value indicating whether this attribute is set. </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.AttributeValue.IsNull">
            <summary> Gets a value indicating whether this attribute is null. </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.AttributeValue.Value">
            <summary> Gets a value of the attribute. </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.CachingVectorLayer">
            <summary>
            This vector layer caches features in memory.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.FilterFeaturesSequence">
            <summary>
            A features sequence that applies number of filters to another sequence.
            </summary>
            <remarks>
            From the implementation perspective, every method of filter features sequence adds filter into collection of filters.
            Then, this collection is used to filter input features in 'GetEnumerator' method.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Filtering.FilterFeaturesSequence.#ctor(Aspose.Gis.FeaturesSequence)">
            <summary>
            Creates new instance that will filter features from the argument.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.FilterFeaturesSequence.GetEnumerator">
            <summary>
            Enumerates features of the base sequence with all filters applied.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.FilterFeaturesSequence.AttributeValuesRanges">
            <summary> A mapping from attribute name to values ranges selected by filters applied to the attribute. </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.IAttributeIndex">
            <summary> Attribute index. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.IAttributeIndex.Select(Aspose.Gis.Indexing.ValuesRangesList{Aspose.Gis.Filtering.AttributeValue})">
            <summary> Selects features by values range list. </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.ISpatialIndex">
            <summary> Spatial index. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.ISpatialIndex.GetNearestTo(System.Double,System.Double)">
            <summary> Gets feature nearest to the provided coordinates. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.ISpatialIndex.Select(Aspose.Gis.Common.BoundingRectangle)">
            <summary> Selects features by rectangle. </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.LayerAttributeValuesProvider">
            <summary>
            Values provider for the <see cref="T:Aspose.Gis.Indexing.BPlusTree.BPlusTree`1"/> that gets attributes value from the layer.
            Values are compared in such way that 'unset' values are smaller than all 'set' values. 'null's are smaller than not nulls.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.LayerAttributeValuesProvider.#ctor(Aspose.Gis.VectorLayer,System.String)">
            <summary>
            Creates new instance.
            </summary>
            <param name="layer">Layer to take values from.</param>
            <param name="attributeName">Name of the attribute to take values from.</param>
        </member>
        <member name="T:Aspose.Gis.Filtering.LayerIndices">
            <summary>
            Storage for indices added to the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.LayerIndices.AddAttributeIndex(System.String,Aspose.Gis.AbstractPath)">
            <summary> Adds provided index to the collection. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.LayerIndices.AddSpatialIndex(Aspose.Gis.AbstractPath)">
            <summary> Adds spatial index. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.LayerIndices.HasAttributeIndex(System.String)">
            <summary> Gets a value indicating whether attribute index exists. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.LayerIndices.GetAttributeIndex(System.String)">
            <summary> Gets an index for the provided attribute. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.LayerIndices.HasSpatialIndex">
            <summary> Gets a value indicating whether spatial index exists. </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.LayerIndices.GetSpatialIndex">
            <summary> Gets spatial index. </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.SpatialIndex">
            <summary>
            An implementation of <see cref="T:Aspose.Gis.Filtering.ISpatialIndex"/> that works over <see cref="T:Aspose.Gis.VectorLayer"/>.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Filtering.SrsTransformingFeaturesSequence">
            <summary>
            A decorating features sequence, that transforms all geometries via <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> provided in constructor.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Filtering.SrsTransformingFeaturesSequence.#ctor(Aspose.Gis.FeaturesSequence,Aspose.Gis.SpatialReferencing.SpatialReferenceSystemAdjuster)">
            <summary>
            Creates new instance that transforms geometries of the <paramref name="featuresSequence"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Filtering.SrsTransformingFeaturesSequence.SpatialReferenceSystem">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Filtering.SrsTransformingFeaturesSequence.Attributes">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Filtering.SrsTransformingFeaturesSequence.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Filtering.SrsTransformingFeaturesSequence.GetExtent">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.AttributesNamesResolver">
            <summary>
            This class resolves names of attributes by the specified limitations.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.AttributesNamesResolver.#ctor(System.Int32,System.Char)">
            <summary>
            Create an instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.AttributesNamesResolver.ResolveNames(Aspose.Gis.FeatureAttributeCollection)">
            <summary>
            Resolves new names of attributes, so they conformant with limitations and still unique.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.AttributesNamesResolver.MakeUniqueAttributeName(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Transforms name so it is not contained in 'usedNames' collection.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.CurvesValidator">
            <summary>
            Performs some basic geometry validations on line strings and linear rings,
            like number of points in line string or linear ring and so on.
            </summary>
            <remarks>
            This class is thread safe and can be used from multiple threads after the creation. You are recommended to
            create one static instance per one write VectorLayer.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.CurvesValidator.EnsureTwoPointsInLineString(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Throws <see cref="T:Aspose.Gis.GisException"/> if there are less then two points in <paramref name="line"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.CurvesValidator.EnsureFourPointsInLinearRing(Aspose.Gis.Geometries.ILinearRing)">
            <summary>
            Throws <see cref="T:Aspose.Gis.GisException"/> if there are less then four points in <paramref name="ring"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.CurvesValidator.EnsureIsClosed(Aspose.Gis.Geometries.ILinearRing)">
            <summary>
            Throws <see cref="T:Aspose.Gis.GisException"/> if first point of <paramref name="ring"/> not equal to the last one.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.CurvesValidatorFlags">
            <summary>
            Flags used to tweak <see cref="T:Aspose.Gis.Formats.Common.CurvesValidator"/> behavior.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.CurvesValidatorFlags.None">
            <summary> No flags. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.CurvesValidatorFlags.EnsureTwoPointsInLineString">
            <summary> Ensure that line strings have two points. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.CurvesValidatorFlags.EnsureFourPointsInLinearRing">
            <summary> Ensure that linear rings have four points. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.CurvesValidatorFlags.EnsureLinearRingIsClosed">
            <summary> Ensure that linear rings are closed. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.CurvesValidatorFlags.EnsureCircularStringPointCount">
            <summary> Ensure that circular strings have odd number of points and at least three points. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.CurvesValidatorFlags.ValidateStandaloneRingsAsRings">
            <summary>
            If set, linear rings that are not part of polygon are validated as linear rings.
            Otherwise, linear rings that are not part of a polygon are validated as line strings.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.DatasetWriteLayer">
            <summary>
            A write only layer, that creates a dataset, adds one layer into it and writes into it.
            This can be used in order to implement a <see cref="M:Aspose.Gis.FileDriver.CreateLayer(System.String)"/> for drivers that can <see cref="M:Aspose.Gis.FileDriver.CreateDataset(System.String)"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.DatasetWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Create new instance.
            </summary>
            <param name="path">Path to the new dataset.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Options to use.</param>
            <param name="srs">Spatial reference system to use.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.DatasetWriteLayer.Driver">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.DatasetWriteLayer.GeometryType">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.DatasetWriteLayer.SpatialReferenceSystem">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.DatasetWriteLayer.Count">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.DatasetWriteLayer.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.DatasetWriteLayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.DatasetWriteLayer.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.DatasetWriteLayer.Add(Aspose.Gis.Feature,Aspose.Gis.IFeatureStyle)">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Editable.EditableLayer">
            <summary>
            This class implements general algorithms to edit vector-based formats.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.EditableLayer.#ctor(Aspose.Gis.FileDriver,Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Create an instance of <see cref="T:Aspose.Gis.Formats.Common.Editable.EditableLayer"/>
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.EditableLayer.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Editable.EditableLayer.SpatialReferenceSystem">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Editable.EditableLayer.GeometryType">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Editable.EditableLayer.Driver">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.EditableLayer.Add(Aspose.Gis.Feature,Aspose.Gis.IFeatureStyle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.EditableLayer.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.EditableLayer.ReplaceAt(System.Int32,Aspose.Gis.Feature)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.EditableLayer.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Editable.IStreamFactory">
            <summary>
            Allows you to create streams.
            Used to determine the strategy of using memory (disk or RAM)
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.IStreamFactory.CreateStream">
            <summary> Create a new stream. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Editable.MultiStreamPath">
            <summary>
            This class works with formats which contains several files.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.IO.Stream},Aspose.Gis.Formats.Common.Editable.IStreamFactory)">
            <summary> Create an instance of <see cref="T:Aspose.Gis.Formats.Common.Editable.MultiStreamPath"/>. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.#ctor(System.String,Aspose.Gis.Formats.Common.Editable.IStreamFactory)">
            <summary> Create an instance of <see cref="T:Aspose.Gis.Formats.Common.Editable.MultiStreamPath"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.Storage">
            <summary> Collection of created streams. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.Location">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.Separator">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.IsFile">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.Delete">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.Open(System.IO.FileAccess)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.ListDirectory">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MultiStreamPath.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Editable.MemoryStreamFactory">
            <summary>
            Implements <see cref="T:Aspose.Gis.Formats.Common.Editable.IStreamFactory"/> using a RAM memory.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Editable.MemoryStreamFactory.CreateStream">
            <summary>
            Create a memory stream.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.EvaluationEnumerator">
            <summary>
            An evaluation enumerator is a decorator around enumerator of features that calls
            <see cref="M:Aspose.Gis.VectorLayer.ReportFeature"/> in <see cref="M:Aspose.Gis.Formats.Common.EvaluationEnumerator.MoveNext"/>.
            Evaluation enumerator can be used by vector layers  in order to implement
            <see cref="M:Aspose.Gis.FeaturesSequence.GetEnumerator"/>.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.FileOrWebLoader">
            <summary>
            Allows to load local files or Urls.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.FileOrWebLoader.CreatePath(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Formats.Common.IFileLoader">
            <summary>
            Interface for implementation of the resources loader.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.IFileLoader.CreatePath(System.String)">
            <summary>
            Load resource by specified path.
            </summary>
            <param name="resource"> Path to a resource. It can be a URL or a path to a local file. </param>
            <returns>The path.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Json.JsonAttributesExtractor">
            <summary>
            Extracts attributes of features from JSON values. To be used in pair with <see cref="T:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder"/>.
            While <see cref="T:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder"/> creates an attribute schema, this class populates features with data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonAttributesExtractor.ParseProperties(Aspose.Gis.Feature,Newtonsoft.Json.Linq.JObject,System.String,System.Boolean)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Formats.Common.Json.JsonAttributesExtractor.ParseProperty(Aspose.Gis.Feature,System.String,Newtonsoft.Json.Linq.JToken,System.String,System.Boolean)"/> for all properties in the argument.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonAttributesExtractor.ParseProperty(Aspose.Gis.Feature,System.String,Newtonsoft.Json.Linq.JToken,System.String,System.Boolean)">
             <summary>
             Recursively sets attributes.
             </summary>
             <param name="name">Name of the attribute.</param>
             <param name="value">JSON value to parse.</param>
             <param name="feature">Feature to populate with data.</param>
             <param name="nestedPropertiesSeparator">
             A string that is used to separate components of nested attributes.
             </param>
             <param name="isArrayAsString">Parse array properties as string or not</param>
             <example>
             ParseProperty for name "key" and the following json
             {"subkey1": "value", "subkey2": 1}
             Will set three attributes:
             "key" = ""
             ("key" + nestedPropertiesSeparator + "subkey1") = "value"
             ("key" + nestedPropertiesSeparator + "subkey2") = 1
            
             ParseProperty for name "arr" and the following json:
             ["text", 3]
             "arr_0" = "text"
             "arr_1" = 3
             </example>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Json.JsonDoublesValidator">
            <summary>
            Ensures that there are NaNs or Infinities since they are not part of JSON specification.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonDoublesValidator.ValidateAttribute(Aspose.Gis.Feature,Aspose.Gis.FeatureAttribute)">
            <summary>
            Ensures that specified features attribute is not a double with invalid value
            </summary>
            <param name="feature">Feature to check.</param>
            <param name="attribute">Attribute to check.</param>
            <exception cref="T:Aspose.Gis.GisException">
            Attribute is double AND it is set for the feature AND its value is invalid.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonDoublesValidator.ValidateGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Ensures that specified geometry does not contain invalid doubles.
            </summary>
            <param name="geometry"> Geometry to check. </param>
            <exception cref="T:Aspose.Gis.GisException">
            Geometry contains an invalid double.
            </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Json.JsonError">
            <summary>
            Factory methods for JSON parsing exceptions.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonError.WrongArrayMember(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            Creates an exception that claims that type of array member is invalid.
            </summary>
            <param name="member">Member.</param>
            <param name="expectedType">Expected type of the element.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonError.MissingObjectMember(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            Creates an exception that claims that object must have a member of particular type.
            </summary>
            <param name="jobject">Object.</param>
            <param name="memberName">Name of the member.</param>
            <param name="expectedType">Expected type of the member.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonError.WrongObjectMember(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            Creates an exception that claims that object member has wrong type.
            </summary>
            <param name="jobject">Object.</param>
            <param name="memberName">Name of the member.</param>
            <param name="expectedType">Expected type of the member.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonError.Parsing(System.String,Newtonsoft.Json.IJsonLineInfo)">
            <summary>
            Creates a general purpose error.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonError.Parsing(System.String,System.Int32,System.Int32)">
            <summary>
            Creates a general purpose error.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonError.GetTokenTypeName(Newtonsoft.Json.Linq.JTokenType)">
            <summary>
            Gets a name of the token type.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods">
            <summary>
            Extension methods to JToken
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.ToDouble(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses argument to double.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.ToInteger(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses argument to integer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.ToLong(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses argument to long.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.RequireObject(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets a sibling of an object with specified name. Ensured that it has type Object.
            </summary>
            <exception cref="T:Aspose.Gis.GisException">
            Sibling does not exist or has wrong type.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.RequireString(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets a sibling of an object with specified name. Ensured that it has type String.
            </summary>
            <exception cref="T:Aspose.Gis.GisException">
            Sibling does not exist or has wrong type.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.RequireStringOrNull(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets a sibling of an object with specified name. Ensured that it has type String or Null.
            </summary>
            <exception cref="T:Aspose.Gis.GisException">
            Sibling does not exist or has wrong type.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.RequireObjectOrNull(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets a sibling of an object with specified name. Ensured that it has type Object or Null.
            </summary>
            <exception cref="T:Aspose.Gis.GisException">
            Sibling does not exist or has wrong type.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.RequireArray(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets a sibling of an object with specified name. Ensured that it has type Array.
            </summary>
            <exception cref="T:Aspose.Gis.GisException">
            Sibling does not exist or has wrong type.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.RequireArrayOfObjects(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets a sibling of an object with specified name. Ensured that it has type Array and all elements
            inside the Array has type Object.
            </summary>
            <exception cref="T:Aspose.Gis.GisException">
            Sibling does not exist or has wrong type.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonExtensionMethods.RequireArrayOfArrays(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets a sibling of an object with specified name. Ensured that it has type Array and all elements
            inside the Array has type Array.
            </summary>
            <exception cref="T:Aspose.Gis.GisException">
            Sibling does not exist or has wrong type.
            </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder">
            <summary>
            Creates an <see cref="T:Aspose.Gis.FeatureAttributeCollection"/> from a set of JSON values.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Create new instance.
            </summary>
            <param name="nestedPropertiesSeparator">
            A string that is used to separate components of nested attributes.
            </param>
            <param name="isArrayAsString">Parse array properties as string or not</param>
            <param name="isDateAsString">Parse date/time/date-time properties as string or not</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder.AddOrAdjustAttribute(Aspose.Gis.FeatureAttribute)">
            <summary>
            Directly adds attribute into attributes collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder.GetAttributes">
            <summary>
            Gets a result attributes collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder.ParseProperties(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder.ParseProperty(System.String,Newtonsoft.Json.Linq.JToken)"/> for all properties in the argument.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Json.JsonSchemaBuilder.ParseProperty(System.String,Newtonsoft.Json.Linq.JToken)">
             <summary>
             Recursively adds new attributes or adjusts existing attributes.
             </summary>
             <param name="name">Name of the attribute.</param>
             <param name="value">Value to accommodate.</param>
             <example>
             ParseProperty for name "key" and the following json
             {"subkey1": "value", "subkey2": 1}
             Will add or adjust three attributes:
             "key" of type string
             ("key" + nestedPropertiesSeparator + "subkey1") of type string
             ("key" + nestedPropertiesSeparator + "subkey2") of type int
            
             ParseProperty for name "arr" and the following json:
             ["text", 3]
             "arr_0" of type string
             "arr_1" of type int
             </example>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.MapInfo.MapInfoGeometryCreator">
            <summary>
            Creates <see cref="T:Aspose.Gis.Geometries.Geometry"/> from <see cref="T:Aspose.Gis.Common.Formats.MapInfo.GraphicalObjects.GraphicalObject"/>.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer">
            <summary>
            Read vector layer that 'bridges' interfaces from <c>Aspose.Gis.Common.Formats.MapInfo</c> to VectorLayer API.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.#ctor(Aspose.Gis.FileDriver,System.Collections.Generic.IReadOnlyList{Aspose.Gis.Common.Formats.MapInfo.Column},Aspose.Gis.Common.Formats.MapInfo.CoordinateSystem,Aspose.Gis.Common.Formats.MapInfo.IGraphcialObjectsFile,Aspose.Gis.Common.Formats.MapInfo.IDataRowsFile,System.String,Aspose.Gis.DriverOptions)">
            <summary>
            Create new instance.
            </summary>
            <param name="driver">
            Driver that instantiated this object.
            </param>
            <param name="columns">
            List of MapInfo columns. This are used to create <see cref="T:Aspose.Gis.FeatureAttributeCollection"/>.
            </param>
            <param name="coordinateSystem">
            MapInfo coordinate system.
            </param>
            <param name="graphicalObjectsFile">
            File that reads MapInfo graphical objects.
            If null - layer assumes that all graphical objects are <see cref="T:Aspose.Gis.Common.Formats.MapInfo.GraphicalObjects.None"/>.
            </param>
            <param name="dataRowsFile">
            File that reads MapInfo data rows (attributes values).
            If null - layer assumes that there are no data (and no attributes values).
            </param>
            <param name="textStringAttribute">
            Name of the text string attribute. <see cref="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.TextStringAttribute"/>.
            </param>
            <param name="driverOptions"> Driver options. </param>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.GeometryType">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.SpatialReferenceSystem">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.Driver">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.Count">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.EnsureCountsMatch">
            <summary>
            Ensures that number of elements in <see cref="F:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.graphicalObjectsFile"/> and <see cref="F:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.dataRowsFile"/> are equal.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.MapInfo.MapInfoReadLayer.BuildFeature(Aspose.Gis.Common.Formats.MapInfo.GraphicalObjects.GraphicalObject,Aspose.Gis.Common.Formats.MapInfo.IDataRow)">
            <summary>
            Creates feature from MapInfo graphical object and MapInfo data row.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.MapInfo.MapInfoSpatialReferenceSystemCreator">
            <summary>
            Creates <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> from <see cref="T:Aspose.Gis.Common.Formats.MapInfo.CoordinateSystem"/>
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Common</c> namespace provides utility classes for working with various formats.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.ReadVectorWrapper">
            <summary>
            Wrapper of Read Layer to process anything after reading.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.SingleLayeredDataset">
            <summary>
            A dataset with one read-only layer. This class can be used in order to provide a dataset API to classes that
            support only vector layer API.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.SingleLayeredDataset.#ctor(Aspose.Gis.FileDriver,Aspose.Gis.AbstractPath)">
            <summary>
            Create new instance.
            </summary>
            <param name="driver">Driver to use in order to open file.</param>
            <param name="path">Path to the file.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.SingleLayeredDataset.Driver">
            <summary>
            Driver of the underlying layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.SingleLayeredDataset.LayersCount">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.SingleLayeredDataset.GetLayerName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.SingleLayeredDataset.OpenLayer(System.String,Aspose.Gis.DriverOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.SingleLayeredDataset.OpenLayerAt(System.Int32,Aspose.Gis.DriverOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.SingleLayeredDataset.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.DbCommandExtensions">
            <summary> Extensions to IDBCommand. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.DbCommandExtensions.ExecuteAndSelect``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})">
            <summary>
            Executes command and invokes callback for every row.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.DbCommandExtensions.AddParameters(System.Data.IDbCommand,System.ValueTuple{System.String,System.Object}[])">
            <summary> Creates and adds parameters to the command. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.DbCommandExtensions.AddParameter(System.Data.IDbCommand,System.String,System.Object)">
            <summary> Creates and adds parameter to the command. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.DbCommandExtensions.CreateParameter(System.Data.IDbCommand,System.String,System.Object)">
            <summary> Creates parameter parameter and sets its name and value. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions">
            <summary>
            Information about INFORMATION_SCHEMA.COLUMNS table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.TableName">
            <summary> Name of the table where column is located. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.ColumnName">
            <summary> Name of the column. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.IsNullable">
            <summary> Whether column is nullable. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.CharacterMaximumLength">
            <summary> Number of characters for VARCHAR type. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.DataType">
            <summary> Type of the column. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.NumericPrecision">
            <summary> Precision of the floating point types. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.NumericScale">
            <summary> Number of digits before floating point types point. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.NumericPrecisionRadixColumnName">
            <summary> Radix of the floating point type precision. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.FeaturesColumnsDefinitions.DateTimePrecision">
            <summary> Precision of the date time types. Actual for MS SQL. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.Definitions.GeometryColumnsDefinitions">
            <summary> Information an appended geometry in query. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.Definitions.SpatialRefSysDefinitions">
            <summary> Information about spatial reference systems query. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.Definitions.SpatialTableDefinitions">
            <summary> Stores information about table in SQL with geometry columns. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.SpatialTableDefinitions.TableName">
            <summary> Name of the table. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.Definitions.SpatialTableDefinitions.GeometryColumns">
            <summary> List of geometry columns. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.Definitions.SpatialTablesDefinitions">
            <summary> Information about spatial tables query. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.GeometryColumnInfo">
            <summary> Information about geometry column in SQL database. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.GeometryColumnInfo.TableName">
            <summary> Name of the table where geometry column is located. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.GeometryColumnInfo.ColumnName">
            <summary> Name of the column within a table. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.GeometryColumnInfo.TypeName">
            <summary> Name of the geometry type. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.ISqlDataWriter">
            <summary> Defines a write strategy for the specified database driver. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.ISqlSpatialRefSysReader">
            <summary> Load the spatial reference systems from database. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo">
            <summary>
            Stores information about column in SQL table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.TableName">
            <summary> Name of the table where column is. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.ColumnName">
            <summary> Name of the column </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.DataTypeName">
            <summary> Data type name as specified in 'APPLICATION_SCHEMA.COLUMNS' table. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.DataType">
            <summary> Data type object found for the <see cref="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.DataTypeName"/> type. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.IsNullable">
            <summary> Whether column is nullable. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.CharacterMaximumLength">
            <summary> Maximum length for varchar type. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.NumericPrecision">
            <summary> Precision for floating point types (total number of digits). </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.NumericPrecisionRadix">
            <summary> Base of <see cref="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.NumericPrecision"/> and <see cref="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.NumericPrecisionRadix"/> values. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlColumnInfo.NumericScale">
            <summary> Number of digits after dot for floating point types. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlDataset">
            <summary> Represents a collection of layers in SQL Server database. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlDataset.#ctor(Aspose.Gis.Formats.Common.Sql.SqlProvider)">
            <summary> Creates new instance. </summary>
            <param name="provider">Provider used to create objects to interact with the database.</param>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlDataType">
            <summary> A definition of type in SQL database. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlDataType.#ctor(Aspose.Gis.Formats.Common.Sql.SqlDataTypeKind,System.String)">
            <summary> Creates new instance.</summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlDataType.NameInInformationSchema">
            <summary> Name of the type in the INFORMATION_SCHEMA.COLUMNS table. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlDataType.Kind">
            <summary> Kind of the type defines to what Aspose.GIS this attribute can be casted. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlDataType.DefaultWidth">
            <summary> Width to be used if no width is specified in "INFORMATION_SCHEMA.COLUMNS" table. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlDataTypeKind">
            <summary>
            Determines how SQL type must be exported to AttributeDataType
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlDataTypesRegistry">
            <summary> Registry with info about SQL types.. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlEnumerator">
            <summary> Enumerates features in SQL read layer </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlError">
            <summary> Factory methods for error happen during reading SQL database. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlGeometryReader">
            <summary> Reads geometries from IDataReader. Grows internal buffer as needed, so should be reused. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlGeometryReader.#ctor(Aspose.Gis.Formats.Common.Sql.Definitions.GeometryColumnsDefinitions,Aspose.Gis.Formats.Common.Sql.ISqlSpatialRefSysReader)">
            <summary> Creates new instance that reads geometry from the specified field in IDataReader. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlGeometryReader.FieldsCount">
            <summary> Fields count occupied by geometry data. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlGeometryReader.Read(System.Data.IDataReader)">
            <summary> Read a geometry (including srs) from the specified reader. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlLayerSchema">
            <summary> A schema information regarding SQL layer. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlLayerSchemaBuilder">
            <summary> Builds attributes schema for SQL layer. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlProvider">
            <summary> Creates objects that interact with SQL database. </summary>
            <remarks> Inheritors may override some methods if needed to change parts of behavior for some SQL databases. </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlProvider.Driver">
            <summary> Gets driver that instantiated this provider. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlProvider.IsCaseSensitive">
            <summary> Determine the case sensitivity of tables in this provider. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlProvider.Connection">
            <summary> Gets connection that was passed in constructor. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateDataset">
            <summary> Creates an SQL dataset.</summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateReadLayer(Aspose.Gis.Formats.Common.Sql.SqlDataset,Aspose.Gis.Formats.Common.Sql.Definitions.SpatialTableDefinitions,Aspose.Gis.DriverOptions)">
            <summary> Creates a layer that can be used to read features. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateQueryBuilder">
            <summary> Creates an object that can be used to build a query to SQL database.</summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateSpatialTablesReader">
            <summary> Creates an object that maintains list of spatial tables. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateLayerSchemaBuilder">
            <summary> Creates enumerator that enumerates features in layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateEnumerator(Aspose.Gis.Formats.Common.Sql.SqlReadLayer)">
            <summary> Creates an object that is capable of creating layers schema. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateDataTypesRegistry">
            <summary> Creates an object that holds info about types supported by this SQL provider. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateSrsReader">
            <summary> Creates an object that reads SRS definitions from SQL database. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateWriteLayer(Aspose.Gis.Formats.Common.Sql.SqlDataset,System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary> Creates a layer that can be used to append features. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.CreateEditLayer(Aspose.Gis.Formats.Common.Sql.SqlDataset,System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary> Creates a layer that can be used to append features in an exist layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.AppendSpatialTablesQuery(Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder)">
            <summary> Query all layers (tables with spatial column). </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.AppendFeaturesColumnsQuery(Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder,System.String)">
            <summary> Query features (names, types, precisions e.t.). </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.AppendSrsRowsQuery(Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder)">
            <summary> Query spatial reference systems available in the database. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.AppendSrsInsertRowQuery(Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary> Insert spatial reference systems in the database. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.AppendGeometryColumn(Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder,Aspose.Gis.Formats.Common.Sql.SqlReadLayer)">
            <summary> Append geometry column in query. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.AppendAttributeColumn(Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder,Aspose.Gis.Formats.Common.Sql.SqlReadLayer,Aspose.Gis.FeatureAttribute)">
            <summary> Append Attribute column in query. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.TrySpecifyGeometryType(System.String,Aspose.Gis.Geometries.GeometryType@)">
            <summary> Map a geometry type between database versus feature. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlProvider.QueryTotalUsedSpace(System.String)">
            <summary> Query total amount bytes of space used by data. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder">
            <summary> Builds SQL query. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.CreateCommand">
            <summary> Creates command for this query. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.Append(System.String)">
            <summary>Appends text to the query as is.</summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.Append(System.Int32)">
            <summary>Appends an integer convert to string to the query.</summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.AppendString(System.String)">
            <summary>Appends escaped string to the query.</summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.AppendIdentifier(System.String)">
            <summary>Appends SQL identifier such as column or table name.</summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.AppendParameter(System.Object,System.String,System.Nullable{System.Data.DbType})">
            <summary> Appends the provided. And add parameter in command. </summary>
            <param name="parameterValue">Value of the parameter.</param>
            <param name="name">Name of the parameter. Auto generated name is used if not passed.</param>
            <param name="dbType">Specified dbType of the parameter. Default db typed is used is used if not passed.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.SetParameter(System.Object,System.String,System.Nullable{System.Data.DbType})">
            <summary> Include parameter in command. </summary>
            <param name="parameterValue">Value of the parameter.</param>
            <param name="name">Name of the parameter. Auto generated name is used if not passed.</param>
            <param name="dbType">Specified dbType of the parameter. Default db typed is used is used if not passed.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlQueryBuilder.AppendAliasName(System.String)">
            <summary> Aliases are used to give a table, or a column in a table, a temporary name. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlReadLayer">
            <summary> A layer that reads features from SQL table. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlReadLayer.#ctor(Aspose.Gis.Formats.Common.Sql.SqlProvider,Aspose.Gis.Formats.Common.Sql.SqlDataset,Aspose.Gis.Formats.Common.Sql.Definitions.SpatialTableDefinitions,Aspose.Gis.DriverOptions)">
            <summary> Creates new instance. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlSpatialRefSysReader">
            <summary> Reads SRS from system table. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlSpatialRefSysReader.SpatialRefSysRecord">
            <summary> Table schema of SRS in SQL database. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlSpatialTablesManager">
            <summary> Reads tables with geometry column. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlSpatialTablesManager.ReadGeometryColumns">
            <summary> Reads list of geometry columns from SQL database. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlSpatialTablesManager.ReadSpatialTables">
            <summary> Extracts all spatial table names from the database. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.Sql.SqlWriteLayer">
            <summary>
            A layer that writes features to PostGIS table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlWriteLayer.Driver">
            <summary> Gets the <see cref="P:Aspose.Gis.Formats.Common.Sql.SqlWriteLayer.Driver" /> that instantiated this layer. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlWriteLayer.GeometryType">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.Common.Sql.SqlWriteLayer.Count">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Common.Sql.SqlWriteLayer.GetPreprocessingFlags">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Formats.Common.StreamSwapper">
            <summary> This class helps to swap stream bytes. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.StreamSwapper.OpenAndMoveToTarget(Aspose.Gis.AbstractPath)">
            <summary> Open the stream with "ReadWrite" access. And move bytes of the stream to the target. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.StreamSwapper.MoveToTarget(System.IO.Stream)">
            <summary> Move stream bytes to the target. The stream must have ReadWrite access.</summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.WrapAttributeInfo">
            <summary>
            This model contains change information for an attribute in <see cref="T:Aspose.Gis.Formats.Common.WrapAttributesConverter"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.WrapAttributeInfo.ProtoName">
            <summary> Attribute name in the source layer. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.WrapAttributeInfo.IsTypeChanged">
            <summary> Indicates that the attribute type has changed in the destination layer. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.WrapAttributesConverter">
            <summary>
            This class allows us to collect change information for the specified converter.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WrapAttributesConverter.ModifyAttribute(Aspose.Gis.FeatureAttribute,Aspose.Gis.AttributesConverterActions)">
            <summary> Apply the base converter and allows us to collect change info. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WrapAttributesConverter.GetChangeInfo(System.String)">
            <summary> Returns change information for the specified attribute name. </summary>
            <param name="attributeName">Modified attribute name.</param>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.WriteVectorLayer">
            <summary>
            Base class for write only <see cref="T:Aspose.Gis.VectorLayer"/>s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.Initialize(Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Performs initialization. This method should be first method called in inheritors.
            We should use constructor, but we can not because of error in Eazfuscator:
            Eazfuscator thinks that there is non-verifiable code and does not virtualize constructor, if we pass argument to constructor
            like 'options ?? new Options()'.
            </summary>
            <param name="options">Driver options passed by user. Can't be null.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.NotSupportedException"> Spatial reference system is not supported. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.WriteVectorLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.WriteVectorLayer.SpatialReferenceSystem">
            <summary>
            Gets spatial reference system of this layer.
            </summary>
            <value>
            Spatial reference system. Can be <see langword="null"/> if it is unknown.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.Add(Aspose.Gis.Feature,Aspose.Gis.IFeatureStyle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.UseAttributesIndex(Aspose.Gis.AbstractPath,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.UseSpatialIndex(Aspose.Gis.AbstractPath,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.GetPreprocessingFlags">
            <summary>
            This method is called from <see cref="T:Aspose.Gis.Formats.Common.WriteVectorLayer"/>. The result of this method affects how
            features and their geometries should be preprocessed in <see cref="M:Aspose.Gis.Formats.Common.WriteVectorLayer.Add(Aspose.Gis.Feature,Aspose.Gis.IFeatureStyle)"/> before <see cref="M:Aspose.Gis.Formats.Common.WriteVectorLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)"/>
            is called. This method can be overwritten in subclass.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <summary>
            This method is called from <see cref="T:Aspose.Gis.Formats.Common.WriteVectorLayer"/>. It must be implemented in a subclass.
            It should write feature to the output file. Features geometry should be discarded. Instead, the geometry passed
            as an argument must be used.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.SetSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Sets spatial reference system. Can be called from the base class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.WriteVectorLayer.PreprocessingFlags">
            <summary>
            Flags affect behavior of <see cref="!:Add(Feature)"/> or <see cref="M:Aspose.Gis.Formats.Common.WriteVectorLayer.Add(Aspose.Gis.Feature,Aspose.Gis.IFeatureStyle)"/> methods
            and how features geometry is processed before passing to <see cref="M:Aspose.Gis.Formats.Common.WriteVectorLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)"/>.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.WriteVectorLayer.PreprocessingFlags.ConvertToSfa">
            <summary> if set, geometries are converted to SFA (simple feature access) </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.WriteVectorLayer.PreprocessingFlags.ReplaceEmptyWithNull">
            <summary> if set, empty geometries are replaced with null geometries. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.WriteVectorLayer.PreprocessingFlags.CompatibleSrs">
            <summary> if set, geometries are checked by compatible srs. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.WriteVectorLayer.PreprocessingFlags.SupportStyles">
            <summary> if set, allow to add a feature with a style. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.WriteVectorLayer.PreprocessingFlags.All">
            <summary> Default flags. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Common.WriteVectorLayer.ValidateGeometriesOnWrite">
            <summary>  Determines if geometries should be validated when they are added to the layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.EnsureCompatibleSrs(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Ensures that SRS of geometry is compatible with layers SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.EnsureValidGeometryIfNeed(Aspose.Gis.Geometries.IGeometry)">
            <summary> Ensures that geometry is valid. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.GetSfaGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Turns geometry to the SFA geometry if it is not.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.WriteVectorLayer.IsCompatibleSrs(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines if argument is equivalent to SRS of this layer.
            </summary>
            <param name="srs"> Argument. </param>
            <returns>
            <see langword="true"/>, if argument is equivalent to SRS of this layer, <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Common.XmlNamesResolver">
            <summary>
            This class resolves xml names.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.XmlNamesResolver.#ctor(System.Char)">
            <summary>
            Create an instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.XmlNamesResolver.ResolveName(System.String)">
            <summary>
            Resolves the new name of attributes, so they conformant with limitations and still unique.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Common.XmlNamesResolver.MakeUniqueAttributeName(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary> Transforms name so it is not contained in 'usedNames' collection. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Common.XmlNamesResolver.resolvedNames">
            <summary> the key is a raw name . the value is a resolved name </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.CsvDriver">
            <summary>
            A driver for the CSV format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For CSV, the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.OpenLayer(System.String,Aspose.Gis.Formats.Csv.CsvOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Csv.CsvOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.CreateLayer(System.String,Aspose.Gis.Formats.Csv.CsvOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Csv.CsvOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Csv.CsvOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.CsvOptions">
            <summary>
            Driver-specific options for CSV format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.Delimiter">
            <summary>
            Gets or sets a character that is used as delimiter to separate values.
            Default is ','.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.DoubleQuoteEscape">
            <summary>
            Gets or sets a character that is used as escape letter for double-quotes.
            Default is '"'.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.StartLineNumber">
            <summary>
            Gets or sets a zero-based number of line that will be first when read the data.
            Default is 0.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.HasAttributeNames">
            <summary>
            Determines if a header row with attribute names exists.
            Default is <see langword="true"/>.
            </summary>
            <remarks>
            In case of <see langword="true"/> a <see cref="P:Aspose.Gis.VectorLayer.Attributes"/> will be named according to the header row.
            Otherwise it will be named as: <c>field_1, field_2, etc.</c>
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.ColumnX">
            <summary>
            Gets or sets a name of column contains X coordinate value.
            Default is <see langword="null"/>.
            </summary>
            <remarks>
            If column value is <see langword="null"/> or <see langword="empty string"/> a Point geometry will not be created.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.ColumnY">
            <summary>
            Gets or sets a name of column contains Y coordinate value.
            Default is <see langword="null"/>.
            </summary>
            <remarks>
            If column value is <see langword="null"/> or <see langword="empty string"/> a Point geometry will not be created.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.ColumnZ">
            <summary>
            Gets or sets a name of column contains Z coordinate value.
            Default is <see langword="null"/>.
            </summary>
            <remarks>
            If column value is <see langword="null"/> or <see langword="empty string"/> it will be excluded from the geometry.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.ColumnM">
            <summary>
            Gets or sets a name of column contains M coordinate value.
            Default is <see langword="null"/>.
            </summary>
            <remarks>
            If column value is <see langword="null"/> or <see langword="empty string"/> it will be excluded from the geometry.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvOptions.ColumnWkt">
            <summary>
            Gets or sets a name of column contains Well-Known Text for representing geometry.
            Default is <see langword="null"/>.
            </summary>
            <remarks>
            If column value is <see langword="null"/> or <see langword="empty string"/> a geometry based on Well-Known Text will not be created.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvOptions.#ctor(Aspose.Gis.Formats.Csv.CsvOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.CsvReadLayer">
            <summary>
            A read-only layer with CSV features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Csv.CsvOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Csv.CsvReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.Csv.CsvReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.CsvWriteLayer">
            <summary>
            A write-only layer with CSV features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Csv.CsvOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Csv.CsvWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
            <remarks>Date export format is "yyyy-mm-dd".</remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvWriteLayer.Driver">
            <summary> Gets the <see cref="P:Aspose.Gis.Formats.Csv.CsvWriteLayer.Driver" /> that instantiated this layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvWriteLayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.CsvWriteLayer.TrimEndDelimiter(System.String)">
            <summary>
            Removes existing a trailing delimiter char from the string.
            </summary>
            <param name="text">String to remove a trailing delimiter char.</param>
            <returns>String without a trailing delimiter char.</returns>
        </member>
        <member name="P:Aspose.Gis.Formats.Csv.CsvWriteLayer.NeedWriteGeometry">
            <summary>Returns <see langword="true"/> if it's needed to write geometry, otherwise <see langword="false"/>. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Csv</c> namespace provides classes for working with CSV format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.Parser.CsvParser.ParseAttributesSchema(System.String)">
            <summary>
            Parses a string which contains names of attributes.
            </summary>
            <param name="header">String which contains names of attributes</param>
            <returns>Collection of parsed FeatureAttributes.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.Parser.CsvParser.ParseNextRow(System.IO.StreamReader)">
            <summary>
            Reads and parses csv row record, the record can contain break lines.
            </summary>
            <param name="reader">A reader, row will be read from.</param>
            <returns>List of parsed values.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.Parser.CsvRowParserBase.ParseNextRow(System.IO.StreamReader)">
            <summary>
            Reads and parses csv row record, the record can contain break lines.
            </summary>
            <param name="reader">A reader, row will be read from.</param>
            <returns>List of parsed values.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.Parser.CsvRowParserCustomEscape">
            <summary>
            Provides a methods to parse a CSV row in case when escape double-quote letter different from '"'.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.Parser.CsvRowParserCustomEscape.ParseNextRow(System.IO.StreamReader)">
            <summary>
            Reads and parses csv row record, the record can contain break lines.
            </summary>
            <param name="reader">A reader, row will be read from.</param>
            <returns>List of parsed values.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.Parser.CsvRowParserDefaultEscape">
            <summary>
            Provides a methods to parse a CSV row in case when escape double-quote letter is '"'.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Csv.Parser.CsvRowParserDefaultEscape.ParseNextRow(System.IO.StreamReader)">
            <summary>
            Reads and parses csv row record, the record can contain break lines.
            </summary>
            <param name="reader">A reader, row will be read from.</param>
            <returns>List of parsed values.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Csv.ICsvRowParser">
            <summary>
            Interface for implementation different methods to parse CSV row.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver">
            <summary>
            A driver for the Esri ASCII Grid.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open raster layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open raster layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.RasterDriverOptions)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open raster layers (see <see cref="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver.OpenLayer(System.String,Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.EsriAscii.EsriAsciiDriver"/> class. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions">
            <summary> Driver-specific options for EsriAscii format. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions.Clone">
            <summary> Clones this instance. </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions.#ctor(Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions)">
            <summary> Create new instance, that is clone of argument. </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer">
            <summary>
            A read-only layer with EsriAscii raster data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.EsriAscii.EsriAsciiOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.BandCount">
            <summary> Returns '1' value. It is a single-band raster. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.Width">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.Height">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.UpperLeftX">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.UpperLeftY">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.CellSize">
            <summary> Returns data about pixel or cell such as size, rotation (skew), upper left, etc. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.SpatialReferenceSystem">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.Driver">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.GetBand(System.Int32)">
            <summary> Gets a band by the specified index. </summary>
            <param name="index"> Only the value "0" is possible. </param>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriAscii.EsriAsciiReadLayer.ReadOnExpressionInternal(Aspose.Gis.Raster.RasterRect,Aspose.Gis.Raster.RasterReadExpression)">
            <summary> Reads and processes the band values for Esri Ascii. No verify input params. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriAscii.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.EsriAscii</c> namespace provides classes for working with EsriAscii format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriJson.EsriJsonDriver">
            <summary>
            A driver for the EsriJson format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For EsriJson, the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.CreateLayer(System.String,Aspose.Gis.Formats.EsriJson.EsriJsonOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.EsriJson.EsriJsonOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.EsriJson.EsriJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.OpenLayer(System.String,Aspose.Gis.Formats.EsriJson.EsriJsonOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.EsriJson.EsriJsonOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.EsriJson.EsriJsonDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriJson.EsriJsonOptions">
            <summary>
            Driver-specific options for EsriJson format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonOptions.NestedPropertiesSeparator">
            <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
            <remarks>
            This is reading option - it does not affect writing.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonOptions.#ctor(Aspose.Gis.Formats.EsriJson.EsriJsonOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer">
            <summary>
            A read-only layer with EsriJson features. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.EsriJson.EsriJsonOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer. For EsriJson this is always WGS84.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.ParseFile(Aspose.Gis.AbstractPath)">
            <summary>
            Parses the file at the provided path and adds features found in there into <see cref="F:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.features" /> collection.
            </summary>
            <param name="path">Path to the file.</param>
            <remarks>Current implementation parses whole file as a JSON object and keeps it in memory during parsing.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.ParseFeatureSet(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses a feature collection object and adds all its features to <see cref="F:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.features" /> collection.
            </summary>
            <param name="token">FeactureCollection token to parse.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.ParseFeature(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses single feature object and adds it the <see cref="F:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.features" /> collection.
            </summary>
            <param name="token">Feature token to parse.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.ParseAttributesSchema(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>
            Analyzes all provided feature tokens and adds attributes that match feature properties to the attribute collection of the layer.
            </summary>
            <param name="featureTokens">Feature tokens to analyze.</param>
            <remarks>This method locks the attribute collection of the layer.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.ParsePropertyValues(Newtonsoft.Json.Linq.JObject,Aspose.Gis.Feature)">
            <summary>
            Parses values of attributes from the JSON token according to the attribute schema of the layer 
            and assigns them to the specified feature.
            </summary>
            <param name="featureToken">Token to parse.</param>
            <param name="feature">Target feature.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonReadLayer.ParseGeometry(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses all types of geometry objects.
            </summary>
            <param name="token">Geometry object to parse.</param>
            <returns>A subclass of <see cref="T:Aspose.Gis.Geometries.Geometry" /> corresponding to data in the token.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriJson.EsriJsonWriteLayer">
            <summary>
            A write-only layer with EsriJson features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.EsriJson.EsriJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.EsriJson.EsriJsonWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.EsriJson.EsriJsonWriteLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.EsriJson.EsriJsonWriteLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.EsriJson.EsriJsonWriteLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.EsriJson.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.EsriJson</c> namespace provides classes for working with EsriJson format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.ContiguousCurveBuilder">
            <summary>
            This class creates contiguous curves. It tries to create curve of the most limited type possible
            </summary>
            <remarks>
            This class accumulates points via AddLineTo and AddCircularArc. Whenever type of required curve changes, old curve
            is put into 'completed curves' list and new curve is started. If only one addition type was used, only one curve is be
            created.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.ContiguousCurveBuilder.BuildCurveDangerous(Aspose.Gis.Formats.FileGdb.ContiguousCurveBuilder@)">
            <summary>
            Creates a curve from an argument. The argument becomes invalid and should not be used any more.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.ContiguousCurveBuilder.AddLineTo(Aspose.Gis.Geometries.IPoint)">
            <summary>
            Adds a line to the provided point. If current last point is equal to the point nothing happens.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.ContiguousCurveBuilder.AddCircularArc(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint)">
            <summary>
            Adds a circular arc.
            </summary>
            <remarks>
            If start of the arc does not equal to the last curves endpoint - adds line to the start of the arc.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.ContiguousCurveBuilder.AddBezierCurve(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Common.Coordinate,Aspose.Gis.Common.Coordinate,Aspose.Gis.Geometries.IPoint)">
            <summary>
            Adds bezier curve.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.ContiguousCurveBuilder.AddEllipticArc(Aspose.Gis.Common.Ellipse,Aspose.Gis.Geometries.Point,Aspose.Gis.Geometries.Point,System.Boolean)">
            <summary>
            Adds elliptic arc
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid">
            <summary>
            A coordinate precision grid inside a FileGDB layer.
            </summary>
            <remarks>
            The coordinate precision grid defines the valid domain and resolution of coordinates in FileGDB layer.
            Origin defines the Path to coordinate precision grid in space. Scale defines the resolution (the larger
            scale is, the more precise values are written).
            Precision grid specifies the valid range of values for coordinates:
            <code>
            XMin = XOrigin
            YMin = YOrigin
            ZMin = ZOrigin
            MMin = MOrigin
            XMax = XOrigin + 9e+15 / XYScale
            YMax = YOrigin + 9e+15 / XYScale
            ZMax = ZOrigin + 9e+15 / ZScale
            MMax = MOrigin + 9e+15 / MScale
            </code>
            Every coordinate in the <see cref="T:Aspose.Gis.VectorLayer"/> must be within this range.
            Coordinates that are outside of the range may cause read errors later on and will be processed wrong by ArcGIS.
            If you don't specify any properties (keep them <see langword="null"/>) the default values are will be used.
            Default values depends on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> of the <see cref="T:Aspose.Gis.VectorLayer"/>.
            For geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> defaults are:
            <code>
            XOrigin = -400
            YOrigin = -400
            ZOrigin = -1e5
            MOrigin = -1e5
            XYScale = 1e9
            ZScale  = 1 / ZTolerance * 10
            MScale  = 1 / MTolerance * 10
            </code>
            For projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> defaults are:
            <code>
            XOrigin = -2147483647
            YOrigin = -2147483647
            ZOrigin = -1e5
            MOrigin = -1e5
            XYScale = 1 / XYTolerance * 10
            ZScale  = 1 / ZTolerance  * 10
            MScale  = 1 / MTolerance  * 10
            </code>
            where <c>XYTolerance</c>, <c>ZTolerance</c> and <c>MTolerance</c> are values from <see cref="T:Aspose.Gis.Formats.FileGdb.FileGdbOptions"/>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.CreateFromRectangle(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint)">
            <summary>
            Creates new <c>FileGdbCoordinatePrecisionGrid</c> such that all values within a rectangle are representable.
            </summary>
            <param name="p1">One corner of the rectangle.</param>
            <param name="p2">Opposite corner of the rectangle. Must have same dimensions as <paramref name="p1"/>.</param>
            <returns>
            The <c>FileGdbCoordinatePrecisionGrid</c> such that all values within a rectangle are representable.
            Values outside of the rectangle are not representable, so all coordinates that will be written to FileGDB layer
            must be inside the rectangle.
            </returns>
            <exception cref="T:System.ArgumentNullException"> Argument is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="p1"/> and <paramref name="p2"/> don't form a valid non empty rectangle:
            <ul>
            <li><paramref name="p1"/> or <paramref name="p2"/> is empty. </li>
            <li>'HasZ' flags of <paramref name="p1"/>  does not equal to 'HasZ' flag of <paramref name="p2"/></li>
            <li>'HasM' flags of <paramref name="p1"/>  does not equal to 'HasM' flag of <paramref name="p2"/></li>
            <li>'X' coordinate of <paramref name="p1"/> is equal to 'X' coordinate of <paramref name="p2"/></li>
            <li>'Y' coordinate of <paramref name="p1"/> is equal to 'Y' coordinate of <paramref name="p2"/></li>
            <li>'Z' coordinate of <paramref name="p1"/> is equal to 'Z' coordinate of <paramref name="p2"/></li>
            <li>'M' coordinate of <paramref name="p1"/> is equal to 'M' coordinate of <paramref name="p2"/></li>
            <li> Any coordinate is <see cref="F:System.Double.NaN"/> or infinity. </li>
            </ul>
            </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.XOrigin">
            <summary>
            Gets or sets the origin of X coordinate. If set to <see langword="null"/> the default is used.
            </summary>
            <remarks>
            Default value is -400 for <see cref="T:Aspose.Gis.VectorLayer"/> with geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            and -2147483647 for <see cref="T:Aspose.Gis.VectorLayer"/> with projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.YOrigin">
            <summary>
            Gets or sets the origin of Y coordinate. If set to <see langword="null"/> the default is used.
            </summary>
            <remarks>
            Default value is -400 for <see cref="T:Aspose.Gis.VectorLayer"/> with geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            and -2147483647 for <see cref="T:Aspose.Gis.VectorLayer"/> with projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.ZOrigin">
            <summary>
            Gets or sets the origin of Z coordinate. If set to <see langword="null"/> the default is used.
            </summary>
            <remarks>
            Default value is -1e5.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.MOrigin">
            <summary>
            Gets or sets the origin of M coordinate. If set to <see langword="null"/> the default is used.
            </summary>
            <remarks>
            Default value is -1e5.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.XYScale">
            <summary>
            Gets or sets the scale of X and Y coordinates. If set to <see langword="null"/> the default is used.
            </summary>
            <remarks>
            Default value is <c>1e9</c> for <see cref="T:Aspose.Gis.VectorLayer"/> with geographic <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            and <c>XYScale = 1 / XYTolerance * 10</c> for <see cref="T:Aspose.Gis.VectorLayer"/> with
            projected <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Argument is not positive. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.ZScale">
            <summary>
            Gets or sets the scale of Z coordinate. If set to <see langword="null"/> the default is used.
            </summary>
            <remarks>
            Default value is <c>ZScale = 1 / ZTolerance * 10</c>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Argument is not positive. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.MScale">
            <summary>
            Gets or sets the scale of M coordinate. If set to <see langword="null"/> the default is used.
            </summary>
            <remarks>
            Default value is <c>MScale = 1 / MTolerance * 10</c>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Argument is not positive. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.AllSet">
            <summary>
            Determines if there are null values.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.ReplaceNullsWithDefaults(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,System.Double,System.Double,System.Double)">
            <summary>
            Replaces 'null' values with default values. Default values are based on spatial reference system and tolerances.
            After this method all getters returns non-null values and <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.AllSet"/> returns true.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.GetValidCoordinatesBoundingBox">
            <summary>
            Creates a bounding box that bounds all valid values for this precision grid.
            Valid values are values that can be represented with integers less than 9e15, so
            ArcGIS can read them back.
            Ensure that <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid.AllSet"/> is <see langword="true"/> before calling this method.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbDataset">
            <summary>
            A dataset that provides access to FileGDB directory.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.Open(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Opens FileGDB dataset at specified path.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.Create(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Creates new FileGDB dataset at specified path.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDataset.CanCreateLayers">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDataset.CanRemoveLayers">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDataset.Driver">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDataset.LayersCount">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.GetLayerName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.OpenLayer(System.String,Aspose.Gis.DriverOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.OpenLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <inheritdoc cref="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.OpenLayer(System.String,Aspose.Gis.DriverOptions)"/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.OpenLayerAt(System.Int32,Aspose.Gis.DriverOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.OpenLayerAt(System.Int32,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <inheritdoc cref="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.OpenLayerAt(System.Int32,Aspose.Gis.DriverOptions)"/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.CreateLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <inheritdoc cref="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.CreateLayer(System.String,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.RemoveLayerAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.AddLayerToSystemTables(Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer)">
            <summary>
            This method is called from <see cref="T:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer"/> after it adds fields into the table.
            This is ugly to provide a callback like this, but we need to be sure that all data about layer is
            already provided and can not be changed.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.CreateLayersIdsList">
            <summary>
            Reads a list of IDs of rows that represent feature layers from GDB Items table.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.GetLayersTablePath(System.Int32)">
            <summary>
            Gets a Path to the gdbtable file correspondent to layer with provided index.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.GetTablePath(System.Int32)">
            <summary>
            Get a path of gdbtable correspondent to provided ID in system catalog.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.RemoveExtraFiles(System.String)">
            <summary>
            Removes all files with same base name as argument, except *.gdbtable and *.gdbtablx file
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDataset.CreateGdbFile(Aspose.Gis.AbstractPath)">
            <summary>
            Creates 'gdb' file
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbDriver">
            <summary>
            A driver for the ESRI File Geodatabase format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            ESRI File Geodatabase supports all spatial reference systems.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets">
            <summary>
            Gets a value indicating whether this driver can open datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenDataset(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the layer from the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the layer from the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenDataset(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the layer from the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenDatasets"/>).</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateDataset(System.String,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateDataset(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.CreateDataset(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Creates a dataset.
            </summary>
            <param name="path">Path to the dataset.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open datasets (see <see cref="P:Aspose.Gis.FileDriver.CanOpenDatasets"/>).</exception>
            <exception cref="T:System.InvalidOperationException">Dataset already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.FileGdb.FileGdbDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbOptions">
            <summary>
            Driver-specific options for FileGDB format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.ObjectIdFieldName">
            <summary>
            Name of the object ID field.
            </summary>
            <remarks>
            This is a creation option and it does not affect reading.
            Defines the name of the object ID field (column).
            Defaults to "OBJECTID".
            If any attribute in <see cref="P:Aspose.Gis.VectorLayer.Attributes"/> has name equal to the value of this property, then
            this attribute is renamed.
            </remarks>
            <exception cref="T:System.ArgumentException" accessor="set">
            Value is not a valid field name. A valid field name must:
            <ul>
            <li>Be not <see langword="null"/> and not empty</li>
            <li>Start with Latin letter or underscore</li>
            <li>Contain only Latin letters, digits or underscores</li>
            </ul>
            </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.GeometryFieldName">
            <summary>
            Name of the geometry field.
            </summary>
            <remarks>
            This is a creation option and it does not affect reading.
            Defines the name of the geometry field (column).
            Defaults to "SHAPE".
            If any attribute in <see cref="P:Aspose.Gis.VectorLayer.Attributes"/> has name equal to the value of this property, then
            this attribute is renamed.
            </remarks>
            <exception cref="T:System.ArgumentException" accessor="set">
            Value is not a valid field name. A valid field name must:
            <ul>
            <li>Be not <see langword="null"/> and not empty</li>
            <li>Start with Latin letter or underscore</li>
            <li>Contain only Latin letters, digits or underscores</li>
            </ul>
            </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.XYTolerance">
            <summary>
            X and Y snapping tolerance.
            </summary>
            <remarks>
            This is a creation option and it does not affect reading.
            This parameter controls a snapping tolerance used for advanced ArcGIS features.
            It does not affect Aspose.GIS behavior, but it can be used by ArcGIS.
            The unit of the parameter is the unit of spatial reference system.
            If set to <see langword="null"/>, the default is used. The default depends on spatial reference system
            and equals to 0.000000008983153 degrees for geographic systems or 0.001 meters for projected systems
            (values are transformed to spatial reference system units).
            If spatial reference system is unknown the default is 0.001.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.ZTolerance">
            <summary>
            Z snapping tolerance.
            </summary>
            <remarks>
            This is a creation option and it does not affect reading.
            This parameter controls a snapping tolerance used for advanced ArcGIS features.
            It does not affect Aspose.GIS behavior, but it can be used by ArcGIS.
            The unit of the parameter is the unit of spatial reference system.
            If set to <see langword="null"/>, the default is used. If spatial reference system is unknown
            or has less than three dimensions the default is 0.001. If spatial reference system has three dimensions
            the default is 0.001 meters converted to the unit of the third dimension.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.MTolerance">
            <summary>
            M snapping tolerance.
            </summary>
            <remarks>
            This is a creation option and it does not affect reading.
            This parameter controls a snapping tolerance used for advanced ArcGIS features.
            It does not affect Aspose.GIS behavior, but it can be used by ArcGIS.
            The unit of the parameter is the unit of spatial reference system.
            If set to <see langword="null"/>, the default is used. The default is 0.001.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.CoordinatePrecisionGrid">
            <summary>
            A coordinate precision grid to use in new layer.
            </summary>
            <remarks>
            This is a creation option and it does not affect reading.
            The coordinate precision grid defines the valid domain and resolution of coordinates in FileGDB.
            When this property is set to <see langword="null"/> default values are used.
            Refer to <see cref="T:Aspose.Gis.Formats.FileGdb.FileGdbCoordinatePrecisionGrid"/> documentation for more details on coordinate 
            precision grids.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.EnsureValidCoordinatesRange">
            <summary>
            Whether coordinates should be in valid range.
            </summary>
            <remarks>
            This is a creation option and it does not affect reading.
            If set to <see langword="true"/> an exception will be thrown on attempt to write a coordinate with values
            out of valid range. If set to <see langword="false"/> such coordinate will be written silently.
            Valid range is defined by <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.CoordinatePrecisionGrid"/>. Refer to <see cref="P:Aspose.Gis.Formats.FileGdb.FileGdbOptions.CoordinatePrecisionGrid"/>
            documentation to read about how valid range is determined from coordinate precision grid.
            Default is <see langword="false"/>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.FileGdbOptions.#ctor(Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.FileGdbReadLayer">
            <summary>
            A read-only layer that merges all layers in FileGDB.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.GdbCoordinatesValidator">
            <summary>
            Ensures that all coordinates are valid to write to FileGDB layer.
            Throws <see cref="T:Aspose.Gis.GisException"/> otherwise.
            Valid coordinate must be:
            - Inside valid values bounding box, that is determined by coordinate precision grid
              (this check is performed only if correspondent options is set)
            - Not infinity
            - Not NaN (unless it is inside standalone point, standalone points can have NaN coordinates)
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbCoordinatesValidator.#ctor(Aspose.Gis.Common.BoundingBox)">
            <summary>
            Create new instance.
            </summary>
            <param name="box">Valid coordinates range. If null - no range checking is done.</param>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.GdbFeatureBuilder">
            <summary>
            Creates features from <see cref="T:Aspose.Gis.Common.Formats.GdbTable.GdbTableRowReader"/> objects.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbFeatureBuilder.CreateGeometryFromShape(Aspose.Gis.Common.Formats.GdbTable.GdbTableShapeType,Aspose.Gis.Common.Formats.GdbTable.GdbShape)">
            <summary>
            Creates geometry from GDB Shape.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbFeatureBuilder.#ctor(Aspose.Gis.VectorLayer)">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbFeatureBuilder.BuildFeature(Aspose.Gis.Common.Formats.GdbTable.GdbTableRowReader)">
            <summary>
            Create feature from <see cref="T:Aspose.Gis.Common.Formats.GdbTable.GdbTableRowReader"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbFeatureBuilder.GetRingedCurve(Aspose.Gis.Geometries.Curve)">
            <summary>
            Return LinearRing created from input if input is LineString. Return input unchanged otherwise.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbFeatureBuilder.GetCurveStartPointIndex(Aspose.Gis.Common.Formats.GdbTable.GdbMultiPartShape,System.Int32)">
            <summary>
            Returns a start point index of a curve at specified index of specified shape or -1 if index is out of range.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer">
            <summary>
            A read-only layer with features from one gdbtable file. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer"/> class.
            </summary>
            <param name="path">Path to the "gdbtable" file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer. For GeoJSON this is always WGS84.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.GdbTableReadLayer.GdbTableFeatureEnumerator">
            <summary>
            Enumerates features in GDB table.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer">
            <summary>
            A write-only layer with features written to one gdbtable file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.FileGdbOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.Formats.FileGdb.FileGdbDataset,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <param name="dataset">
            A dataset that instantiated this layer or <see langword="null"/> if this layer was not created in a dataset.
            </param>
            <param name="datasetLayerName">
            A name of the layer within a dataset or <see langword="null"/>, if this layer was not created in a dataset.
            </param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.Driver">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.GetPreprocessingFlags">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.CreateShapeFromGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Create GDB Shape from IGeometry.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.ShapeField">
            <summary>
            A shape field of the underlying GDB Table..
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.ObjectIdField">
            <summary>
            An object id field of the underlying GDB Table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.Fields">
            <summary>
            List of fields of the underlying GDB Table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.DatasetLayerName">
            <summary>
            A layer name within a dataset.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.TableShapeType">
            <summary>
            Gets a shape type of a table.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.CreateShapeFieldDescription">
            <summary>
            Create GDB Shape field description, whose parameters are based on SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.GdbTableWriteLayer.ReplaceNullOptionPropertiesWithDefaults">
            <summary>
            Sets default values for options that were not set by user.
            After this methods all options are not null.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.FileGdb</c> namespace provides classes for working with ESRI File Geodatabase format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbDbTuneTable">
            <summary>
            Provides a way to create GDB DB Tune table - a table with settings of FileGDB dataset.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbDbTuneTable.Create(Aspose.Gis.AbstractPath)">
            <summary>
            Create new GDB DB Tune table at specified path.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable">
            <summary>
            Provides access to GDB_ItemRelationships table.
            This table contains info about a relationships, such as 'FolderContainsDataset'.
            ESRI FileGDB API uses this table in order to search for list of tables. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.Open(Aspose.Gis.AbstractPath)">
            <summary>
            Opens a table at specified path.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.Create(Aspose.Gis.AbstractPath)">
            <summary>
            Creates a new table at specified path and opens it.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.Path">
            <summary>
            Gets a Path to this table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.IsDirty">
            <summary>
            Gets a value indicating whether this table was modified.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.Count">
            <summary>
            Number of entries in the table.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.DeleteRelationsWithDestination(System.Guid)">
            <summary>
            Deletes all relations whose destination ID equals to argument.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.Add(System.Guid,System.Guid,System.Guid,System.String,System.Nullable{System.Int32})">
            <summary>
            Adds an entry into the table.
            </summary>
            <param name="originItemId">
            An origin of a relation. e.g. - a dataset. A GUID could be found in <see cref="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable"/>.
            </param>
            <param name="destinationItemId">
            A destination of a relation. e.g. - a table. A GUID could be found in <see cref="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable"/>.
            </param>
            <param name="relationTypeId">
            A type of a relation. e.g. - 'DatasetContainsTable'. A GUID could be found in <see cref="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable"/>.
            </param>
            <param name="attributes">XML attributes, can be <see langword="null"/>.</param>
            <param name="properties">Properties, can be <see langword="null"/>. Usually 1 for 'DatasetInFolder' relation.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable.Dispose">
            <summary>
            Disposes resources.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipTypesTable">
            <summary>
            Provides an access to GDB_ItemRelationshipTypes table.
            Provides a [relationship type name] to [relationship type GUID] mapping.
            GUID can be used when adding rows into <see cref="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipsTable"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipTypesTable.Open(Aspose.Gis.AbstractPath)">
            <summary>
            Opens table at specified path.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipTypesTable.Create(Aspose.Gis.AbstractPath)">
            <summary>
            Creates table at specified path.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemRelationshipTypesTable.GuidOfType(System.String)">
            <summary>
            Returns a GUID of the type with requested name or null if there is no type with such name.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable">
            <summary>
            Provides an access to the GDB Items table: a table that contains listing of tables, datasets,
            and other entries in GDB directory.
            "Name" field in this table matches "Name" field in GDB_System_Catalog.
            "UUID" field in this table matches "UUID" field in GDB_Item_Relationships table.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.Open(Aspose.Gis.AbstractPath)">
            <summary>
            Opens a table at specified path.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.Create(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemTypesTable)">
            <summary>
            Creates a new table at specified path and opens it.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.NextRowId">
            <summary>
            Returns an ID that will be assigned to next added row.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.Path">
            <summary>
            Gets a path of this table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.IsDirty">
            <summary>
            Gets a value indicating whether this table was modified.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.Count">
            <summary>
            Number of entries in the table.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.Add(Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry)">
            <summary>
            Adds an entry into the table.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.IndexOf(System.String)">
            <summary>
            Returns index of entry with specified name.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.GetEntry(System.Int32)">
            <summary>
            Reads an entry with specified ID.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.GetEntryAt(System.Int32)">
            <summary>
            Reads an entry at specified index.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.Delete(System.Int32)">
            <summary>
            Reads an entry with specified ID.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTable.Dispose">
            <summary>
            Disposes resources.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry">
            <summary>
            Represents a data from one row of GDB Items table.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.#ctor(System.Guid)">
            <summary>
            Create new instance with given type UUID.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.RowId">
            <summary>
            ID of the row of the entry.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.Uuid">
            <summary> Unique UUID of an entry. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.TypeUuid">
            <summary> UUID of a type of an entry. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.Name">
            <summary> Name of an entry. Matches 'Name' of <see cref="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.PhysicalName">
            <summary> Uppercased name of an entry. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.Path">
            <summary> "\name" for top level entries. "\feautre_dataset_name\name" for layers attached to a dataset. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.DatasetSubtype1">
            <summary> 1 for feature layers. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.DatasetSubtype2">
            <summary>
            Layer geometry type. 1 for point layers, 2 for multi point layers, 3 for line string layers, 4 for polygonal layers.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.DatasetInfo1">
            <summary> Name of the shape field for feature layers. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.DatasetInfo2">
            <summary> <see langword="null"/> for feature layers. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.Url">
            <summary> Empty string for feature layers. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.XmlDefinition">
            <summary> XML with DEFeatureClass root element. Contains XML version of data from gdbtable header. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.XmlDocumentation">
            <summary> XML with documentation. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.XmlItemInfo">
            <summary> <see langword="null"/> for feature layers. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.Properties">
            <summary> 1 for feature layers. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.Defaults">
            <summary> <see langword="null"/> for feature layers. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.Polygon">
            <summary> 5 point polygon with bounding box of a layer. Can be <see langword="null"/>. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.#ctor(Aspose.Gis.Common.Formats.GdbTable.GdbTableRowReader)">
            <summary>
            Creates new instance and fills data from gdb tables row.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry.FillRow(Aspose.Gis.Common.Formats.GdbTable.GdbTableRowWriter)">
            <summary>
            Writes this instance to gdb table row.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemTypesTable">
            <summary>
            Provides an access to GDB_ItemTypes table.
            Provides a [item type name] to [item type GUID] mapping.
            GUID can be used when creating <see cref="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemsTableEntry"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemTypesTable.Open(Aspose.Gis.AbstractPath)">
            <summary>
            Opens GDB Item Types table at specified path.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemTypesTable.Create(Aspose.Gis.AbstractPath)">
            <summary>
            Creates GDB Item Types table at specified path and opens it.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbItemTypesTable.GuidOfType(System.String)">
            <summary>
            Returns a GUID of the type with requested name or null if there is no type with such name.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable">
            <summary>
            Provides an access to the GDB_SystemCatalog table: a table that describes names of other tables and contains
            a mapping from [table name] to [table id] which can be used in order to find tables files paths.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Open(Aspose.Gis.AbstractPath)">
            <summary>
            Opens GDB System Catalog at specified path.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Create(Aspose.Gis.AbstractPath)">
            <summary>
            Create new GDB System Catalog
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Path">
            <summary>
            Gets Path to the system catalog file.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.IsDirty">
            <summary>
            Gets a value indicating whether any modification was done to the file.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Version">
            <summary>
            Gets a value indicating version of the file.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Count">
            <summary>
            Number of records in system catalog.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.GetId(System.String)">
            <summary>
            Id of the row with specified name, or -1 if no such row was found.
            </summary>
            <remarks>
            Names are considered to be case insensitive.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Add(System.String,System.Int32)">
            <summary>
            Adds new row to the system catalog. Returns ID of new row.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Delete(System.Int32)">
            <summary>
            Deletes row with specified ID.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.FileGdb.SystemTables.GdbSystemCatalogTable.Dispose">
            <summary>
            Disposes resources.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.ConsoleTools.ExecuteCommand(System.String,System.String)">
            <summary>
            Execute console command
            </summary>
            <param name="command">Command for execute</param>
            <param name="fileName">Name of the application to start</param>
        </member>
        <member name="T:Aspose.Gis.Formats.GDAL.GdalDriver">
            <summary>
            A driver for the GDAL format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For GDAL the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.GDAL.GdalDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GDAL.GdalDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GDAL.GdalDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalDriver.OpenLayer(System.String,Aspose.Gis.Formats.GDAL.GdalOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GDAL.GdalOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.GDAL.GdalDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GDAL.GdalOptions">
            <summary>
            Driver-specific options for GDAL format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalOptions.#ctor(System.String)">
            <summary>
            Create a new instance.
            </summary>
            <param name="tempDirectory">Path to temporary files. Users's temporary folder by Default.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.GDAL.GdalOptions.PathToTempFile">
            <summary>
            Path to temporary files.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GDAL.GdalOptions.FileName">
            <summary>
            Name of the application to start
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GDAL.GdalOptions.#ctor(Aspose.Gis.Formats.GDAL.GdalOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.GDAL.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.GDAL</c> namespace provides classes for working with GDAL format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver">
            <summary>
            A driver for the GeoJSON Seq format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For GeoJSON, the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.OpenLayer(System.String,Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.CreateLayer(System.String,Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:GeoJsonDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions">
            <summary>
            Driver-specific options for GeoJsonSeq.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.AttributesSkip">
            <summary>
            controls translation of attributes: yes - skip all attributes
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.GeometryAsCollection">
            <summary>
            control translation of geometries: yes - wrap geometries with GeometryCollection type
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.NestedPropertiesSeparator">
            <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
            <remarks>
            This is reading option - it does not affect writing.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.AutoId">
            <summary>
            Auto-generate ids
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.ArrayAsString">
            <summary>
            Whether to expose JSon arrays of strings, integers or reals as string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.DateAsString">
            <summary>
            Whether to expose JSon date/time/date-time as string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.WriteUnsetAttribute">
            <summary>
            Whether to write unset attributes by adding 'null' value
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions.#ctor(Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions)">
            <summary>
            Initializes a new instance of the <see cref="!:GeoJsonReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer. For GeoJSON this is always WGS84.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.ParseFile(Aspose.Gis.AbstractPath)">
            <summary>
            Parses the file at the provided path and adds features found in there into <see cref="F:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.features" /> collection.
            </summary>
            <param name="path">Path to the file.</param>
            <remarks>Current implementation parses whole file as a JSON object and keeps it in memory during parsing.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.ParseFeature(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses single feature object and adds it the <see cref="F:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.features" /> collection.
            </summary>
            <param name="token">Feature token to parse.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.ParseAttributesSchema(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>
            Analyzes all provided feature tokens and adds attributes that match feature properties to the attribute collection of the layer.
            </summary>
            <param name="featureTokens">Feature tokens to analyze.</param>
            <remarks>This method locks the attribute collection of the layer.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.ParsePropertyValues(Newtonsoft.Json.Linq.JObject,Aspose.Gis.Feature)">
            <summary>
            Parses values of attributes from the JSON token according to the attribute schema of the layer 
            and assigns them to the specified feature.
            </summary>
            <param name="featureToken">Token to parse.</param>
            <param name="feature">Target feature.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqReadLayer.ParseGeometry(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses all types of geometry objects.
            </summary>
            <param name="token">Geometry object to parse.</param>
            <returns>A subclass of <see cref="T:Aspose.Gis.Geometries.Geometry" /> corresponding to data in the token.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqWriteLayer">
            <summary>
            A write-only layer with GeoJSON features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="!:GeoJsonWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqWriteLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqWriteLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJsonSeq.GeoJsonSeqWriteLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJsonSeq.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.GeoJsonSeq</c> namespace provides classes for working with GeoJsonSeq format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJson.GeoJsonDriver">
            <summary>
            A driver for the GeoJSON format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For GeoJSON, the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.OpenLayer(System.String,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(System.String,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.GeoJson.GeoJsonDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJson.GeoJsonOptions">
            <summary>
            Driver-specific options for GeoJSON format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.AttributesSkip">
            <summary>
            controls translation of attributes: yes - skip all attributes
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.GeometryAsCollection">
            <summary>
            control translation of geometries: yes - wrap geometries with GeometryCollection type
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.NestedPropertiesSeparator">
            <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
            <remarks>
            This is reading option - it does not affect writing.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.WriteBoundingBoxes">
            <summary>
            Determines if GeoJSON objects should be included information on the coordinate range for its Geometries.
            If set to <see langword="true"/>, a member "bbox" is generated for each geometry (not null) when it's added to the layer.
            Default value is <see langword="false"/>.
            </summary>
            <remarks>
            This is a creation option - it does not affect opening.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.ReadBoundingBoxes">
            <summary>
            Determines if Bounding Boxes ('bbox') should be read as attributes with a name 'bbox_0', 'bbox_1', etc.
            Default value is <see langword="false"/>.
            The <see cref="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.NestedPropertiesSeparator"/> string is used in bbox_0, bbox_1,.. names.
            </summary>
            <remarks>
            This is reading option - it does not affect writing.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.AutoId">
            <summary>
            Auto-generate ids
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.Name">
            <summary>
            Name at feature collection level (for layer creation)
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.Description">
            <summary>
            Description at feature collection level (for layer creation)
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.ArrayAsString">
            <summary>
            Whether to expose JSon arrays of strings, integers or reals as string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.DateAsString">
            <summary>
            Whether to expose JSon date/time/date-time as string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.WriteUnsetAttribute">
            <summary>
            Whether to write unset attributes by adding 'null' value
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonOptions.#ctor(Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer">
            <summary>
            A read-only layer with GeoJSON features. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer. For GeoJSON this is always WGS84.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.ParseFile(Aspose.Gis.AbstractPath)">
            <summary>
            Parses the file at the provided path and adds features found in there into <see cref="F:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.features" /> collection.
            </summary>
            <param name="path">Path to the file.</param>
            <remarks>Current implementation parses whole file as a JSON object and keeps it in memory during parsing.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.ParseFeatureCollection(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses a feature collection object and adds all its features to <see cref="F:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.features" /> collection.
            </summary>
            <param name="token">FeactureCollection token to parse.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.ParseFeature(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses single feature object and adds it the <see cref="F:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.features" /> collection.
            </summary>
            <param name="token">Feature token to parse.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.ParseAttributesSchema(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>
            Analyzes all provided feature tokens and adds attributes that match feature properties to the attribute collection of the layer.
            </summary>
            <param name="featureTokens">Feature tokens to analyze.</param>
            <remarks>This method locks the attribute collection of the layer.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.ParsePropertyValues(Newtonsoft.Json.Linq.JObject,Aspose.Gis.Feature)">
            <summary>
            Parses values of attributes from the JSON token according to the attribute schema of the layer 
            and assigns them to the specified feature.
            </summary>
            <param name="featureToken">Token to parse.</param>
            <param name="feature">Target feature.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonReadLayer.ParseGeometry(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses all types of geometry objects.
            </summary>
            <param name="token">Geometry object to parse.</param>
            <returns>A subclass of <see cref="T:Aspose.Gis.Geometries.Geometry" /> corresponding to data in the token.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJson.GeoJsonWriteBoxes">
            <summary> This class writes bounding boxes (known as 'bbox') for GeoJSON format. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteBoxes.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions)">
            <summary>  Create an instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteBoxes.WriteInFeature(System.IO.StreamWriter,Aspose.Gis.Geometries.IGeometry)">
            <summary> Write a bounding box for geometry. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteBoxes.WriteInLayer(System.IO.StreamWriter)">
            <summary> Write a total bounding box for the whole layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteBoxes.PostWriteInLayer(System.IO.StreamWriter)">
            <summary> Prepare target position for the layer bounding box. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteBoxes.SwapInFile">
            <summary> Complete write. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJson.GeoJsonWriteLayer">
            <summary>
            A write-only layer with GeoJSON features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoJson.GeoJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.GeoJson.GeoJsonWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoJson.GeoJsonWriteLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.GeoJson.GeoJsonWriteLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.GeoJson.GeoJsonWriteLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoJson.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.GeoJson</c> namespace provides classes for working with GeoJSON format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver">
            <summary>
            A driver for the Geo TIFF raster.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open raster layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open raster layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.RasterDriverOptions)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open raster layers (see <see cref="P:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver.OpenLayer(System.String,Aspose.Gis.Formats.GeoTiff.GeoTiffOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoTiff.GeoTiffOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.GeoTiff.GeoTiffDriver"/> class. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.GeoTiffKeys">
            <summary>
            Contains tag keys for geotiff format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.GeoTiffOptions">
            <summary> Driver-specific options for GeoTiff format. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffOptions.Clone">
            <summary> Clones this instance. </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffOptions.#ctor(Aspose.Gis.Formats.GeoTiff.GeoTiffOptions)">
            <summary> Create new instance, that is clone of argument. </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer">
            <summary>
            A read-only layer with GeoTiff raster data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.#cctor">
            <summary> Inject Tiff format </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.GeoTiff.GeoTiffOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.BandCount">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.Width">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.Height">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.UpperLeftX">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.UpperLeftY">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.CellSize">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.SpatialReferenceSystem">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.Driver">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.GetBand(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.ReadOnExpressionInternal(Aspose.Gis.Raster.RasterRect,Aspose.Gis.Raster.RasterReadExpression)">
            <summary> Reads and processes the band values for GeoTIFF. No verify input params. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer.SampleFormats">
            <summary>
            Only general formats.
            The Void[4] ComplexInt[5], ComplexFloat[6] types are read as raw data.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.GeoTiffTag">
            <summary>
            Describes a tag model from 'DirectoryTags'.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffTag.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Create an instance of our class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.GeoTiffTag.ToString">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffTag.KeyId">
            <summary> Gives the key-ID value of the Key. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffTag.TagLocation">
            <summary> Indicates which TIFF tag contains the value(s). </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffTag.Length">
            <summary> Indicates the number of values in this key. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.GeoTiffTag.ValueOrOffset">
            <summary>
            "Value_Offset" indicates the index-offset *into* the TagArray indicated by TIFFTagLocation, if it is nonzero.
            If TIFFTagLocation = 0, then Value_Offset contains the actual(SHORT) value of the Key, and Count = 1 is implied.
            Note that the offset is not a byte-offset, but rather an index based on the natural data type of the specified tag array.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.GeoTiff</c> namespace provides classes for working with GeoTiff format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.GeoTiff.RawTiffLoader">
            <summary> Raw data loader for Raster. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.GeoTiff.RawTiffLoader.Buffer">
            <summary> Gets loaded bytes. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.RawTiffLoader.Process(Aspose.Imaging.Rectangle,System.Byte[],Aspose.Imaging.Point,Aspose.Imaging.Point)">
            <summary> Setup buffer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.GeoTiff.RawTiffLoader.Process(Aspose.Imaging.Rectangle,System.Byte[],Aspose.Imaging.Point,Aspose.Imaging.Point,Aspose.Imaging.LoadOptions)">
            <summary> Setup buffer. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlDriver">
            <summary>
            A driver for the GML format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.OpenLayer(System.String,Aspose.Gis.Formats.Gml.GmlOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gml.GmlOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.Gml.GmlOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.Gml.GmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Gml.GmlDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlFeatureReader">
            <summary>
            Reads feature from GML.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.#ctor(Aspose.Gis.Formats.Gml.GmlReadLayer,Aspose.Gis.Formats.Gml.GmlLayerInfo,Aspose.Gis.Formats.Gml.GmlOptions)">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.CanReadFeature(System.Xml.XmlReader)">
            <summary>
            Determine whether current XML element is feature.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadFeature(System.Xml.XmlReader)">
            <summary>
            Read feature from current XML element.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.SetIdAttribute(Aspose.Gis.Feature,System.Xml.XmlReader)">
            <summary>
            Set gml_id attribute from current XML readers element.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadFeatureAttribute(Aspose.Gis.Feature,System.Xml.XmlReader,System.String)">
            <summary>
            Read current XML element as feature attribute and add it to the feature. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.TryReadGeometry(System.Xml.XmlReader,Aspose.Gis.Geometries.IGeometry@,System.Int32)">
            <summary>
            Tries to create geometry from current XML element.
            </summary>
            <param name="xmlReader">XML reader.</param>
            <param name="geometry">Output geometry.</param>
            <param name="dimensions">Number of dimensions is used in order to parse gml:pos.</param>
            <returns>Whether geometry was created.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.CreateSrsFromName(System.String)">
            <summary>
            Create SRS based on GML srsName.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadPolygon(System.Xml.XmlReader,System.Int32)">
            <summary>
            Read polygon represented by current XML element.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadPolygonRing(System.Xml.XmlReader,System.Int32)">
            <summary>
            Reads linear ring from "gml:exterior" or "gml:interior"
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadCurvePolygonRing(System.Xml.XmlReader,System.Int32)">
            <summary>
            Reads curve from "gml:exterior" or "gml:interior"
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadMultiPoint(System.Xml.XmlReader,System.Int32)">
            <summary>
            Reads multi point.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadMultiLineString(System.Xml.XmlReader,System.Int32)">
            <summary> Reads multi line string. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadMultiCurve(System.Xml.XmlReader,System.Int32)">
            <summary> Reads multi curve. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadPoint(System.Xml.XmlReader,System.Int32)">
            <summary>
            Reads point.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadCoordIntoSequence(System.Xml.XmlReader,Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Reads point from "gml:coord" and adds it into sequence.
            "gml:coord" element contains three elements: X, Y (optional), Z (optional), each element contains double value.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ForAllGmlSiblings(System.Xml.XmlReader,System.Action)">
            <summary>
            Parses current XML readers element and invokes 'action' on every XmlElement with 'gml:' prefix.
            You _must_ advance 'XmlReader' inside action at least by one position.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadPosIntoSequence(System.Xml.XmlReader,Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Reads point from "gml:pos" and adds it into points sequence.
            "gml:pos" is an element that contains list of double. It represents one point.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadPosListIntoSequence(System.Xml.XmlReader,System.Int32,Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Reads points from "gml:posList" and adds it into PointsSeuqence
            "gml:posList" contains list of space-separated doubles. It depends on number of dimensions how this list is interpreted (how
            many doubles go to each point, there is no additional separators between points). Number of dimensions is given as a parameter, but it can be
            overwritten by "srsDimension" attribute in gml:posList.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadCoordinatesIntoSequence(System.Xml.XmlReader,Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Reads points from "gml:coordinates" and adds them into points sequence.
            "gml:coordinates" contains a list of doubles. A separator between points is provided as an XML attribute. A separator between coordinates
            within point is provided as an XML attribute as well.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.AddFromTokens(System.Xml.XmlReader,System.String[],Aspose.Gis.Geometries.PointsSequence,System.Int32,System.Int32,System.Char)">
            <summary>
            Adds points created from tokens into to points sequence.
            </summary>
            <param name="xmlReader">XML reader. Used for error reporting.</param>
            <param name="tokens">Array of tokens.</param>
            <param name="sequence">Points Sequence.</param>
            <param name="offset">Token to start from.</param>
            <param name="dimensions">Number of tokens to use.</param>
            <param name="decimalSeparator">Decimal separator within double values.</param>
            <returns></returns>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlFeatureReader.pointsBuffer">
            <summary>
            This line string is used whenever a <see cref="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadPointsIntoSequence(System.Xml.XmlReader,Aspose.Gis.Geometries.PointsSequence,System.Int32)"/> needs to be called, but no line string is actually
            needed. For example, when we read gml:Point. We could've create temporary LineString every time in this situations,
            but we don't for performance reasons.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlFeatureReader.attributePrefixStack">
            <summary>
            This stack is used to track what prefix of attribute should be. We could've create it locally in <see cref="M:Aspose.Gis.Formats.Gml.GmlFeatureReader.ReadFeature(System.Xml.XmlReader)"/> method,
            but we don't and we use this field for performance reasons (to avoid stack recreation for every feature).
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlLayerInfo">
            <summary>
            Info about the GML layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gml.GmlOptions)">
            <summary>
            Create new instance. Parse root element of the file, extract 'schemaLocation' attribute from it,
            read all schemas specified there and build <see cref="T:Aspose.Gis.Formats.Gml.GmlLayerInfo"/> from them.
            </summary>
            <param name="path">Path to GML file.</param>
            <param name="options">Options.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlLayerInfo.Attributes">
            <summary>
            Attributes of the layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlLayerInfo.NamespaceManager">
            <summary>
            XML namespace manager of the GML document.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlLayerInfo.GmlNamespaceUri">
            <summary>
            URI of GML namespace (there are multiple GML URIs, depended on GML version, for example http://www.opengis.net/gml/3.2)
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.IsFeatureElement(System.Xml.XmlReader)">
            <summary>
            Determine whether current element under XML reader represents feature.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.HandleSchemaFeatures(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.String)">
            <summary>
            Handles feature elements located in XML schema.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.AddFeatureElementName(System.Xml.XmlNode,System.String)">
            <summary>
            Add name of the feature xs:element to set of feature elements names.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.AddAttributesOfComplexType(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            Creates feature attribute from every element from complexType and adds it to feature attribute collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.AddAttributesFromChildren(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            Creates feature attribute from every element from sequence and adds it to feature attribute collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.AddElementAsAttribute(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            Create feature attribute from XML schema element.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.GetElementFromReference(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.Xml.XmlNode)">
            <summary>
            Return XML element node referenced from 'ref' attribute.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.GetGroupFromReference(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.Xml.XmlNode)">
            <summary>
            Return XML group node referenced from 'ref' attribute.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.GetComplexTypeOfElement(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.Xml.XmlNode)">
            <summary>
            Get complex type of the xs:element. This is either type referenced from "type" attribute or "complexType" directly
            inside the element. If no type can be found - return null.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.GetSimpleTypeOfElement(Aspose.Gis.Formats.Gml.GmlXmlSchema,System.Xml.XmlNode)">
            <summary>
            Get simple type of the xs:element. This is either type referenced from "type" attribute or "simpleType" directly
            inside the element. If no type can be found - return null.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.CreateAttributeFromXmlTypeName(System.String)">
            <summary>
            Create attribute with specified XML type .
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.CreateAttributeFromSimpleContent(System.Xml.XmlNode)">
            <summary>
            Create attribute represented by simple content node. Name of attribute will be empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.OwnerDocumentOf(System.Xml.XmlNode)">
            <summary> Gets XML document of the argument. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.ExpandXmlName(System.String,System.String@,System.String@)">
            <summary>
            Split XML name into prefix and local name.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.RemoveNamespacePrefix(System.String)">
            <summary>
            Returns string with removed XML prefix.
            </summary>
            <example>
            prefix:name -> name (prefix removed)
            name -> name (name without prefix doesn't changed)
            </example>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlLayerInfo.CreateAbsoluteUri(System.String)">
            <summary>
            Creates absolute URI from argument, regardless if argument is URI itself, relative path or absolute path.
            </summary>
            <returns>Absolute URI or null on failure.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlOptions">
            <summary>
            Driver-specific options for GML format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.LoadSchemasFromInternet">
            <summary>
            Determines whether Aspose.GIS is allowed to load XML schema from Internet.
            If set to <see langword="false"/>, schemas with absolute URIs that does not start with 'file://' would not be loaded.
            Default is <see langword="false"/>.
            </summary>
            <remarks>
            Aspose.GIS uses XML schema of GML file in order to create <see cref="T:Aspose.Gis.FeatureAttributeCollection"/>.
            XML schema files can be distributed alongside with GML files or can be located on the Internet.
            In former case, you need to set this option to <see langword="true"/> to allow Aspose.GIS to load XML schema.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.XmlResolver">
            <summary>
            A <see cref="P:Aspose.Gis.Formats.Gml.GmlOptions.XmlResolver"/> used to resolve external resources. Default is <see cref="T:System.Xml.XmlUrlResolver"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.NestedPropertiesSeparator">
            <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.SchemaLocation">
            <summary>
            Space separated list of URI pairs. First URI in every pair is a URI of the namespace, second URI is a Path to XML schema of the namespace.
            If set to <see langword="null"/>, <see cref="T:Aspose.Gis.Formats.Gml.GmlDriver"/> will try read schemaLocation from the root element of the document.
            Default is <see langword="null"/>.
            </summary>
            <remarks>
            Aspose.GIS uses XML schema of GML file in order to create <see cref="T:Aspose.Gis.FeatureAttributeCollection"/>. By defualt, schema location is extracted
            from schemaLocation attribute. If there is no such attribute or it points to invalid location,
            Aspose.GIS will fail to read GML file. In this case - set this option, so Aspose.GIS can load schema.
            </remarks>
            <example>"http://site.com/namespace http://site.com/schema.xsd"</example>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlOptions.RestoreSchema">
            <summary>
            Determines whether Aspose.GIS is allowed to parse attributes in a Gml file in which an XML schema is missing or cannot be loaded.
            If set to <see langword="true"/>, Aspose.GIS reader does not require the presence of an XML Schema.
            Default is <see langword="false"/>.
            </summary>
            <remarks>
            Driver attempts to automatically parse the feature classes and their associated properties
            by scanning the file and looking for “known” objects to determine the organization.
            While this approach is error prone, it has the advantage of working for GML files even
            if the associated XML schema has been lost or cannot load from Internet.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlOptions.#ctor(Aspose.Gis.Formats.Gml.GmlOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlReadLayer">
            <summary>
            A read-only layer with GML features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gml.GmlOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Gml.GmlReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlReadLayer.GeometryType">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlReadLayer.SpatialReferenceSystem">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlReadLayer.Driver">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlReadLayer.Count">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlReadLayer.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.CreateFeatureReader">
            <summary>
            Create instance of GmlFeatureReader.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlReadLayer.Index">
            <summary>
            Lazily created GML index.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlReadLayer.GmlEnumerator">
            <summary>
            Enumerates features in GML file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.GmlEnumerator.#ctor(System.IO.Stream,Aspose.Gis.Formats.Gml.GmlFeatureReader)">
            <summary>
            Create new instance.
            </summary>
            <param name="stream">Stream to enumerate on.</param>
            <param name="gmlReader">GML reader to use.</param>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlReadLayer.GmlIndex">
            <summary>
            Gives random access to the GML file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.GmlIndex.#ctor(System.IO.Stream,Aspose.Gis.Formats.Gml.GmlFeatureReader,Aspose.Gis.Formats.Gml.GmlLayerInfo)">
            <summary>
            Create new instance.
            </summary>
            <param name="stream">GML file stream.</param>
            <param name="featureReader">GML feature reader to use.</param>
            <param name="layerInfo">GML layer info to use.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.GmlIndex.ReadFeature(System.Int32)">
            <summary>
            Reads feature at specified index.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlReadLayer.GmlIndex.HandleXmlElement(System.Xml.XmlReader,System.Boolean@,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlRestoration">
            <summary>
            This class parses attributes without the presence of an XML Schema definition.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlRestoration.#ctor(System.IO.Stream,System.String)">
            <summary> Create a new instance. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlRestoration.Attributes">
            <summary> Restored attributes of the layer. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlRestoration.FeaturesNames">
            <summary> Restored features names of the layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlRestoration.ReadAndDetect">
            <summary> Read and restore attributes and other data. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlXmlNamespace">
            <summary>
            Information about XML namespace imported in XML.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlNamespace.ReadNamspacesFromRoot(Aspose.Gis.AbstractPath,System.String)">
            <summary>
            Read XML namespaces imported into root element of XML at the given path.
            </summary>
            <returns>
            Dictionary, whose keys are "URI"s of XML namespaces, and values are <see cref="T:Aspose.Gis.Formats.Gml.GmlXmlNamespace"/> objects.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlNamespace.ReadXmlnsAttributes(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,Aspose.Gis.Formats.Gml.GmlXmlNamespace})">
            <summary>
            Parses "xmlns:[namespace prefix]="[namespace URI]"" attributes. Fills dictionary with results.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.GmlXmlSchema">
            <summary>
            Represents XML schema.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.Load(System.Uri,System.Boolean,System.Xml.XmlResolver,System.String)">
            <summary>
            Load XML schema.
            </summary>
            <param name="schemaUri">URI of schema.</param>
            <param name="allowInternet">Whether loading schemas from the Internet is allowed.</param>
            <param name="xmlResolver">XML resolver to use.</param>
            <param name="targetNamespace">Target namespace of the schema.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlXmlSchema.AllowInternet">
            <summary> Whether loading schemas from the Internet is allowed. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlXmlSchema.HasNotLoadedFromWeb">
            <summary>
            Determines whether some schemas were not loaded because Internet is not allowed and their path is on the Internet.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlXmlSchema.HasNotFound">
            <summary>
            Determines whether some schemas were not loaded because a file or internet address is not found.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.GmlXmlSchema.FeaturesElementsNodes">
            <summary>
            List of schema elements that represent features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.GetComplexTypeNode(System.String,System.String)">
            <summary>
            Returns XML node that represents complex type with provided name, or null if no such type found.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.GetSimpleTypeNode(System.String,System.String)">
            <summary>
            Returns XML node that represents simple type with provided name, or null if no such type found.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.GetGroupNode(System.String,System.String)">
            <summary>
            Returns XML node that represents group with provided name, or null if no such group found.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.GetElementNode(System.String,System.String)">
            <summary>
            Returns XML node that represents element with provided name, or null if no such group found.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.ParseSchema(System.Uri,System.Boolean,System.String)">
            <summary> Parse schema and all schemas it includes (via 'include' tag) or imports (via 'import' tag). </summary>
            <param name="schemaUri">URI of the schema.</param>
            <param name="addFeatureElements">
            Whether to add feature elements to <see cref="P:Aspose.Gis.Formats.Gml.GmlXmlSchema.FeaturesElementsNodes"/> list.
            Feature elements are not added when schema is imported from another schema (in this case only types are loaded).
            </param>
            <param name="targetNamespace">Target namespace of the schema.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.ParseNodeSchema(System.Uri,System.Xml.XmlNode,System.Boolean,System.Boolean)">
            <summary> Parse schema referenced from include or import node. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.LoadDocument(System.Uri)">
            <summary> Loads XML document. Can return null if URI is Internet URI and Internet is not allowed. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsSchemaLoaded(System.String)">
            <summary> Determine whether schema with provided URI was loaded. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsFeatureElement(System.Xml.XmlNode)">
            <summary> Determines whether XML node is element that represents feature. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.AddNode(System.Collections.Generic.IDictionary{Aspose.Gis.Formats.Gml.XmlNodeName,System.Xml.XmlNode},System.Xml.XmlNode)">
            <summary> Adds type represented by node to dictionary.  </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsElement(System.Xml.XmlNode)">
            <summary> Determines whether XML node is element node. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsGroup(System.Xml.XmlNode)">
            <summary> Determines whether XML node is group node. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsInclude(System.Xml.XmlNode)">
            <summary> Determines whether XML node is include node. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsImport(System.Xml.XmlNode)">
            <summary> Determines whether XML node is import node. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsComplexType(System.Xml.XmlNode)">
            <summary> Determines whether XML node is complex type. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.IsSimpleType(System.Xml.XmlNode)">
            <summary> Determines whether XML node is simple type. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.#ctor(System.Boolean,System.Xml.XmlResolver)">
            <summary>
            Create new instance.
            </summary>
            <param name="allowInternet">Whether loading schemas from the Internet is allowed.</param>
            <param name="xmlResolver">XML resolver to use.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.GmlXmlSchema.RemoveNamespacePrefix(System.String)">
            <summary>
            Returns string with removed XML prefix.
            </summary>
            <example>
            prefix:name -> name (prefix removed)
            name -> name (name without prefix doesn't changed)
            </example>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlXmlSchema.loadedUris">
            <summary> A set of loaded URIs. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlXmlSchema.featureSubstitutionGroups">
            <summary> If element 'substitutionGroup' is met in this set then element represents feature. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlXmlSchema.featureElements">
            <summary> Elements that represent features. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlXmlSchema.complexTypes">
            <summary> XML schema ComplexType nodes. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlXmlSchema.simpleTypes">
            <summary> XML schema SimpleType nodes. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlXmlSchema.groups">
            <summary> XML schema group nodes. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.GmlXmlSchema.elements">
            <summary> XML schema element nodes. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Gml</c> namespace provides classes for working with GML format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.XmlNamespacesUris">
            <summary>
            A collection of XML namespaces URIs and predicates about URIs.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.XmlNamespacesUris.SchemaInstance">
            <summary> URI of schema instance namespace. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gml.XmlNamespacesUris.XLink">
            <summary> URI of xlink namespace. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.XmlNamespacesUris.IsGmlUri(System.String)">
            <summary> Determines whether provided URI is URI of one of the GML namespaces. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.XmlNamespacesUris.IsSchemaUri(System.String)">
            <summary> Determines whether provided URI is URI of one of the XML schema namespaces. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.XmlNamespacesUris.IsSchemaNode(System.Xml.XmlNode)">
            <summary> Determines whether nodes URI is <see cref="M:Aspose.Gis.Formats.Gml.XmlNamespacesUris.IsSchemaUri(System.String)"/> </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.XmlNamespacesUris.IsXlinkUri(System.String)">
            <summary> Determines whether provided URI is XLink URI. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.XmlNamespacesUris.IsWfsUri(System.String)">
            <summary> Determines whether provided URI is WFS (Web Feature Service) URI. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.XmlNamespacesUris.IsWellKnownUri(System.String)">
            <summary>
            Determines if URI is one of the well-known uris, like XML Schema, GML or Xlink.
            Well known URIs does not contain elements we are interested in (inheritors of gml:AbstractFeature)
            and should not be processed (this is important performance optimization).
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gml.XmlNodeName">
            <summary>
            A pair of namespace URI and local name.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gml.XmlNodeName.#ctor(System.String,System.String)">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.XmlNodeName.Uri">
            <summary>
            XML element namespace URI.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gml.XmlNodeName.Name">
            <summary>
            XML element local name.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.GpxAttributes">
            <summary>
            Holds information about attributes pre-defined by the GPX specification.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxAttributes.IsPredefined(Aspose.Gis.FeatureAttribute,Aspose.Gis.Formats.Gpx.GpxGeometryType)">
            <summary>
            Determines if an attribute with the specified name is a pre-defined attribute.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Gpx.GpxAttributes.attributes">
            <summary>
            Attributes that should be extracted from geometry elements
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.GpxDriver">
            <summary>
            A driver for the GPX format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For GPX, the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.OpenLayer(System.String,Aspose.Gis.Formats.Gpx.GpxOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gpx.GpxOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.CreateLayer(System.String,Aspose.Gis.Formats.Gpx.GpxOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gpx.GpxOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gpx.GpxOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.#ctor(Aspose.Gis.Formats.Gpx.GpxReadLayer,Aspose.Gis.Formats.Gpx.GpxOptions)">
            <summary> Create new instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.GetGeometryType(System.Xml.XmlReader)">
            <summary> Get geometry type represented by feature of the current XML element. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.CanReadFeature(System.Xml.XmlReader)">
            <summary> Reads feature represented by current XML element. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.CanReadNestedAttributes(System.Xml.XmlReader)">
            <summary> Determines if nested attributes can be read represented by current XML element. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadFeature(System.Xml.XmlReader)">
            <summary> Reads feature represented by current XML element. </summary>
            <remarks> To make sure that this is possible call <see cref="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.CanReadFeature(System.Xml.XmlReader)"/> first. </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxFeatureReader.NeedReadNestedAttributes">
            <summary> Returns the current value of <see cref="P:Aspose.Gis.Formats.Gpx.GpxOptions.ReadNestedAttributes"/> option. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxFeatureReader.NestedAttributeSeparator">
            <summary> Returns the current value of <see cref="P:Aspose.Gis.Formats.Gpx.GpxOptions.NestedAttributeSeparator"/> option. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadWaypointFeature(System.Xml.XmlReader)">
            <summary> Reads feature represented by waypoint. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadRouteFeature(System.Xml.XmlReader)">
            <summary> Reads feature represented by route. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadTrackFeature(System.Xml.XmlReader)">
            <summary> Reads feature represented by track. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadLonLat(System.Xml.XmlReader)">
            <summary>
            Read 'lon' and 'lat' attributes of current XML element and returns point with them.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.TryReadZ(System.Xml.XmlReader,Aspose.Gis.Geometries.Point)">
            <summary>
            If current XML element represents Z coordinate - reads it and sets it to <paramref name="point"/>.
            </summary>
            <returns>
            Value indicating if current XML elements was consumed.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.TryReadM(System.Xml.XmlReader,Aspose.Gis.Geometries.Point)">
            <summary>
            If current XML element represents M coordinate - reads it and sets it to <paramref name="point"/>.
            </summary>
            <returns>
            Value indicating if current XML elements was consumed.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.TryReadFeatureAttribute(System.Xml.XmlReader,Aspose.Gis.Feature)">
            <summary>
            If current XML element represents feature attribute - reads it and sets it to <paramref name="feature"/>.
            </summary>
            <returns>
            Value indicating if current XML elements was consumed.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadFeatureAttribute(System.Xml.XmlReader,Aspose.Gis.Feature,System.String)">
            <summary>
            Reads content of current XML element and sets it as feature attribute.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadFatureAttributesFromLink(System.Xml.XmlReader,Aspose.Gis.Feature,System.Boolean)">
            <summary> Reads feature attributes inside 'link' tag. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadFeatureAttributesFromExtensions(System.Xml.XmlReader,Aspose.Gis.Feature,System.Boolean)">
            <summary> Reads feature attribute inside 'extensions' tag. </summary> 
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadAttributeAsDouble(System.Xml.XmlReader,System.String)">
            <summary> Reads XML attribute and converts it to double. </summary>
            <exception cref="T:Aspose.Gis.GisException">Conversion failed.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.TryReadContentAsDouble(System.Xml.XmlReader,System.Double@)">
            <summary> Tries to read content of current XML element as double. </summary>
            <returns> Value indicating whether conversion to double succeed. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadPointGeometry(System.Xml.XmlReader,Aspose.Gis.Feature)">
            <summary> Reads geometry represented by waypoint, route point or track point. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.ReadTrackSegmentGeometry(System.Xml.XmlReader,Aspose.Gis.Feature)">
            <summary> Reads geometry represented by track segment. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxFeatureReader.CreateGisException(System.Xml.XmlReader,System.String,System.Exception)">
            <summary> Create exception. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxIndex.ParseExtensions(System.Xml.XmlReader,System.Boolean)">
            <summary> Parse "extensions" tag save names of elements inside it. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.GpxNames">
            <summary>
            Gpx names for nodes and attributes.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.GpxOptions">
            <summary>
            Driver-specific options for GPX format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxOptions.ZAttribute">
            <summary>
            Determines which GPX attribute will be exported as 'Z' coordinate of waypoints, route points and track points.
            If <see langword="null"/> - no attribute will be exported as 'Z' coordinate.
            Defaults to "ele".
            Possible values are names of all GPX XML attribute that can be represented as double (e.g. "speed", "magvar", "geoidheight" etc.)
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxOptions.MAttribute">
            <summary>
            Determines which GPX attribute will be exported as 'M' coordinate of waypoints, route points and track points.
            Behavior is same with <see cref="P:Aspose.Gis.Formats.Gpx.GpxOptions.ZAttribute"/>, defaults to <see langword="null"/>.
            </summary>
            <seealso cref="P:Aspose.Gis.Formats.Gpx.GpxOptions.ZAttribute"/>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxOptions.ReadNestedAttributes">
            <summary>
            Determines if GPX points, such as 'trkpt' and 'rtept', contain inner attributes and if it should be read. Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxOptions.NestedAttributeSeparator">
            <summary>
            A string to separate nested attribute name and its indexes. Defaults to double underscore "__".
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxOptions.#ctor(Aspose.Gis.Formats.Gpx.GpxOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.GpxPointsValidator">
            <summary>
            Validates that points coordinates are in valid range ([-180, 180] for X and [-90, 90] for Y).
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxPointsValidator.Validate(Aspose.Gis.Geometries.IGeometry)">
            <summary>  Validate longitude/latitude ranges </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.GpxReadLayer">
            <summary>
            A read-only layer with GPX features. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gpx.GpxOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Gpx.GpxReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer. For OSM XML this is always WGS84.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.Gpx.GpxReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxReadLayer.RemoveCoordinateAttributes(System.String)">
            <summary>Removes coordinate's attributes like 'ele' from the nested attributes list.</summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.GpxWriteLayer">
            <summary>
            A write-only layer with GPX features .
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Gpx.GpxOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Gpx.GpxWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Gpx.GpxWriteLayer.Driver">
            <summary> Gets the <see cref="P:Aspose.Gis.Formats.Gpx.GpxWriteLayer.Driver" /> that instantiated this layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Gpx.GpxWriteLayer.Dispose(System.Boolean)">
            <summary> Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Gpx.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Gpx</c> namespace provides classes for working with GPX format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.InFile.InFileDriver">
            <summary>
            A driver for work with data and temporary save in file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.OpenLayer(System.String,Aspose.Gis.Formats.InFile.InFileOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.InFile.InFileOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.CreateLayer(System.String,Aspose.Gis.Formats.InFile.InFileOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.InFile.InFileOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.InFile.InFileOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.InFile.InFileDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.InFile.InFileOptions">
            <summary>
            Driver-specific options for InFile layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.CountOfFeatureInPart">
            <summary>
            Max count of features in every part of the file
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.AttributesSkip">
            <summary>
            controls translation of attributes: yes - skip all attributes
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.GeometryAsCollection">
            <summary>
            control translation of geometries: yes - wrap geometries with GeometryCollection type
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.NestedPropertiesSeparator">
            <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
            <remarks>
            This is reading option - it does not affect writing.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.AutoId">
            <summary>
            Auto-generate ids
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.ArrayAsString">
            <summary>
            Whether to expose JSon arrays of strings, integers or reals as string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.DateAsString">
            <summary>
            Whether to expose JSon date/time/date-time as string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileOptions.WriteUnsetAttribute">
            <summary>
            Whether to write unset attributes by adding 'null' value
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileOptions.#ctor(Aspose.Gis.Formats.InFile.InFileOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.InFile.InFileOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.InFile.InFileReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.InFile.InFileReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer. For GeoJSON this is always WGS84.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.ParseFile(Aspose.Gis.AbstractPath)">
            <summary>
            Parses the file at the provided path and adds features found in there into <see cref="F:Aspose.Gis.Formats.InFile.InFileReadLayer.features" /> collection.
            </summary>
            <param name="path">Path to the file.</param>
            <remarks>Current implementation parses whole file as a JSON object and keeps it in memory during parsing.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.ParseFeature(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses single feature object and adds it the <see cref="F:Aspose.Gis.Formats.InFile.InFileReadLayer.features" /> collection.
            </summary>
            <param name="token">Feature token to parse.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.ParseAttributesSchema(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>
            Analyzes all provided feature tokens and adds attributes that match feature properties to the attribute collection of the layer.
            </summary>
            <param name="featureTokens">Feature tokens to analyze.</param>
            <remarks>This method locks the attribute collection of the layer.</remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.ParsePropertyValues(Newtonsoft.Json.Linq.JObject,Aspose.Gis.Feature)">
            <summary>
            Parses values of attributes from the JSON token according to the attribute schema of the layer 
            and assigns them to the specified feature.
            </summary>
            <param name="featureToken">Token to parse.</param>
            <param name="feature">Target feature.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileReadLayer.ParseGeometry(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses all types of geometry objects.
            </summary>
            <param name="token">Geometry object to parse.</param>
            <returns>A subclass of <see cref="T:Aspose.Gis.Geometries.Geometry" /> corresponding to data in the token.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.InFile.InFileOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.InFile.InFileWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileWriteLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.InFile.InFileWriteLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileWriteLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InFile.InFileWriteLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileWriteLayer.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileWriteLayer.ReplaceAt(System.Int32,Aspose.Gis.Feature)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.InFile.InFileWriteLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.InFile.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.InFileLayer</c> namespace provides classes for working with InFileLayer.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.InMemory.InMemoryDriver">
            <summary>
            A driver for work with data in memory.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryDriver.CreateLayer(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryDriver.CreateLayer">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.InMemory.InMemoryDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.InMemory.InMemoryLayer">
            <summary>
            A inmemory layer is sub-class for <see cref="T:Aspose.Gis.VectorLayer" />
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.InMemory.InMemoryLayer"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.SpatialReferenceSystem">
            <summary>
            Spatial reference system to assign to destination layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.Formats.InMemory.InMemoryLayer" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.Add(Aspose.Gis.Feature,Aspose.Gis.IFeatureStyle)">
            <summary>
            Adds a new feature with the specified style to the layer, if supported by the <see cref="T:Aspose.Gis.Formats.InMemory.InMemoryLayer" />'s <see cref="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.Driver" />.
            </summary>
            <param name="feature">The feature to add.</param>
            <param name="style"> The feature style. Use <see langword="null"/> to indicate missing style. </param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the layer does not support styles or the layer is read-only.</exception>
            <exception cref="T:System.InvalidOperationException"> is thrown if the the editable layers does not support styles.</exception>
            <exception cref="T:System.ArgumentException"> is thrown if the style does not match driver type.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.RemoveAt(System.Int32)">
            <summary>
            Remove the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <param name="index">The index of the feature.</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the layer is not editable.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.ReplaceAt(System.Int32,Aspose.Gis.Feature)">
            <summary>
            Replace the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <param name="index">The index of the feature.</param>
            <param name="feature">The feature to set.</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the layer is not editable.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.Disposed">
            <summary> Gets a value indicating whether dispose was called. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.GetEnumeratorCalls">
            <summary> Gets a value indicating how many times 'GetEnumerator' method was called. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.GetFeatureByIndexCalls">
            <summary> Gets a list of indeces passed to 'this[int index]' method. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.InMemory.InMemoryLayer.Features">
            <summary>
            Gets or sets list of features in this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.SetGeometryType(Aspose.Gis.Geometries.GeometryType)">
            <summary> Sets a value to return from the corresponding property. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.SetDriver(Aspose.Gis.FileDriver)">
            <summary> Sets a value to return from the corresponding property. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.InMemory.InMemoryLayer.SetSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary> Sets a value to return from the corresponding property. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.InMemory.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.InMemoryLayer</c> namespace provides classes for working with InMemoryLayer.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.AltitudeModes">
            <summary>
            Altitude mode for KML geometries.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.AltitudeModes.None">
            <summary> Without altitude mode. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.AltitudeModes.RelativeToGround">
            <summary> Interprets the altitude as a value in meters above the ground. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.AltitudeModes.ClampToGround">
            <summary> 
            For a camera, this setting also places the camera relativeToGround, 
            since putting the camera exactly at terrain height would mean that 
            the eye would intersect the terrain (and the view would be blocked). 
             </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.AltitudeModes.Absolute">
            <summary> Interprets the altitude as a value in meters above sea level. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Internal.KmlPredefinedAttributes">
            <summary>
            Holds information about attributes pre-defined by the KML specification.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Internal.KmlPredefinedAttributes.placemarkAttributes">
            <summary>
            Attributes that should be extracted from placemarks
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Internal.KmlPredefinedAttributes.geometryAttributes">
            <summary>
            Attributes that should be extracted from geometry elements
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlPredefinedAttributes.IsPredefinedForPlacemark(System.String)">
            <summary>
            Determines if an attribute with the specified name is a pre-defined attribute for a Placemark in KML.
            </summary>
            <param name="attributeName">The name of an attribute.</param>
            <returns><c>true</c> if the attribute is pre-defined; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlPredefinedAttributes.GetDataTypeForPlacemark(System.String)">
            <summary>
            Gets the data type for a pre-defined attribute of a Placemark.
            </summary>
            <param name="attributeName">The name of an attribute.</param>
            <returns>A data type for the specified attribute.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlPredefinedAttributes.IsPredefinedForGeometry(System.String,System.String)">
            <summary>
            Determines if an attribute with the specified name is a pre-defined attribute for a geometry in KML.
            </summary>
            <param name="attributeName">The name of an attribute.</param>
            <param name="kmlGeometryName">
            The name of geometry;
            if omitted or <c>null</c>, this method checks if the attribute is pre-defined for any geometry.</param>
            <returns><c>true</c> if the attribute is pre-defined; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlPredefinedAttributes.GetDataTypeForGeometry(System.String)">
            <summary>
            Gets the data type for a pre-defined attribute of a geometry.
            </summary>
            <param name="attributeName">The name of an attribute.</param>
            <returns>A data type for the specified attribute.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlCommon.ForEachSibling(System.Xml.XmlReader,Aspose.Gis.Common.Formats.Xml.XmlName,System.Func{System.Boolean})">
            <summary>
            Iterates through first level siblings of current element with name 'name'.
            Before this function call, 'reader' should point to start tag of element to parse.
            After this function call 'reader' will point to the element followed by the end tag of element to parse.
            Whenever current element become one of the siblings, callback is called.
            Callback should return 'true' if it consumed current sibling, 'false' otherwise.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Internal.KmlFeatureReader">
            <summary>
            Reads features from KML.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlFeatureReader.ReadPlacemark(System.Xml.XmlReader,Aspose.Gis.Formats.Kml.KmlReadLayer)">
            <summary>
            Read placemark. Before this function is called reader should point to start element with "Placemark" name.
            After this function returns reader will point to the next element after "Placemark" end element.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlFeatureReader.ReadExtendedData(System.Xml.XmlReader,Aspose.Gis.Feature,Aspose.Gis.FeatureAttributeCollection)">
            <summary>
            Read ExtendedData tag and fills <paramref name="feature"/> with attributes it found
            </summary>
            <param name="reader">XmlReader that points to ExtendedData element</param>
            <param name="feature">Feature to fill with attributes</param>
            <param name="attributes"></param>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Internal.KmlFeaturesEnumerator">
            <summary>
            Enumerates through features in KML file
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlGeometryReader.ReadGeometry(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Checks if current element is geometry. Parses it if it is.
            </summary>
            <param name="reader"></param>
            <param name="attributes">Dictionary that will be filled with geometry attributes</param>
            <returns>Created Geometry or null if current element is not geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlGeometryReader.ReadGeometry(System.Xml.XmlReader,Aspose.Gis.Common.Formats.Xml.XmlName,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Searches for coordinates inside current tag and calls createGeometryFn with the result of coordinates parsing.
            Attributes: dictionary to store geometry attributes. If it is null don't read attributes.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlGeometryReader.TryReadGeometryAttribute(System.Xml.XmlReader,Aspose.Gis.Common.Formats.Xml.XmlName,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Checks if current XML element is one of the geometry attributes. If it is so,
            reads it and adds to attributes parameter. If attributes is null do nothing.
            </summary>
            <returns>True if recognized current XML element as geometry attribute</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Internal.KmlGeometryReader.ParseCoordinates(System.Xml.XmlReader)">
            <summary>
            Reads coordinates. Before this function call reader should point to start element with "coordinates" name.
            After this function call reader will point to the next element after "coordinates" end element.
            </summary>
            <returns>List of points created from "coordinates" element text</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Internal.KmlIndex">
            <summary>
            This class performs pass through KML file and extracts such info as
            geometry type and attributes info.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.KmlDriver">
            <summary>
            A driver for the KML format
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For KML, the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.OpenLayer(System.String,Aspose.Gis.Formats.Kml.KmlOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.Kml.KmlOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Kml.KmlDriver"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlFlatStyleKey.ListItemIcons">
            <summary> Default value is <see cref="P:Aspose.Gis.Formats.Kml.KmlFlatStyleKey.NullItemIcons"/> so we has the same hashcode for any empty lists. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.KmlNames">
            <summary>
            Kml names for nodes and attributes.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.KmlOptions">
            <summary>
            Driver-specific options for KML format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlOptions.SymbolToReplaceInvalidChars">
            <summary>
            Determines which symbol will be used to replace invalid characters on reading.
            Replacing is skipped if value is '\0'. By default value is '\0' char.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlOptions.DocumentId">
            <summary>
            Used to specified the id of the root 'Document' node
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlOptions.AutoId">
            <summary>
            Auto-generate ids
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlOptions.AltitudeMode">
            <summary>
            Allows you to specify the AltitudeModes to use for KML geometries
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlOptions.#ctor(Aspose.Gis.Formats.Kml.KmlOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.KmlReadLayer">
            <summary>
            A read-only layer with KML features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Kml.KmlReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.Kml.KmlReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of this layer. For KML this is always WGS84.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.Formats.Kml.KmlReadLayer" />.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.KmlWriteLayer">
            <summary>
            A write-only layer with KML features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Kml.KmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Kml.KmlWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.KmlWriteLayer.Driver">
            <summary> Gets the <see cref="P:Aspose.Gis.Formats.Kml.KmlWriteLayer.Driver" /> that instantiated this layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.KmlWriteLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.KmlWriteLayer.PointsCoordinatesRangeValidator">
            <summary>
            Validates that points coordinates are in valid range ([-180, 180] for X and [-90, 90] for Y).
            Validates only standalone points or points in multi points. Does not validate points from line strings.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Kml</c> namespace provides classes for working with KML format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlAbstractColorStyle">
            <summary> Provides elements for specifying the color and color mode of style types that derive from it. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlAbstractColorStyle.Color">
            <summary> Specifies the color of the graphic element. Default value <see cref="P:System.Drawing.Color.White"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlAbstractColorStyle.ColorMode">
            <summary> Specifies the color mode of the graphic element. Default Value: normal. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlBalloonStyle">
            <summary> Specifies how the description balloon is drawn. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlBalloonStyle.BackgroundColor">
            <summary> Specifies the background color of the graphic element. Default value is <see cref="P:System.Drawing.Color.White" />. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlBalloonStyle.TextColor">
            <summary>Specifies the foreground color of the text. Default value is <see cref="P:System.Drawing.Color.Black" />.  </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlBalloonStyle.Text">
            <summary> Specifies the text displayed in the balloon. Default value is <see langword="null"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlBalloonStyle.DisplayMode">
            <summary> Controls whether the balloon is displayed or hidden. Default value is <see cref="F:Aspose.Gis.Formats.Kml.Styles.KmlDisplayModes.Show"/> </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlColorModes">
            <summary> Specifies the color mode for a graphic element. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlColorModes.Normal">
            <summary> Specifies a single color value. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlColorModes.Random">
            <summary> Specifies to use a random color value. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlCoordinate">
            <summary> Specifies an image coordinate system. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlCoordinate.X">
            <summary> The X component of a point. Default value is 0.5.</summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlCoordinate.Y">
            <summary> The Y component of a point. Default value is 0.5.</summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlCoordinate.XUnits">
            <summary> Units in which the X value is specified. Default value is <see cref="F:Aspose.Gis.Formats.Kml.Styles.KmlUnits.Fraction"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlCoordinate.YUnits">
            <summary> Units in which the Y value is specified. Default value is <see cref="F:Aspose.Gis.Formats.Kml.Styles.KmlUnits.Fraction"/>.</summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlDisplayModes">
            <summary> Controls whether the element is displayed or hidden. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlDisplayModes.Show">
            <summary> Specifies to show the element (known as 'default' in the kml specification). </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlDisplayModes.Hide">
            <summary> Specifies to hide the element. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle">
            <summary>
            Styles affect how Geometry is presented.
            Ths styles are encoded in the document section and have a unique identifier for each style.
            These are known as 'shared styles' in the kml specification.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle.Line">
            <summary> Specifies the drawing style (color, color mode, and line width) for all line geometry.
            Use <see langword="null"/> to indicate a missing style.
            Default Value is <see langword="null"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle.Polygon">
            <summary> Specifies the drawing style for all polygons, including polygon extrusions and line extrusions.
            Use <see langword="null"/> to indicate a missing style.
            Default Value is <see langword="null"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle.Icon">
            <summary> Specifies how icons for point Placemarks are drawn.
            Use <see langword="null"/> to indicate a missing style.
            Default Value is <see langword="null"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle.Label">
            <summary> Specifies how labels of a Feature are drawn.
            Use <see langword="null"/> to indicate a missing style.
            Default Value is <see langword="null"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle.Balloon">
            <summary> Specifies how the description balloon for placemarks is drawn.
            Use <see langword="null"/> to indicate a missing style.
            Default Value is <see langword="null"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle.List">
            <summary> Specifies how a Feature is displayed in the list view.
            Use <see langword="null"/> to indicate a missing style.
            Default Value is <see langword="null"/>. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Styles.KmlFeatureStyle.#ctor">
            <summary> Create new instance. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlIconResource">
            <summary> Specifies an icon resource location </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlIconResource.Href">
            <summary> Specifies the the resource location as a URL.
            Default value is <see langword="null"/> means the href is none.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlIconStyle">
            <summary>
            Specifies how icons for kml:Placemarks and kml:PhotoOverlay with a kml:Point geometry are drawn
            in an earth browser's list and geographic views.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlIconStyle.Scale">
            <summary> Specifies a scale factor that shall be applied to the graphic element. Default Value is '1'.  </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlIconStyle.Heading">
            <summary> Direction (North, South, East, West), in decimal degrees. Values range from 0 (North) to 360 degrees. Default Value is '0'. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlIconStyle.Resource">
            <summary> Specifies the resource location. Default value is <see langword="null"/> means the Icon is missed. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlIconStyle.HotSpot">
            <summary>
            Specifies the position of the reference point on the icon that is anchored to the Point specified in the Placemark.
            Default value is <see langword="null"/> means the HotSpot is missed.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlItemIcon">
            <summary> Specifies an icon resource location in a list. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlItemIcon.State">
            <summary> Specifies the current state of the NetworkLink or Folder.
            Default value is <see cref="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.None"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlItemIcon.SubState">
            <summary> Specifies the additional state of the NetworkLink or Folder.
            Default value is <see cref="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.None"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlItemIcon.Href">
            <summary>
            Specifies the resource location as a URL.
            Default value is <see langword="null"/> means the href is none.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates">
            <summary> Specifies the current state of a kml:NetworkLink or kml:Folder. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.None">
            <summary> Undefined (none). </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.Open">
            <summary> Open folder. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.Closed">
            <summary> Closed folder. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.Error">
            <summary> Error in fetch. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.Fetching0">
            <summary> Fetch state 0. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.Fetching1">
            <summary> Fetch state 1. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemIconStates.Fetching2">
            <summary> Fetch state 2. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlItemTypes">
            <summary> Specifies how a kml:Feature and its contents shall be displayed as items in a list view. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemTypes.RadioFolder">
            <summary> Only one of items shall be visible at a time. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemTypes.Check">
            <summary> The visibility is tied to its item's checkbox </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemTypes.CheckHideChildren">
            <summary> Use a normal checkbox for visibility but do not display the item's children in the list view. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlItemTypes.CheckOffOnly">
            <summary>
            Prevents all items from being made visible at once—that is,
            the user can turn everything in the Container Group off but cannot turn everything on at the same time.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlLabelStyle">
            <summary> Specifies how the label is drawn in the geographic view. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlLabelStyle.Scale">
            <summary> Specifies a scale factor to be applied to the label. Default value is '1'. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlLineStyle">
            <summary> Specifies how the name of a kml:AbstractFeatureGroup is drawn in the geographic view. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlLineStyle.Width">
            <summary> Width of the line, in pixels. Default Value is '1'.  </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlListStyle">
            <summary> Specifies how a Feature is displayed in the list view. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlListStyle.ItemType">
            <summary>
            Specifies how a kml:Folder and its contents shall be displayed as items in the list view.
            Default value is <see cref="F:Aspose.Gis.Formats.Kml.Styles.KmlItemTypes.Check" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlListStyle.BackgroundColor">
            <summary> Specifies the background color of the graphic element. Default value is <see cref="P:System.Drawing.Color.White" />. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlListStyle.ItemIcons">
            <summary>
            Icon used in the List view that reflects the state of a Folder or Link fetch.
            Default value is <see langword="null"/> means the icons are none.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlListStyle.MaxSnippetLines">
            <summary> Specifies the maximum number of lines to display in the list view. Default value is '2'. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlPolygonStyle">
            <summary>
            Specifies the drawing style for a Polygon,
            including a Polygon and the extruded portion of a kml:Polygon or LineString.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlPolygonStyle.Fill">
            <summary> Specifies whether to fill the polygon. Default value is <see langword="true"/>.</summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Kml.Styles.KmlPolygonStyle.Outline">
            <summary> Specifies whether to outline the polygon. Default value is <see langword="true"/>.</summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlStylesWriter">
            <summary>
            This class allows write the kml styles.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Styles.KmlStylesWriter.#ctor(System.Xml.XmlWriter,System.IO.Stream)">
            <summary> Create an instance </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Styles.KmlStylesWriter.WriteUrlAttribute(Aspose.Gis.IFeatureStyle)">
            <summary> Stores the specified style then generates an unique style url to write as attribute.</summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Styles.KmlStylesWriter.AdjustToTarget(Aspose.Gis.AbstractPath)">
            <summary> Swaps styles into the beginning of our kml-file. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Styles.KmlStylesWriter.WriteStylesNodes">
            <summary> Writes all added styles in the stream. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Kml.Styles.KmlStylesWriter.SetTargetPosition">
            <summary> Remembers a target position to move here styles on the disposing. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.KmlUnits">
            <summary> Specifies units fof an image coordinate system. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlUnits.Pixels">
            <summary> Indicates the x value in pixels. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlUnits.Fraction">
            <summary> Indicates the x value is a fraction of the icon. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Kml.Styles.KmlUnits.InsetPixels">
            <summary> Indicates the indent from the right edge of the icon. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Kml.Styles.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Kml.Styles</c> namespace provides classes for working with KML styles.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver">
            <summary>
            A driver for the MapInfo Interchange Format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.OpenLayer(System.String,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CreateLayer(System.String,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.CreateLayer(System.String,Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions">
            <summary>
            Driver-specific options for MapInfo Interchange format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions.TextStringAttribute">
            <summary>
            Specifies name of the attribute that represents text of 'Text' graphical object.
            </summary>
            <remarks>
            MapInfo Interchange Format specifies a graphical object of type 'Text'.
            'Text' graphical object represents a label on a map. We export 'Text' graphical objects as
            a <see cref="T:Aspose.Gis.Feature"/> with <see cref="T:Aspose.Gis.Geometries.Polygon"/> geometry that bounds the label.
            Text of the label is exported as <see cref="T:Aspose.Gis.FeatureAttribute"/>.
            This property specifies the name of the attribute that is used to export text of the label.
            Default value is <c>"textstring"</c>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions.#ctor(Aspose.Gis.Formats.MapInfoInterchange.MapInfoInterchangeOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoInterchange.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.MapInfoInterchange</c> namespace provides classes for working with MapInfo Interchange Format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.ChainRecords.MapBlockHeaderRecord">
            <summary>
            Coordinates block header.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.ChainRecords.MapChainRecord">
            <summary>
            Base record class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.ChainRecords.MapCoordinateRecord">
            <summary>
            Coordinate record.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.ChainRecords.MapSegmentRecord">
            <summary>
            Segment header for coordinates of polygon and etc.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.ChainRecords.MapSubCollectionRecord">
            <summary>
            Mbr for sub collection in a geometry collection.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain">
            <summary>
            Chain of records for coordinates blocks. There are 4 types of coordinate records:
            block header, coordinate, segment header, mbr for sub collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain.#ctor(System.Int32,System.Int16)">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain"/> class. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain.Position">
            <summary> Current 'virtual' position. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain.StartPosition">
            <summary> Position of first block. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain.LastPosition">
            <summary> Position of last block. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain.BlocksCount">
            <summary> Total  blocks count. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain.RecordsCount">
            <summary> Entities count (coordinates, headers etc). </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapCoordinatesChain.GetRecord(System.Int32)">
            <summary> Get coordinate entities in the specified index. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.MapInfoDbfWriter">
            <summary>
            Write in dbf (native tab).
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoDbfWriter.#ctor(Aspose.Gis.Common.Formats.DBase.DBase)">
            <summary> Create an instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoDbfWriter.WriteAttributesHeader(Aspose.Gis.FeatureAttributeCollection,System.String[])">
            <summary> Write attributes header. The integers, doubles, and some other fields are stored as 'C' columns (strings) </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoDbfWriter.WriteAttributesRecord(Aspose.Gis.FeatureAttributeCollection,Aspose.Gis.Feature)">
            <summary> Write attributes record. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoDbfWriter.Dispose">
            <summary> Free dbf stream if need. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.MapInfoGeometryWriter">
            <summary>
            This class writes graphical objects.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoGeometryWriter.#ctor(System.IO.BinaryWriter,System.IO.BinaryWriter,System.Int16)">
            <summary> Create an instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoGeometryWriter.WriteGeometry(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Feature)">
            <summary> Write geometry. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoGeometryWriter.Dispose">
            <summary> Free streams if need. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoGeometryWriter.GetMapObjectSize(Aspose.Gis.Common.Formats.MapInfo.TabFormat.Map.MapObjectTypeCodes)">
            <summary> Return the size of the object body for the specified object type, see <see cref="T:Aspose.Gis.Common.Formats.MapInfo.TabFormat.Map.MapObjectTypeCodes"/> </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver">
            <summary>
            A driver for the MapInfo Tab format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.OpenLayer(System.String,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CreateLayer(System.String,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.MapInfoTab.MapInfoTabDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions">
            <summary>
            Driver-specific options for MapInfo Tab format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.TextStringAttribute">
            <summary>
            Specifies name of the attribute that represents text of 'Text' graphical object.
            </summary>
            <remarks>
            MapInfo Tab Format specifies a graphical object of type 'Text'.
            'Text' graphical object represents a label on a map. We export 'Text' graphical objects as
            a <see cref="T:Aspose.Gis.Feature"/> with <see cref="T:Aspose.Gis.Geometries.Polygon"/> geometry that bounds the label.
            Text of the label is exported as <see cref="T:Aspose.Gis.FeatureAttribute"/>.
            This property specifies the name of the attribute that is used to export text of the label.
            Default value is <c>"textstring"</c>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.BlockSize">
            <summary>
            Block size for '*.map' files (multiples of 512). Defaults to 16384. Valid values: 512 to 32256.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.IsIgnoreWrongData">
            <summary>
            Determines should we throw exception while work with wrong data or set default values for it
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions.#ctor(Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.MapInfoTabWriteLayer">
            <summary>
            A write-only layer with MapInfoTab features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.MapInfoTab.MapInfoTabOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.MapInfoTab.MapInfoTabWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabWriteLayer.Driver">
            <summary> Gets the <see cref="P:Aspose.Gis.Formats.MapInfoTab.MapInfoTabWriteLayer.Driver" /> that instantiated this layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.MapInfoTab.MapInfoTabWriteLayer.Dispose(System.Boolean)">
            <summary> Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.MapInfoTab.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.MapInfoTab</c> namespace provides classes for working with MapInfo Tab format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.NamespaceGroupDoc">
            <summary>
            <c>Aspose.Gis.Formats</c> namespace provides classes for working with specific GIS formats.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.OsmXml</c> namespace provides classes for working with OSM XML format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlCoordinate">
            <summary>
            Represents a coordinates stored in OSM node.
            This class takes advantage of the fact, that longitude/latitude precisions
            in OSM XML are limited to 7 digits after point, to reduce memory usage.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlCoordinate.#ctor(System.Double,System.Double)">
            <summary>
            Create new instance.
            </summary>
            <param name="longitude">Longitude.</param>
            <param name="latitude">Latitude.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlCoordinate.Longitude">
            <summary> Longitude. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlCoordinate.Latitude">
            <summary> Latitude. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlDriver">
            <summary>
            A driver for the OSM XML format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For OSM XML, the only supported spatial reference system is WGS84.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.OpenLayer(System.String,Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CreateLayer(System.String,Aspose.Gis.Formats.OsmXml.OsmXmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.OsmXml.OsmXmlOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.OsmXml.OsmXmlDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlElement">
            <summary>
            Base class for OSM XML nodes, ways and relations.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlElement.Create(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Creates new instance from XML under the reader.
            </summary>
            <param name="reader">XML reader.</param>
            <param name="readXmlAttributes">Whether to read XML attributes.</param>
            <returns>Newly created instance or null, if element under XML is unknown.</returns>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlElement.Id">
            <summary>
            OSM XML ID of the element.
            Note, that IDs are unique only within one element type. e.g. node and way can have same ID.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlElement.Tags">
            <summary> Tags of this element. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlElement.GetTagValue(System.String)">
            <summary> Gets value of tag with a given key. </summary>
            <param name="key">Key.</param>
            <returns>Value of tag with a given key, null if there is no such key.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlElement.GetXmlAttribute(System.String)">
            <summary> Gets value of XML attribute with a given key.</summary>
            <param name="name">Attribute name.</param>
            <returns>Attribute value, null if there is no attribute with such name.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlElement.AddTag(System.Xml.XmlReader)">
            <summary>
            Parse "tag" element under XmlReader, add parsed tag.
            </summary>
            <param name="reader">XmlReader</param>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder">
            <summary>
            This class creates OSM XML features from <see cref="T:Aspose.Gis.Formats.OsmXml.OsmXmlElement"/>s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.#ctor(Aspose.Gis.Formats.OsmXml.OsmXmlRegistry,Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo)">
            <summary> Create new instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.ReadFeature(Aspose.Gis.Formats.OsmXml.OsmXmlElement)">
            <summary> Read feature represented by OSM XML element. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.ReadTags(Aspose.Gis.Formats.OsmXml.OsmXmlElement,Aspose.Gis.Feature)">
            <summary> Adds tags of element into feature as attributes. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.ReadNodeGeometry(Aspose.Gis.Formats.OsmXml.OsmXmlNode)">
            <summary> Create geometry represented by OSM XML node. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.ReadWayGeometry(System.Int64)">
            <summary> Create geometry represented by OSM XML way. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.ReadRelationGeometry(Aspose.Gis.Formats.OsmXml.OsmXmlRelation)">
            <summary> Create geometry represented by OSM XML relation. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.JoinRings(System.Collections.Generic.List{Aspose.Gis.Geometries.LinearRing})">
            <summary>
            Joins rings if they share same points at endpoints.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlFeatureBuilder.JoinRings(Aspose.Gis.Geometries.LinearRing,Aspose.Gis.Geometries.LinearRing)">
            <summary>
            Joins given linear rings. Assumes that ring1 and ring2 share common point at one of the ends.
            Methods might reverse one of the rings.
            </summary>
            <example>
            JoinRings([p1, p2, p3], [p5, p4, p3]) -> [p1, p2, p3, p4, p5]
            JoinRings([p1, p2, p3], [p1, p5, p4, p3]) -> [p1, p5, p4, p3, p2, p1]
            </example>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo">
            <summary>
            Parses OSM XML file and collects information about a layer and information that can be used for features access.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.#ctor(System.IO.Stream,Aspose.Gis.Formats.OsmXml.OsmXmlRegistry)">
            <summary>
            Create new instance that will represent info of OSM XML from stream.
            </summary>
            <param name="stream">
            Stream. Stream is not disposed and not owned by this class.
            Its up to the called to dispose it.
            </param>
            <param name="registry">Registry.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.Attributes">
            <summary> Attributes of the layer. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.GeometryType">
            <summary> Common geometry type of features in the layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.ContainsNode(System.Int64)">
            <summary> Determine whether layer contains node with given id. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.GetCoordinateOfNode(System.Int64)">
            <summary> Gets coordinate of node with given id. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.ContainsWay(System.Int64)">
            <summary> Determine whether layer contains way with given id. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.GetCoordinatesOfWay(System.Int64)">
            <summary> Gets coordinates of way with given id. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.IsPolygon(System.Int64)">
            <summary> Gets value indicating whether way with an id is a polygon. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.FeaturesCount">
            <summary> Gets number of features in the layer. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.GetFileOffsetOfFeature(System.Int32)">
            <summary> Gets position of feature with given index in the file. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.ParseOsmXmlElements(Aspose.Gis.Common.Formats.Xml.TrackingXmlReader,Aspose.Gis.Formats.OsmXml.OsmXmlRegistry)">
            <summary> Parse OSM XML file, collect required info, like nodes coordinates and elements line info. </summary>
            <param name="xmlReader">XML reader.</param>
            <param name="registry">Registry, to query whether elements should be considered features.</param>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.nodesCoordinates">
            <summary> Mapping from OSM node ID to node coordinate. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.waysCoordinates">
            <summary> Mapping from OSM way ID to way coordinates. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.polygonsIds">
            <summary> Set of way IDs which are polygons. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlLayerInfo.featuresFileOffsets">
            <summary> Mapping from feature index to its position in file. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlNode">
            <summary>
            Represents "node" element in OSM XML.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlNode.#ctor(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Create new instance. Read it from XML reader.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlNode.Coordinate">
            <summary>
            Get coordinate of this node.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlNode.ParseTags(System.Xml.XmlReader)">
            <summary>
            Parse
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlNode.ParseCoordinate(System.Xml.XmlReader)">
            <summary>
            Parse coordinate of node from XML element attributes.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlNode.ParseDouble(System.String,System.String)">
            <summary>
            Try to parse string as double, throw GisException on failure.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlOptions">
            <summary>
            Driver-specific options for OSM XML format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.ReportAllNodes">
            <summary>
            Report all nodes as features, even if they don't have any significant tags.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.ReportAllWays">
            <summary>
            Report all ways as features, even if they don't have any significant tags or don't have any nodes.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.ReportCommonAttributes">
            <summary>
            Report common OSM attributes: visible, version, changeset, timestamp, user and uid.
            Common attributes will be reported as feature attributes with "osm_" prefix, e.g. osm_user, osm_timestamp, etc.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.WriteCommonAttributes">
            <summary>
            Write common OSM attributes: visible, version, changeset, timestamp, user and uid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlOptions.#ctor(Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer">
            <summary>
            A read-only layer with OSM XML features. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.SpatialReferenceSystem">
            <summary>
            Get spatial reference system of the layer. For OSM XML this is always WGS84.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; 
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlReadLayer.OsmXmlEnumerator">
            <summary>
            Enumerator for features in OSM XML file.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry">
            <summary>
            This class determines which OSM XML tags should be exported as attributes,
            which OSM XML elements should be exported as features,
            what geometry type should OSM XML elements be.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.#ctor(Aspose.Gis.Formats.OsmXml.OsmXmlOptions)">
            <summary> Create new instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.IsSignificant(Aspose.Gis.Formats.OsmXml.OsmXmlElement)">
            <summary> Determine if element should be considered feature. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.IsSignificant(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary> Determine if tag should be considered feature attribute. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.IsPolygon(Aspose.Gis.Formats.OsmXml.OsmXmlWay)">
            <summary> Determine if way represents polygon. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.IsMultiPolygon(Aspose.Gis.Formats.OsmXml.OsmXmlRelation)">
            <summary> Determine if relation represents multi polygon. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.IsMultiLineString(Aspose.Gis.Formats.OsmXml.OsmXmlRelation)">
            <summary> Determine if relation represents multi line string. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.GetGeometryType(Aspose.Gis.Formats.OsmXml.OsmXmlElement)">
            <summary> Determine geometry type of the element. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.AddCommonAttributes(Aspose.Gis.FeatureAttributeCollection)">
            <summary>
            Adds common attributes to attributes collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.ReadCommonAttributes(Aspose.Gis.Formats.OsmXml.OsmXmlElement,Aspose.Gis.Feature)">
            <summary>
            Reads common attributes from element XML attributes into feature attributes.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.HasSignificantTags(Aspose.Gis.Formats.OsmXml.OsmXmlElement)">
            <summary> Determine whether at least one tag should be considered feature attribute. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.InsignificantTags">
            <summary> Tags that should not be reported as attributes. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.AreaTags">
            <summary>
            Tags, that indicate that closed way is an area. From GDALs osmconf.ini file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.TagPattern.MatchAny(System.Collections.Generic.IEnumerable{Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.TagPattern},System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Determine if pair match any of the given tag patterns.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.TagPattern.MatchAny(System.Collections.Generic.IEnumerable{Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.TagPattern},System.String,System.String)">
            <summary>
            Determine if pair match any of the given tag patterns.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.TagPattern.#ctor(System.String,System.String)">
            <summary>
            Create new tag pattern. If <paramref name="value"/> is null, tag pattern will match any tag with key, value will be ignored.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.TagPattern.Match(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Determine if given key-value pair matches tag pattern.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRegistry.TagPattern.Match(System.String,System.String)">
            <summary>
            Determine if given key-value pair matches tag pattern.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlRelation">
            <summary>
            Represents "relation" element in OSM XML.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.OsmXml.OsmXmlRelation.#ctor(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlRelation.Members">
            <summary>
            Members of the relation.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlRelationMember">
            <summary>
            Represents "member" element in "relation" in OSM XML.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.OsmXml.OsmXmlWay">
            <summary>
            Represents "way" element in OSM XML.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlWay.IsEmpty">
            <summary> Determine whether way is empty </summary>
            <remarks>
            Empty ways should not be present in valid OSM. We check for empty "just in case" and never
            report such ways as features.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlWay.IsClosed">
            <summary> Determine if way is closed. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlWay.NodeIds">
            <summary> IDs of nodes that are part of this way. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.OsmXml.OsmXmlWriteLayer.Driver">
            <summary> Gets the <see cref="P:Aspose.Gis.Formats.OsmXml.OsmXmlWriteLayer.Driver" /> that instantiated this layer. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlWriteLayer.nodesIds">
            <summary> Set of node IDs which are ways part. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.OsmXml.OsmXmlWriteLayer.waysIds">
            <summary> Set of way IDs which are polygons part. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.PostGis.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.PostGis</c> namespace provides classes for working with PostGIS database.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.PostGis.PostGisDriver">
            <summary>
            A driver for the PostGIS database.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.PostGis.PostGisDriver.OpenDataset(System.Data.IDbConnection)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="connection">Opened connection to the database.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentNullException">The connection is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.PostGis.PostGisOptions">
            <summary>
            Driver-specific options for PostGis format.
            At the moment, the driver provides no customizable options.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.PostGis.PostGisOptions.#ctor">
            <summary> Create new instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.PostGis.PostGisOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.PostGis.PostGisOptions.#ctor(Aspose.Gis.Formats.PostGis.PostGisOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.PostGis.PostGisSrsTableDefinition">
            <summary>
            Information about SPATIAL_REF_SYS table.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.PostGis.PostGisSrsTableDefinition.SridColumnName">
            <summary> Identifier of the SRS. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.PostGis.PostGisSrsTableDefinition.AuthNameColumnName">
            <summary> Name of the authority, e.g. EPSG. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.PostGis.PostGisSrsTableDefinition.AuthSridColumnName">
            <summary> SRID of the authority, e.g. EPSG code. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.PostGis.PostGisSrsTableDefinition.SrTextColumnName">
            <summary> WKT definition of the SRS. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.PostGis.PostGisSrsTableDefinition.Proj4TextColumnName">
            <summary> Proj4 definition of the SRS. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Shapefile</c> namespace provides classes for working with Shapefile format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.QixSpatialIndex">
            <summary>
            An implementation of <see cref="T:Aspose.Gis.Filtering.ISpatialIndex"/> that supports a spatial index (.qix) for shapefile.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileDriver">
            <summary>
            A driver for the Shapefile format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>Boolean value, indicating whether specified spatial reference system is supported by the driver.</returns>
            <remarks>
            For Shapefile, any SRS is supported. Also Shapefile has own more optimal layer edit mode.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.OpenLayer(System.String,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.EditLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for editing.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.EditLayer(System.String,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Opens a layer for editing.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.EditLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Opens a layer for editing.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(System.String,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Shapefile.ShapefileDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileHeader">
            <summary>
            Shapefile header model (only used fields).
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileHeader.ShapeType">
            <summary> Shape type, little Endianness </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileHeader.LayerBox">
            <summary> Minimum bounding rectangle (MBR) of all shapes, little Endianness </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileOptions">
            <summary>
            Driver-specific options for Shapefile format.
            At the moment, the driver provides no customizable options.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileOptions.IsIgnoreWrongData">
            <summary>
            Determines should we throw exception while parse wrong data or set default values for it
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileOptions.#ctor(Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer">
            <summary>
            A read-only layer with Shapefile features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.SpatialReferenceSystem">
            <summary>
            Gets spatial reference system of this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.GetEnumerator">
            <summary>
            Enumerates features in the layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ReadSpatialReferenceSystem(Aspose.Gis.AbstractPath)">
            <summary>
            Read spatial reference system from *.prj file at <paramref name="path"/>.
            </summary>
            <exception cref="T:System.IO.IOException"/>
            <exception cref="T:Aspose.Gis.GisException"> File is not a valid prj file. </exception>
            <param name="path">Path to *.prj file</param>
            <returns> Spatial reference system from file, or null if file does not exists. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ReadFeatureHeader(System.IO.Stream,System.Int32@,System.Int32@)">
            <summary>
            Read feature header for the stream.
            </summary>
            <param name="stream">The stream to read from.</param>
            <param name="recordNumber">Feature record number.</param>
            <param name="contentLength">Feature content length.</param>
            <returns><see langword="true" /> if a header was read successfully.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.CheckFileHeader(System.Byte[],System.Int64)">
            <summary>
            Checks the file contains a valid Shapefile header.
            </summary>
            <param name="header">The header.</param>
            <param name="streamLength">Length of the file.</param>
            <returns>File length in bytes.</returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator">
            <summary>
            Enumerator for features in a Shapefile
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator.#ctor(Aspose.Gis.Formats.Shapefile.ShapefileReadLayer)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator"/> class.
            </summary>
            <param name="layer">The parent layer.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            <see langword="true" /> if the enumerator was successfully advanced to the next element;
            <see langword="false" /> if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator.Dispose">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.ShapefileEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.IndexRecord">
            <summary>
            A single record in the shapefile index file.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.IndexRecord.Offset">
            <summary>
            Offset of feature data, in bytes.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.IndexRecord.Length">
            <summary>
            Length of feature data, in bytes.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.IndexRecord.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Shapefile.ShapefileReadLayer.IndexRecord"/> struct.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer">
            <summary>
            An append-only layer with Shapefile features.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.Shapefile.ShapefileOptions)">
            <summary>
            Initializes a new instance for editing.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.WriteSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.AbstractPath)">
            <summary>
            Write <paramref name="spatialReferenceSystem"/> to <paramref name="prjFilePath"/> if SRS is not null.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.path">
            <summary>
            Path to the layer.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.shapefileStream">
            <summary>
            Stream for .SHP data
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.shapefileIndexStream">
            <summary>
            Stream for .SHX data
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.dbf">
            <summary>
            Instance of the attributes database
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.buffer">
            <summary>
            Write buffer.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.layerBox">
            <summary> Bounding box of the entire layer. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.featureBox">
            <summary> Bounding box of the last added feature. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.totalShpLength">
            <summary> Total length of the .SHP file, in bytes. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.totalShxLength">
            <summary> Total length of the .SHX file, in bytes. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.recordNumber">
            <summary> Number of current record. Record numbers begin at 1. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.layerShapeType">
            <summary> Shape type code for the layer. <c>0</c> is null geometry. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.attributesHeaderWritten">
            <summary> Indicates whether attributes schema has been written. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.FileHeaderLength">
            <summary> Length of the .SHP/.SHX header, in bytes. </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.FeatureHeaderLength">
            <summary> Length of the feature record header, in bytes. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.Shapefile.ShapefileWriteLayer.RemoveEmptyPoints(Aspose.Gis.Geometries.IMultiPoint)">
            <summary>
            Returns <paramref name="multiPoint"/> if there are no empty points in it. Otherwise, return new MultiPoint with
            no empty points in it.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.SqlServer.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.SqlServer</c> namespace provides classes for working with SQL Server.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.SqlServer.SqlServerDriver">
            <summary>
            A driver for the SQL Server database.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.SqlServer.SqlServerDriver.OpenDataset(System.Data.IDbConnection)">
            <summary>
            Opens the dataset.
            </summary>
            <param name="connection">Opened connection to the database.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Dataset" />.</returns>
            <exception cref="T:System.ArgumentNullException">The connection is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the dataset.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.SqlServer.SqlServerOptions">
            <summary>
            Driver-specific options for SqlServer format.
            At the moment, the driver provides no customizable options.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.SqlServer.SqlServerOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.SqlServer.SqlServerOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.SqlServer.SqlServerOptions.#ctor(Aspose.Gis.Formats.SqlServer.SqlServerOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.TopoJson</c> namespace provides classes for working with TopoJSON format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonDriver">
            <summary>
            A driver for the TopoJSON format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines, whether specified spatial reference system is supported by the driver.
            </summary>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>
            Boolean value, indicating whether specified spatial reference system is supported by the driver.
            </returns>
            <remarks>
            For TopoJSON, the only supported spatial reference system is 'null', since there is no way to store
            spatial reference system information in TopoJSON file and TopoJSON specification does not specify what
            is the spatial reference system of geometries in TopoJSON file.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CanCreateLayers">
            <summary>
            Gets a value indicating whether this driver can create vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open vector layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open vector layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CanCreateDatasets">
            <summary>
            Gets a value indicating whether this driver can create datasets.
            </summary>
            <value>
            <see langword="true"/>, if this driver can create datasets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.OpenLayer(System.String,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
            <summary>
            Opens a layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(System.String,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.CreateLayer(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.InvalidOperationException">The layer already exists.</exception>
            <exception cref="T:System.NotSupportedException">Spatial reference system is not supported by the driver.</exception>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.TopoJson.TopoJsonDriver"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonOptions">
            <summary>
            Driver-specific options for TopoJSON format.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.NestedPropertiesSeparator">
            <summary>
            Gets or sets a string that is used to separate components of nested attributes.
            Default is "_".
            </summary>
            <remarks>
            This is reading option - it does not affect writing.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute">
            <summary>
            Name of the attribute, that reflects the name of the object that contains a feature.
            </summary>
            <remarks>
            TopoJSON may contain any number of named objects. Every such object can contain
            multiple features. Refer to TopoJSON specification to more detail on named objects.
            When reading TopoJSON, this property specifies, what attribute should reflect name of the object that contains a feature.
            When writing TopoJSON, this property specifies, what attribute should be used to group features in objects.
            Default is "topojson_object_name".
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.DefaultObjectName">
            <summary>
            Name of the object where features are put by default.
            </summary>
            <remarks>
            This is writing option - it does not affect reading.
            TopoJSON may contain any number of named objects. Every such object can contain
            multiple features. In order to specify in which object to put your feature, use
            <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute"/> property.
            If attribute with name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute"/> is <see langword="null"/>  or unset for
            some feature, this feature is added to object with the name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.DefaultObjectName"/>.
            If attribute with name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute"/> is not present in <see cref="P:Aspose.Gis.VectorLayer.Attributes"/>
            collection, all features are put into object with name <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.ObjectNameAttribute"/>.
            Default value is "unnamed".
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.Transform">
            <summary>
            Specifies transform object to use to quantize coordinates and delta-encode arcs in output TopoJSON.
            </summary>
            <remarks>
            This is writing option - it does not affect reading.
            This option is mutually exclusive with <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.QuantizationNumber"/> - only one of this two options can be not <see langword="null"/>.
            If this is not <see langword="null"/> - output TopoJSON coordinates are quantized and arcs are delta-encoded with the specified
            transform object.
            Refer to TopoJSON specification for more details on transform object.
            Defaults to <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.QuantizationNumber">
            <summary>
            Specifies quantization number to use to quantize coordinates and delta-encode arcs in output TopoJSON.
            </summary>
            <remarks>
            This is writing option - it does not affect reading.
            This option is mutually exclusive with <see cref="P:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.Transform"/> - only one of this two options can be not <see langword="null"/>.
            If this is not <see langword="null"/> - output TopoJSON coordinates are quantized and arcs are delta-encoded with the specified
            quantization number. Quantization number determines the maximum number of expressible values per dimension
            in the resulting quantized coordinates; typically a power of ten is chosen.
            Defaults to <see langword="null"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set">
            Argument is less than two.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonOptions.#ctor(Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer">
            <summary>
            A read-only layer with TopoJSON features. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer"/> class.
            </summary>
            <param name="path">Path to the backing file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.GeometryType">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.SpatialReferenceSystem">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Driver">
            <inheritdoc/>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Count">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.ParseFeatures(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parse features from Topology["objects"].
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.ParseFeaturesFromObject(System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parse features from element of Topology["objects"] object.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.ParseFeaturesFromGeometryCollection(Newtonsoft.Json.Linq.JObject,Aspose.Gis.Geometries.GeometryCollection,System.String,System.Boolean)">
            <summary>
            Parses feature inside 'GeomteryCollection'. Adds geometries of those features into the collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.ReadFeaturePropertiesAndId(Aspose.Gis.Feature,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Read attributes of feature from its 'properties' and 'id' objects.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Arcs">
            <summary>
            A collection of arcs.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Arcs.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Arcs.AddArc(Aspose.Gis.Geometries.LineString)">
            <summary>
            Adds an arc into arcs list.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Arcs.CreateLineString(Newtonsoft.Json.Linq.JArray)">
            <summary>
            Creates a line string from array of arcs indeces.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonReadLayer.Arcs.CreateLinearRing(Newtonsoft.Json.Linq.JArray)">
            <summary>
            Creates a linear ring from array of arcs indeces.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonTransform">
            <summary>
            A transform object that can be used in order to quantize coordinates when writing a TopoJSON file.
            </summary>
            <remarks>
            Refer to TopoJSON specification for more details on transform object.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create new instance of <see cref="T:Aspose.Gis.Formats.TopoJson.TopoJsonTransform"/>.
            </summary>
            <param name="xTranslate">Translate to apply to X coordinate.</param>
            <param name="yTranslate">Translate to apply to Y coordinate.</param>
            <param name="xScale">Scale to apply to X coordinate.</param>
            <param name="yScale">Scale to apply to Y coordinate.</param>
            <exception cref="T:System.ArgumentException">One of the scales is equal to 0.</exception>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.XTranslate">
            <summary>
            Translate to apply to X coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.YTranslate">
            <summary>
            Translate to apply to Y coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.XScale">
            <summary>
            Scale to apply to X coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.YScale">
            <summary>
            Scale to apply to Y coordinate.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.Decode(System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Transforms quantized X and Y into regular X and Y.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.Encode(System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Transforms regular X and Y into quantized X and Y.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.DecodeX(System.Int32)">
            <summary> Transforms quantized X into regular X. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.DecodeY(System.Int32)">
            <summary> Transforms quantized Y into regular X. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.EncodeX(System.Double)">
            <summary> Transforms quantized X into regular X. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonTransform.EncodeY(System.Double)">
            <summary> Transforms quantized Y into regular X. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.TopoJsonWriteLayer">
            <summary>
            A write-only layer with TopoJSON features. 
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonWriteLayer.#ctor(Aspose.Gis.AbstractPath,Aspose.Gis.Formats.TopoJson.TopoJsonOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.TopoJson.TopoJsonWriteLayer"/> class.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Options for parsing and serialization.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <exception cref="T:System.ArgumentNullException"> Path is null. </exception>
            <exception cref="T:System.InvalidOperationException"> The layer already exists. </exception>
            <exception cref="T:System.NotSupportedException"> Not supported spatial reference system passed. </exception>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.TopoJsonWriteLayer.Driver">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonWriteLayer.WriteFeature(Aspose.Gis.Feature,Aspose.Gis.Geometries.IGeometry,Aspose.Gis.IFeatureStyle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonWriteLayer.GetPreprocessingFlags">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.TopoJsonWriteLayer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.ArcsList">
            <summary>
            Represents a list of arcs.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.ArcsList.Build(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ILineString})">
            <summary>
            Creates a list of arcs, so every line from the input collection can be represented by a single
            arc from the list.
            </summary>
            <remarks>
            The result list of arcs contains unique line strings from the input.
            What's more, from ArcsList perspective, two lines are considered equal if one line is reverse
            of another line.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.ArcsList.ArcIndexOf(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Gets an index that can represent an argument.
            If there is an arc that equals to the argument - return index of the arc.
            If there is an arc that equals to the argument reversed - return binary compatible index of the arc (e.g. ~index)
            </summary>
            <exception cref="T:System.InvalidOperationException">
            It is impossible to represent the argument with a single arc.
            </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.ArcsList.OrderIndependentComparer">
            <summary>
            Compare line strings in such way, that (line == line.Reverse())
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.ArcsList.OrderIndependentComparer.IsIncreasing(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Whether argument line string is increasing.
            </summary>
            <remarks>
            An increasing line is the line, whose last point is greater that first point.
            Points are compared by X coordinate first, then by Y coordinate, then by Z coordinate.
            IsIncreasing(line) == !IsIncreasing(line.Reverse)
            </remarks>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.JunctionsDetector">
            <summary>
            Detects junction points.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.JunctionsDetector.FindJunctionPoints(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ILineString})">
            <summary>
            Detects a set of junctions points from within a collection of lines.
            </summary>
            <remarks>
            Junction points are points where one line diverges from another one.
            So, if there are two lines, (A-B-C) and (D-B-E), B is not a junction points, just an intersection
            point. If there are two lines (A-B-C) and (C-B-A), B is still not a junction point. But if there
            is one more line (A-B-F), B _is_ a junction point, since at the point B line (A-B-C) diverges from
            (A-B-F).
            </remarks>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.JunctionsDetector.LineStringPoint">
            <summary>
            Represents a point inside a LineString. Keeps reference to the LineString that contains the point and
            hold an index of the point.
            Implements Equals and GetHashCode so they compare actual point values (e.g. X, Y, Z, M coordinates).
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.JunctionsDetector.LineStringPoint.#ctor(Aspose.Gis.Geometries.PointsSequence,System.Int32)">
            <summary>
            Creates new instance.
            </summary>
            <param name="line">LineString that contains this point.</param>
            <param name="index">Index where this point is in LineString.</param>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.Write.JunctionsDetector.LineStringPoint.Point">
            <summary>
            Gets an actual point value.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.JunctionsDetector.LineStringPoint.FormsJunctionWith(Aspose.Gis.Formats.TopoJson.Write.JunctionsDetector.LineStringPoint)">
            <summary>
            Determine whether this point forms junction with another point (with respect to this points
            line string and arguments line string).
            Assumes that this.Point == other.Point
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.LineToParts">
            <summary>
            A mapping from line to parts it contains.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.LineToParts.Build(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ILineString},System.Collections.Generic.ICollection{Aspose.Gis.Geometries.IPoint})">
            <summary>
            Creates new instance. A collection of input lines <paramref name="lines"/> are split into parts
            at points specified in <paramref name="splitPoints"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.Write.LineToParts.Lines">
            <summary>
            Gets lines used to build this instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.TopoJson.Write.LineToParts.Parts">
            <summary>
            Gets all parts created after splitting.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.LineToParts.GetPartsOfLine(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Gets parts correspondent to the argument. 
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.LineStringsEqualityComparer">
            <summary>
            A comparer that compares line strings.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Formats.TopoJson.Write.LineStringsEqualityComparer.hashCodesCache">
            <summary>
            A cache that is based on references.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.LineToArcIndeces">
            <summary>
            Contains a mapping from LineString to indeces in ArcsList needed to represent it.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.LineToArcIndeces.Build(Aspose.Gis.Formats.TopoJson.Write.LineToParts,Aspose.Gis.Formats.TopoJson.Write.ArcsList)">
            <summary>
            Create new instance.
            </summary>
            <param name="parts">A mapping from LineString to its parts.</param>
            <param name="arcs">An ArcsList built from <paramref name="parts"/>.</param>
            <returns>New LineToArcIndeces instance.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.TopoJson.Write.LineToArcIndeces.GetArcIndecesForLine(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Gets the list of arc indeces needed to represent an argument.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.TopoJson.Write.PointsEqualityComparer">
            <summary>
            Compares points.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.XyzTile</c> namespace provides classes for working with XyzTile format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.TileBitmapLayer">
            <summary>
            A read-only layer with XyzTiles raster data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.#ctor(System.IO.Stream,Aspose.Gis.Extent,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Formats.XyzTile.TileBitmapLayer"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.BandCount">
            <summary> Returns '4' value (red-green-blue-alpha). It is a PNG raster. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.Width">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.Height">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.UpperLeftX">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.UpperLeftY">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.CellSize">
            <summary> Returns data about pixel or cell such as size, rotation (skew), upper left, etc. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.SpatialReferenceSystem">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.Driver">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.GetBand(System.Int32)">
            <summary> Gets a band by the specified index. </summary>
            <param name="index"> Only the value "0" is possible. </param>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.TileBitmapLayer.ReadOnExpressionInternal(Aspose.Gis.Raster.RasterRect,Aspose.Gis.Raster.RasterReadExpression)">
            <summary> Reads and processes the band values for Xyz Tile. No verify input params. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.TileDetector">
            <summary>
            Allows us to define tiles by coordinates (in WebMercator SRS).
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.TileDetector.#ctor">
            <summary> Create an instance of an object. </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.TileDetector.MetersToTile(System.Int32,System.Double,System.Double)">
            <summary>
            Computes a tile by a specified coordinate (in WebMercator SRS).
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.TileDetector.Resolution(System.Int32)">
            <summary> Compute a resolution in a specified level/zoom. </summary>
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.XyzConnection">
            <summary> A connection for the XyzTiles format. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.XyzConnection.Url">
            <summary>
            Url template.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzConnection.#ctor(System.String)">
            <summary>
            Create a new instance of <see cref="T:Aspose.Gis.Formats.XyzTile.XyzConnection"/>.
            </summary>
            <param name="urlTemplate">Tile server URL template. This template contains {z}, {x} and {y} placeholders.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzConnection.Clone">
            <summary> Clones this instance. </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzConnection.#ctor(Aspose.Gis.Formats.XyzTile.XyzConnection)">
            <summary> Create new instance, that is clone of argument. </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.XyzTile">
            <summary>
            This class describes tiles for Xyz tile servers.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.XyzTile.CellX">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.XyzTile.CellY">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTile.AsPath">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTile.GetExtent">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTile.AsRaster">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.XyzTiles">
            <summary>
            A XyzTiles provide access to <see cref="T:Aspose.Gis.Formats.XyzTile.XyzTile"/> objects.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTiles.#ctor(Aspose.Gis.Formats.XyzTile.XyzConnection)">
            <summary>
            Create an instance of <see cref="T:Aspose.Gis.Formats.XyzTile.XyzTiles"/>.
            </summary>
            <param name="connection">A connection containing web options.</param>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTiles.GetTiles(System.Int32,Aspose.Gis.Extent)">
            <summary>
            Loads tiles by the spatial bounding box and zoom level.
            </summary>
            <param name="zoom">The zoom level for loading tiles. The highest zoom level is 0. Most tile providers have about 22 maximum zoom levels.</param>
            <param name="extent">The bounding box to load tiles. The Wgs84 spatial reference will be used if it is missed. </param>
            <returns>The web tiles.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTiles.GetTile(System.Int32,System.Int32,System.Int32)">
            <summary>
            Loads the specified tile.
            </summary>
            <param name="zoom">The zoom level for loading tiles. The highest zoom level is 0. Most tile providers have about 22 maximum zoom levels.</param>
            <param name="x">An x-column of a tile.</param>
            <param name="y">A y-row of a tile.</param>
            <returns>The web tile.</returns>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTiles.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.XyzTilesDriver">
            <summary>
            A driver for the XYZ tiled web maps.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Formats.XyzTile.XyzTilesDriver.OpenLayer(Aspose.Gis.Formats.XyzTile.XyzConnection)">
            <summary>
            Opens the tiles set.
            </summary>
            <param name="connection">A connection for the XyzTiles format.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Formats.XyzTile.XyzTiles" />.</returns>
            <exception cref="T:System.ArgumentNullException">The connection is <see langword="null" />.</exception>
        </member>
        <member name="T:Aspose.Gis.Formats.XyzTile.XyzTileSize">
            <summary>
            Describes the size, extent and resolution of a web tile.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.XyzTileSize.CellX">
            <summary> The X-Column of a tile. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.XyzTileSize.CellY">
            <summary> The Y-Row of a tile. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.XyzTileSize.Extent">
            <summary> The tile extent. </summary>
        </member>
        <member name="P:Aspose.Gis.Formats.XyzTile.XyzTileSize.Resolution">
            <summary> Resolution of a tile. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoConvert">
            <summary>
            Converts coordinates to/from the different formats.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoConvert.AsPointText(System.Double,System.Double,Aspose.Gis.PointFormats)">
            <summary>
            Returns the calculated position as a string in the specified format.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <param name="format">Format of the result.</param>
            <returns>Position as string.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoConvert.AsPointText(Aspose.Gis.Geometries.IPoint,Aspose.Gis.PointFormats)">
            <summary>
            Returns the calculated position as a string in the specified format.
            </summary>
            <param name="point">IPoint object.</param>
            <param name="format">Format of the result.</param>
            <returns>Position as string.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoConvert.ParsePointText(System.String)">
            <summary>
            Converts the string that contains сoordinates to IPoint object.
            </summary>
            <param name="text">A string that contains coordinates to convert.
            The string should contain both coordinate latitude and longitude.
            Coordinates should be separated by whitespace, by comma or by semicolon.
            </param>
            <returns>IPoint object with coordinates that are equivalent to the input string.</returns>
            <exception cref="T:Aspose.Gis.GisException"></exception>
            <remarks>
            Examples: "80° 151°", "74°50.82', 172°08.21'", "80°;151°", "2CMB", "2CMB6682893142", "2C MB 66828 93142", "WMAQ12405535".
            </remarks>
        </member>
        <member name="M:Aspose.Gis.GeoConvert.TryParsePointText(System.String,Aspose.Gis.Geometries.IPoint@)">
            <summary>
            Converts the string that contains сoordinates to IPoint object. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">A string that contains coordinates to convert.
            The string should contain both coordinate latitude and longitude.
            Coordinates should be separated by whitespace, by comma or by semicolon.
            </param>
            <param name="point">When this method returns, contains the IPoint object with parsed coordinates, if the conversion succeeded, or null if the conversion failed.</param>
            <returns>True if text was parsed successfully, otherwise False.</returns>
            <remarks>
            Examples: "80° 151°", "74°50.82', 172°08.21'", "80°;151°", "2CMB", "2CMB6682893142", "2C MB 66828 93142", "WMAQ12405535".
            </remarks>
        </member>
        <member name="T:Aspose.Gis.Geometries.CircularString">
            <summary>
            A multi-vertex curve with circular interpolation between points.
            </summary>
            <remarks>
            The <c>CircularString</c> consists of one or more circular arc segments connected end to end.
            The first three points define the first segment. The first point is the start point of the arc.
            The second point is any intermediate point on the arc other than the start or end point.
            The third point is the end of the arc. Subsequent arcs are defined by their intermediate and end points only,
            as the start point is implicitly defined as the previous segment's end point.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString"/> class.
            </summary>
            <param name="collection">The collection of points.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">Any point is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty"/> is <see langword="true"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(Aspose.Gis.Geometries.ICircularString)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString"/> class.
            </summary>
            <param name="other">The other string to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.Count">
            <summary>
            Gets the number of points in the <see cref="T:Aspose.Gis.Geometries.CircularString" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Gis.Geometries.IPoint"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Geometries.IPoint"/>.
            </value>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="set">The value is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Point is empty.</exception>
            <exception cref="T:System.ArgumentException" accessor="set">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.CircularString.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.StartPoint">
            <summary>
            Returns a copy of the starting point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.EndPoint">
            <summary>
            Returns a copy of the end point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, if SpatialReferenceSystem is unset.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.HasCurveGeometry">
            <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
            <value>
              <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(Aspose.Gis.Geometries.IPoint)">
            <summary>
            Adds a point to the end of the circular string.
            </summary>
            <param name="point">The point to add.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            The argument is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty"/> is <see langword="true"/>).
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.CircularString.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(System.Double,System.Double)">
            <summary>
            Adds a point to the end of the circular string.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(System.Double,System.Double,System.Double)">
            <summary>
            Adds a point to the end of the circular string.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.AddPoint(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a point to the end of the circular string.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
            <param name="m">The value for M coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.Equals(Aspose.Gis.Geometries.ICircularString)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.Reverse">
            <summary>
            Reverses order of points in this <see cref="T:Aspose.Gis.Geometries.CircularString" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.op_Equality(Aspose.Gis.Geometries.CircularString,Aspose.Gis.Geometries.CircularString)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.op_Inequality(Aspose.Gis.Geometries.CircularString,Aspose.Gis.Geometries.CircularString)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.GetPointsSequence(Aspose.Gis.Geometries.ICircularString)">
            <summary>
            Returns an internal points sequence. Use this method in order to access
            coordinates faster (via <see cref="P:Aspose.Gis.Geometries.PointsSequence.Coordinates"/>). You can freely modify the result,
            all modifications to points sequence will be reflected by this instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(Aspose.Gis.Geometries.CircularString)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString"/> class.
            </summary>
            <param name="other">The other circular to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(System.Collections.Generic.List{Aspose.Gis.Common.Coordinate})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString"/> class.
            </summary>
            <param name="coordinates">
            The coordinates. CircularString takes ownership of the coordinates.
            DO NOT modify the list after construction.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString"/> class.
            </summary>
            <param name="sequence">
            The points sequence. LineString takes ownership of the points sequence.
            DO NOT modify the points sequence after construction.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.#ctor(Aspose.Gis.Common.CircularArc)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CircularString"/> class with a single arc.
            </summary>
            <param name="arc">An arc</param>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.IsEditable">
            <summary>
            Gets a value indicating whether this instance can be edited.
            </summary>
            <value>
              <see langword="true" /> if this instance is editable; otherwise, <see langword="false" />.
            </value>
            <remarks>
            In order to obtain an editable copy of the geometry use <see cref="M:Aspose.Gis.Geometries.Geometry.ToEditable``1"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.Coordinates">
            <summary>
            Returns list of coordinates of this circular string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.ZValues">
            <summary>
            Returns list of z values of this circular string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.CircularString.MValues">
            <summary>
            Returns list of m values of this circular string.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.LockFromEditing">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.RoundXY(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.RoundZ(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.RoundM(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.GetBoundingRectangle">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CircularString.GetIsClockwise">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Geometries.CompoundCurve">
            <summary>
            A curve that represents a sequence of contiguous curves such that adjacent curves are joined at their end points.
            </summary>
            <remarks>
            Compound curve can not contains other compound curves.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CompoundCurve"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ICurve})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CompoundCurve"/> class.
            </summary>
            <param name="curves">The collection of curves.</param>
            <exception cref="T:System.ArgumentNullException">The argument or any of its elements is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            There are at least two not null spatial reference systems that don't equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.#ctor(Aspose.Gis.Geometries.ICompoundCurve)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CompoundCurve"/> class.
            </summary>
            <param name="other">The other line to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.Count">
            <summary>
            Gets the number of curves in the <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.StartPoint">
            <summary>
            Returns a copy of the starting point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.EndPoint">
            <summary>
            Returns a copy of the end point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, if SpatialReferenceSystem is unset.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.HasCurveGeometry">
            <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
            <value>
              <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CompoundCurve.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Geometries.ICurve"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Geometries.ICurve"/>.
            </value>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.AddCurve(Aspose.Gis.Geometries.ICurve)">
            <summary>
            Adds a curve to the end of this <see cref="T:Aspose.Gis.Geometries.CompoundCurve"/>.
            </summary>
            <param name="curve">Curve to add.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"> <ul>
            <li> Arguments type is <see cref="T:Aspose.Gis.Geometries.CompoundCurve"/> </li>
            <li> Argument is empty </li>
            <li> <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and
            <see cref="P:Aspose.Gis.Geometries.CompoundCurve.SpatialReferenceSystem"/> of argument are both not <see langword="null"/> 
            and don't equal to each other </li>
            </ul> </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.Aspose#Gis#Geometries#ICurve#ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.Reverse">
            <summary>
            Reverses this <see cref="T:Aspose.Gis.Geometries.CompoundCurve"/>. That is - reverse order of curves and every curve inside this compound curve.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.Equals(Aspose.Gis.Geometries.ICompoundCurve)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.op_Equality(Aspose.Gis.Geometries.CompoundCurve,Aspose.Gis.Geometries.CompoundCurve)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.op_Inequality(Aspose.Gis.Geometries.CompoundCurve,Aspose.Gis.Geometries.CompoundCurve)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.AddCurveRef``1(``0@)">
            <summary>
            Adds a curve. Does not copy the argument, just reference assigns it.
            Sets reference to null in order to prevent modifications of the geometry from outside.
            Any mutations to the argument after addition will be reflected in the polygon and can result in invalid
            state of the polygon. DO NOT modify the geometry after addition.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.RoundXY(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to X and Y coordinates of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.RoundZ(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to Z coordinate of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.RoundM(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to M coordinate of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CompoundCurve.GetIsClockwise">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.Geometries.Curve">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.Curve" /> is a sequence of points.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Curve.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Curve.StartPoint">
            <summary>
            Returns a copy of the starting point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Curve.EndPoint">
            <summary>
            Returns a copy of the end point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Curve.IsClosed">
            <summary>
            Gets a values indicating whether a curve is closed. 
            A curve is closed if its start point is equal to its end point.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.ILineString"/> that approximates or equivalent to this curve.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.ILineString"/> that approximates or equivalent to this curve:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.ILineString"/> itself the result is equivalent to this object
             If this object is <see cref="T:Aspose.Gis.Geometries.ICircularString"/> the result is the circular string linearized with the specified <paramref name="tolerance"/>
             If this object is <see cref="T:Aspose.Gis.Geometries.ICompoundCurve"/> - all curves from it are linearized and then joined into <see cref="T:Aspose.Gis.Geometries.ILineString"/>
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.Reverse">
            <summary>
            Reverses this curve.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Curve"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.#ctor(Aspose.Gis.Geometries.Curve)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Curve"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Curve" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.EnsureClockwise(Aspose.Gis.Geometries.ICurve)">
            <summary>
            Ensures that argument is clockwise.
            </summary>
            <param name="curve">Argument.</param>
            <returns>
            If argument is clockwise - argument itself;
            If argument is counter-clockwise - reversed copy of argument.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.EnsureCounterClockwise(Aspose.Gis.Geometries.ICurve)">
            <summary>
            Ensures that argument is counter-clockwise.
            </summary>
            <param name="curve">Argument.</param>
            <returns>
            If argument is counter-clockwise - argument itself;
            If argument is clockwise - reversed copy of argument.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.EnsureWindingOrder(Aspose.Gis.Geometries.ICurve,System.Boolean)">
            <summary>
            Ensured that arguments winding order is clockwise or counter-clockwise.
            </summary>
            <param name="curve">Argument.</param>
            <param name="clockwise">Whether argument should be clockwise.</param>
            <returns>
            If arguments winding order matches <paramref name="clockwise"/> value - argument itself;
            else - reversed copy of argument.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Curve.GetIsClockwise">
            <summary>
            Determines if the curve has clockwise winding. 
            </summary>
            <returns><see langword="true" /> if clockwise; otherwise <see langword="false" />.</returns>
            <remarks> If curve is not a ring (for example it is self intersecting or not closed), then function result is undefined. </remarks>
        </member>
        <member name="T:Aspose.Gis.Geometries.CurvePolygon">
            <summary>
            A planar surface, defined by 1 exterior boundary and 0 or more interior boundaries.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CurvePolygon"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.#ctor(Aspose.Gis.Geometries.ICurve)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CurvePolygon"/> class.
            </summary>
            <param name="exteriorRing">The exterior ring.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.#ctor(Aspose.Gis.Geometries.ICurve,System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ICurve})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CurvePolygon"/> class.
            </summary>
            <param name="exteriorRing">The exterior ring.</param>
            <param name="interiorRings">The interior rings.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.HasCurveGeometry">
            <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
            <value>
              <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.ExteriorRing">
            <summary>
            Gets the exterior ring.
            </summary>
            <value>
            The exterior ring.
            </value>
            <exception cref="T:System.ArgumentException" accessor="set">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.CurvePolygon.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.CurvePolygon.InteriorRingsCount">
            <summary>
            Gets the number of interior rings.
            </summary>
            <value>
            The number of interior rings.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.GetPointOnSurface">
            <summary>
            Finds a point that is guaranteed to be on this curved polygon.
            </summary>
            <returns>A point on this curved polygon. An empty point if this curved polygon has no interior.</returns>
            <exception cref="T:System.InvalidOperationException">curved polygon is invalid in such way that operation can not be completed.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.op_Equality(Aspose.Gis.Geometries.CurvePolygon,Aspose.Gis.Geometries.CurvePolygon)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.op_Inequality(Aspose.Gis.Geometries.CurvePolygon,Aspose.Gis.Geometries.CurvePolygon)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.GetInteriorRing(System.Int32)">
            <summary>
            Gets the interior ring by its index.
            </summary>
            <param name="index">The index.</param>
            <returns>The interior ring.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.AddInteriorRing(Aspose.Gis.Geometries.ICurve)">
            <summary>
            Adds an interior ring.
            </summary>
            <param name="ring">The ring to add.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.CurvePolygon.SpatialReferenceSystem"/> of argument are both not
            <see langword="null"/> and don't equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.Equals(Aspose.Gis.Geometries.ICurvePolygon)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.#ctor(Aspose.Gis.Geometries.CurvePolygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.CurvePolygon"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.CurvePolygon" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.SetExteriorRingRef``1(``0@)">
            <summary>
            Sets the exterior ring. Does not copy the argument, just reference assigns it.
            Sets reference to null in order to prevent modifications of the geometry from outside.
            Any mutations to the argument after addition will be reflected in the curve polygon and can result in invalid
            state of the curve polygon. DO NOT modify the geometry after setting.
            </summary>
            <param name="ring">
            Exterior ring to set.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.AddInteriorRingRef``1(``0@)">
            <summary>
            Adds an interior ring. Does not copy the argument, just reference assigns it.
            Sets reference to null in order to prevent modifications of the geometry from outside.
            Any mutations to the argument after addition will be reflected in the polygon and can result in invalid
            state of the polygon. DO NOT modify the geometry after addition.
            </summary>
            <param name="ring">
            Ring to add.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.RoundXY(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.RoundZ(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.RoundM(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.GetBoundingRectangle">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.CurvePolygon.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Geometry">
            <summary>
            The abstract root class of the geometries hierarchy.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.FromText(System.String)">
            <summary>
            Creates a geometry from its Well-Known Text representation.
            </summary>
            <param name="wkt">Well-Known Text representation of a geometry.</param>
            <returns>A geometry represented by the argument.</returns>
            <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
            <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
            <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Text. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.FromText(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a geometry from its Well-Known Text representation.
            </summary>
            <param name="wkt">Well-Known Text representation of a geometry.</param>
            <param name="spatialReferenceSystem">Spatial Reference System to be assigned to the geometry.</param>
            <returns>A geometry represented by the argument.</returns>
            <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
            <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
            <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Text. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.FromBinary(System.Byte[])">
            <summary>
            Creates a geometry from its Well-Known Binary representation.
            </summary>
            <param name="wkb">Well-Known Binary representation of a geometry.</param>
            <returns>A geometry represented by the argument.</returns>
            <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
            <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
            <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Binary. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.FromBinary(System.Byte[],Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates a geometry from its Well-Known Binary representation.
            </summary>
            <param name="wkb">Well-Known Binary representation of a geometry.</param>
            <param name="spatialReferenceSystem">Spatial Reference System to be assigned to the geometry.</param>
            <returns>A geometry represented by the argument.</returns>
            <exception cref="T:System.ArgumentNullException"> Argument is null.</exception>
            <exception cref="T:System.NotSupportedException"> Argument represents a geometry of not supported type. </exception>
            <exception cref="T:System.FormatException"> Argument is not a valid Well-Known Binary. </exception>
            <remarks>
            If there are extra bytes after the geometry a <see cref="T:System.FormatException"/> exception is thrown.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            If the dimension is unknown (e.g. for an empty GEOMETRYCOLLECTION) <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Point" /> is returned.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.Null">
            <summary>
            Gets an instance of null geometry.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.CoordinateDimension">
            <summary>
            Gets the number of coordinate dimensions for this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
            <value>
            The number of coordinate dimensions.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.IsSimple">
            <summary>
            Gets a value indicating whether this instance is simple from SFA point of view.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.HasCurveGeometry">
            <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
            <value>
              <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns> An editable copy of this geometry. </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ToEditable``1">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <typeparam name="T">
            Type of the geometry to get. Must be an inheritor of <see cref="T:Aspose.Gis.Geometries.Geometry"/> class.
            </typeparam>
            <returns>
            An editable copy of this geometry.
            </returns>
            <exception cref="T:System.InvalidCastException">
            Unable to cast an editable copy of this geometry to type <typeparamref name="T"/>.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A geometry that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c> is defined by <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ToLinearGeometry(System.Double)">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
            <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum
            which is currently equal to 10000 points.
            </param>
            <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s with specified <paramref name="tolerance"/>) </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve"/>s are joined into <c>LineString</c>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s </li>
            </ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry"/> of output geometry is <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ReplacePolygonsByLines">
            <summary>
            Gets polygons represented as lines of this geometry.
            </summary>
            <returns>A geometry, that has no polygon geometries. The following transformation are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s)</li>
            <li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s are joined into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString"/>s</li>
            </ul>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsImage(Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Export this geometry to an image representation.
            </summary>
            <param name="outputPath">Path to the output image.</param>
            <param name="width"> Width of the map. </param>
            <param name="height"> Height of the map. </param>
            <param name="renderer">Renderer to use.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
            <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="!:Unit.MapUnits"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsImage(System.String,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Export this geometry to an image representation.
            </summary>
            <param name="outputPath">Path to the output image.</param>
            <param name="width"> Width of the map. </param>
            <param name="height"> Height of the map. </param>
            <param name="renderer">Renderer to use.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
            <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="!:Unit.MapUnits"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsImage(Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Export this geometry to an image representation.
            </summary>
            <param name="width"> Width of the map. </param>
            <param name="height"> Height of the map. </param>
            <param name="renderer">Renderer to use.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <returns>The image as stream</returns>
            <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
            <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="!:Unit.MapUnits"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsText">
            <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
            <returns>Well-Known Text representation of this geometry.</returns>
            <remarks>
            Output of this method is in <see cref="F:Aspose.Gis.Geometries.WktVariant.Iso"/> WKT variant.
            The default numeric format is <see cref="M:Aspose.Gis.NumericFormat.General(System.Int32)"/> (with "0" precision).
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsText(Aspose.Gis.Geometries.WktVariant)">
            <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
            <returns>Well-Known Text representation of this geometry.</returns>
            <param name="variant">Well-Known Text variant to use.</param>
            <remarks>
            The default numeric format is <see cref="M:Aspose.Gis.NumericFormat.General(System.Int32)"/> (with "0" precision).
            </remarks>
            <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKT variant. Currently this happens when
            <see cref="P:Aspose.Gis.Geometries.Geometry.HasCurveGeometry"/> of geometry is <see langword="true"/> and WKT variant is
            <see cref="F:Aspose.Gis.Geometries.WktVariant.SimpleFeatureAccessOutdated"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="variant"/> is not a valid <see cref="T:Aspose.Gis.Geometries.WktVariant"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsText(Aspose.Gis.Geometries.WktVariant,Aspose.Gis.NumericFormat)">
            <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
            <returns>Well-Known Text representation of this geometry.</returns>
            <param name="variant">Well-Known Text variant to use.</param>
            <param name="format">Coordinate format for conversion to string. See the <see cref="T:Aspose.Gis.NumericFormat"/> to get it. </param>
            <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKT variant. Currently this happens when
            <see cref="P:Aspose.Gis.Geometries.Geometry.HasCurveGeometry"/> of geometry is <see langword="true"/> and WKT variant is
            <see cref="F:Aspose.Gis.Geometries.WktVariant.SimpleFeatureAccessOutdated"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="variant"/> is not a valid <see cref="T:Aspose.Gis.Geometries.WktVariant"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsBinary">
            <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
            <returns>Well-Known Binary representation of this geometry.</returns>
            <remarks>Output of this method is in <see cref="F:Aspose.Gis.Geometries.WkbVariant.Iso"/> WKB variant.</remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AsBinary(Aspose.Gis.Geometries.WkbVariant)">
            <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
            <returns>Well-Known Binary representation of this geometry.</returns>
            <param name="variant">Well-Known Binary variant to use.</param>
            <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKB variant. Currently this happens when
            <see cref="P:Aspose.Gis.Geometries.Geometry.HasCurveGeometry"/> of geometry is <see langword="true"/> and WKB variant is
            <see cref="F:Aspose.Gis.Geometries.WkbVariant.SimpleFeatureAccessOutdated"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="variant"/> is not a valid <see cref="T:Aspose.Gis.Geometries.WkbVariant"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ToSvg(Aspose.Gis.Extent)">
            <summary>
            Translates this geometry to Svg representation.
            </summary>
            <returns>The Svg representation. </returns>
            <param name="extent">Extent for translation this geometry to Svg </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.RoundXY(System.Int32)">
            <summary>
            Rounds X and Y coordinates to a specified number of fractional digits.
            </summary>
            <param name="digits">Number of fractional digits.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="digits"/>is less than 0 or greater than 15.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.RoundZ(System.Int32)">
            <summary>
            Rounds Z coordinate to a specified number of fractional digits.
            </summary>
            <param name="digits">Number of fractional digits.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="digits"/>is less than 0 or greater than 15.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.RoundM(System.Int32)">
            <summary>
            Rounds M coordinate to a specified number of fractional digits.
            </summary>
            <param name="digits">Number of fractional digits.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="digits"/>is less than 0 or greater than 15.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetExtent">
            <summary>
            Computes and returns a bounding extent of this geometry.
            </summary>
            <returns> A bounding extent of this geometry. </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetArea">
            <summary>
            Computes the area of this geometry.
            </summary>
            <returns>
            The area of this geometry.
            Sum of areas of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection"/>.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetLength">
            <summary>
            Computes the length of this geometry.
            </summary>
            <returns>
            The length of this geometry.
            Perimeter if this is a <see cref="T:Aspose.Gis.Geometries.Polygon"/>.
            Sum of lengths of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection"/>.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetDistanceTo(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Computes the minimum distance between this geometry and a specified geometry.
            </summary>
            <param name="other">A geometry to find distance to.</param>
            <returns>
            If both geometries are not <see cref="P:Aspose.Gis.Geometries.Geometry.IsEmpty"/> - a distance between closest points of the geometries.
            If at least one geometry is empty -1 is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetConvexHull">
            <summary>
            Computes the convex hull of this geometry.
            </summary>
            <returns>
            A geometry that represents a convex hull of this geometry.
            If this geometry has no points then the result is <see cref="P:Aspose.Gis.Geometries.Geometry.Null"/>.
            If this geometry has only one point then the result is this point.
            If this geometry has only two points then the result is <see cref="T:Aspose.Gis.Geometries.ILineString"/> with the points.
            If this geometry has three or more points then the result is <see cref="T:Aspose.Gis.Geometries.ILinearRing"/> that represents a convex
            hull around all geometries points.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetCentroid">
            <summary>
            Computes the centroid of this geometry.
            </summary>
            <returns>
            The centroid of this geometry. If this geometry is empty an empty point returned.
            The centroid is equal to the centroid of the highest dimension geometries in this geometry
            (e.g. if both points and lines are contained in the geometry, only lines contribute to centroid).
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetBuffer(System.Double,System.Int32)">
            <summary>
            Computes a buffer region around this geometry.
            </summary>
            <param name="distance">The buffer region width.</param>
            <param name="quadrantSegments">
            Number of segments used to approximate a 90 degree of curvature.
            The larger this number is the better approximation of curves is produced.
            Default is 30.
            </param>
            <returns>
            A geometry that represents all points that are within a specified distance from
            this geometry.
            The type of result is either <see cref="P:Aspose.Gis.Geometries.Geometry.Null"/>, <see cref="T:Aspose.Gis.Geometries.IPolygon"/> or <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way that operation can not be completed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Quadrant segments is less or equal to 0.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Within(Aspose.Gis.Extent)">
            <summary>
            Determines whether this geometry is within a specified extent.
            </summary>
            <param name="extent">The extent.</param>
            <returns>
            <see langword="true"/> if this geometry is within extent; <see langword="false"/> otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <seealso cref="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Intersects(Aspose.Gis.Extent)">
            <summary>
            Determines whether this geometry intersects a specified extent.
            </summary>
            <param name="extent">The extent.</param>
            <returns>
            <see langword="true"/> if this geometry intersects the extent; <see langword="false"/> otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <seealso cref="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.SpatiallyEquals(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry spatially equal to a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry "spatially equals" to specified geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests equality in terms of DE-9IM intersection matrix. It does not depend on order
            of components (e.g. order of interior rings in polygon), Z and M values. Basically, it tests
            that two geometries occupy the same "space" when projected on two dimensional space.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**FFF*");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Disjoint(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry is disjoint from a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially disjoint" from another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries are disjoint in terms of DE-9IM intersection matrix.
            Basically, it tests that two geometries have no common points.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "FF*FF****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Intersects(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry and a specified geometry intersects.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry "spatially intersects" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method is equivalent to:
            <code>!this.Disjoint(other);</code>
            This is the negation of <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)"/>. See <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)"/> for more details.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Touches(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry and a specified geometry touch.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially touches" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries touch each other in terms of DE-9IM intersection matrix.
            Two geometries touch each other if they have at least one boundary point in common, but no interior points.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString"/>s touch each other if they share an endpoint, but don't share a segment,
            two polygons touch each other if they share part of exterior or interior ring, but their interiors don't overlap.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "FT*******") || this.Relate(other, "F**T*****") || this.Relate(other, "F***T****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially touches" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Crosses(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry and a specified geometry cross.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially crosses" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries are crosses in terms of DE-9IM intersection matrix.
            Two geometries cross each other if they have some but not all interior points in common and
            the dimension of the intersection is less then dimension of at least one of the geometries.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString"/>s cross, if they form an 'X' letter, a LineString and a <see cref="T:Aspose.Gis.Geometries.Polygon"/>
            cross if LineString goes through interior of a Polygon.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially crosses" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Within(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry is within a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially within" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry is within another in terms of DE-9IM intersection matrix.
            One geometry is within another one, if another geometry contains every point of the geometry and geometries
            interiors intersect.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**F***");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially within" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry spatially contains a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially contains" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry contains another in terms of DE-9IM intersection matrix.<cr/>
            This method is equivalent to:
            <code>
            other.Within(this);
            </code>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Overlaps(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry overlap with a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially overlaps" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries are overlaps in terms of DE-9IM intersection matrix.
            Two geometries overlap if they have some but not all interior points in common and the intersection of the geometries
            have the same dimension as the geometries themselves.<cr/>
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Point"/> geometries or two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Surface"/> geometries this
            method is equivalent to:
            <code>
            this.Relate(other, "T*T***T**");
            </code>
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Line"/> geometries this method is equivalent to:
            <code>
            this.Relate(other, "1*T***T**");
            </code>
            For two geometries with not equal <see cref="P:Aspose.Gis.Geometries.IGeometry.Dimension"/> this method always returns <see langword="false"/>.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially overlaps" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Covers(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry covers a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially covers" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry covers another in terms of DE-9IM intersection matrix.
            One geometry covers another one, if the geometry contains every point of another geometry.
            This method is similar to <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>, but returns <see langword="true"/> more often,
            since it does not distinguish between interior and boundary points. So, if geometry A lies on boundary of
            geometry B, <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/> returns <see langword="false"/>,
            while this method returns <see langword="true"/>.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "T*****FF*") || this.Relate(other, "*T****FF*") || this.Relate(other, "***T**FF*) || this.Relate(other, "***T*FF*");
            </code>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry is covered by a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially covered by" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry is covered by another in terms of DE-9IM intersection matrix.<cr/>
            This method is equivalent to:
            <code>
            other.Covers(this);
            </code>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Relate(Aspose.Gis.Geometries.IGeometry,System.String)">
            <summary>
            Determines if DE-9IM intersection matrix of this geometry and a specified geometry matches provided pattern.
            </summary>
            <param name="other">A geometry.</param>
            <param name="intersectionPatternMatrix">
            A patter to match with.
            This should be a string with length equal to 9.
            Each character of the string represent expected dimension of an intersection:
            <ul>
            <li>character 0 - between interiors of the geometries.</li>
            <li>character 1 - between interior of this geometry and boundary of another geometry.</li>
            <li>character 2 - between interior of this geometry and exterior of another geometry.</li>
            <li>character 3 - between boundary of this geometry and interior of another geometry.</li>
            <li>character 4 - between boundaries of the geometries.</li>
            <li>character 5 - between boundary of this geometry and exterior of another geometry.</li>
            <li>character 6 - between exterior of this geometry and interior of another geometry.</li>
            <li>character 7 - between exterior of this geometry and boundary of another geometry.</li>
            <li>character 8 - between exteriors of the geometries.</li>
            </ul>
            Possible values of each characters are:
            <ul>
            <li>* - any value;</li>
            <li>F - no intersection;</li>
            <li>T - any intersection;</li>
            <li>0 - point intersection (e.g. shared point);</li>
            <li>1 - line intersection (e.g. shared segment of line);</li>
            <li>2 - area intersection (e.g. shared part of polygon);</li>
            </ul>
            For example, an intersection pattern "F0*******" means, that there should not be intersection between geometries interiors
            and intersection between geometries boundaries must be a point.
            See OpenGIS Simple Features Specification for more details about intersection matrix pattern.
            </param>
            <remarks>
            This method builds DE-9IM intersection matrix and matches it with the pattern
            See OpenGIS Simple Features Specification for more details about DE-9IM intersection matrix.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <example>
            The following code:
            <code>geometry.Relate(other, "T*F**FFF*");</code><cr/>
            will detect whether geometries are spatially equal.
            </example>
            <returns>
            <see langword="true"/> if this intersection matrix matches patter; <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Intersection(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Builds an intersection between this geometry and a specified geometry.
            </summary>
            <returns>
            A geometry that represents an intersection of this geometry and an argument. The result geometry contain
            point set that present in both this geometry and an argument.
            </returns>
            <param name="other">A geometry to compute intersection with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Union(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Unites this geometry and a specified geometry.
            </summary>
            <returns>
            A geometry that represents a union of this geometry and an argument. The result geometry contains
            point set that present in this geometry or in an argument.
            </returns>
            <param name="other">A geometry to unite with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Difference(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Subtracts a specified geometry from this geometry.
            </summary>
            <returns>
            A geometry that represents a difference of this geometry and an argument. The result geometry contains
            point set that present in this geometry but not present in an argument.
            </returns>
            <param name="other">A geometry to subtract.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.SymDifference(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Builds a symmetric difference between this geometry and a specified geometry.
            </summary>
            <returns>
            A geometry that represents a symmetric difference of this geometry and an argument. The result geometry contains
            point set that present in one of the geometries but not present in both of them.
            </returns>
            <param name="other">A geometry to compute symmetric difference with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Geometry"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.#ctor(Aspose.Gis.Geometries.Geometry)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Geometry"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Geometry" /> to copy data from.</param>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.IsEditable">
            <summary>
            Gets a value indicating whether this instance can be edited.
            </summary>
            <value>
              <see langword="true" /> if this instance is editable; otherwise, <see langword="false" />.
            </value>
            <remarks>
            In order to obtain an editable copy of the geometry use <see cref="M:Aspose.Gis.Geometries.Geometry.ToEditable``1"/>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.LockFromEditing">
            <summary>
            Makes this geometry not editable. There is no way to make this instance editable again. If you need to
            edit this instance create an editable clone.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.CloneIfEditable``1(``0)">
            <summary>
            If argument is editable, returns a clone of the argument. Clone is editable as well.
            If argument is not editable, returns an argument itself.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.CloneIfNotEditable``1(``0)">
            <summary>
            If argument is not editable, returns an editable clone of the argument.
            If argument is not editable, returns an argument itself.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.ResolveZ(System.Double,System.Boolean@)">
            <summary>
            Prepare Z coordinate for transformation.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.EnsureEditable">
            <summary>
            Throws exception if this geometry is not editable.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.SetHasMFlag(System.Boolean)">
            <summary>
            Sets the <see cref="P:Aspose.Gis.Geometries.Geometry.HasM" /> flag directly.
            </summary>
            <param name="value">Value for the flag.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.SetHasZFlag(System.Boolean)">
            <summary>
            Sets the <see cref="P:Aspose.Gis.Geometries.Geometry.HasZ" /> flag directly.
            </summary>
            <param name="value">Value for the flag.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.RoundXY(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to X and Y coordinates of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.RoundZ(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to Z coordinate of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.RoundM(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to M coordinate of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <summary>
            Grows bounding box with this geometry
            </summary>
            <param name="box">An instance of <see cref="T:Aspose.Gis.Common.BoundingBox" /> in which the result will be stored.</param>
            <remarks>
            This method returns its results through a parameter
            to avoid memory allocation for each geometry when a lot of geometries are processed.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GetBoundingRectangle">
            <summary>
            Gets bounding rectangle of this geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <summary>
            Grows bounding rectangle with this geometry of the geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
            <param name="transformation"> Transformation. </param>
            <param name="skipErrors">
            If set to true all coordinates that are failed to transform are thrown away.
            If set to false exception is thrown whenever transformation of any coordinate happens.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AccommodateProperties(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Accommodates the dimension and SRS of the specified geometry.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.EnsureHasCompatibleSpatialReferenceSystem(Aspose.Gis.Geometries.IGeometry,System.String)">
            <summary>
            Ensures that argument has compatible spatial reference system to be added to this geometry.
            </summary>
            <param name="arg"> Argument to check. </param>
            <param name="parameterName"> Name of argument. </param>
            <exception cref="T:System.ArgumentException">
            If argument has incompatible spatial reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.HasCompatibleSpatialReferenceSystem(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines that argument has compatible spatial reference system to be added to this geometry.
            </summary>
            <param name="arg"> Argument to check. </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AccommodateDimension(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Accommodates the dimension of the specified geometry.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.AccommodateSpatialReferenceSystem(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Accommodates the SRS of the specified geometry.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="T:Aspose.Gis.Geometries.Geometry.NullGeometry">
            <summary>
            Singleton class for Null geometry.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.Geometry.NullGeometry.Instance">
            <summary>
            The only instance of the <see cref="T:Aspose.Gis.Geometries.Geometry.NullGeometry" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.NullGeometry.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.NullGeometry.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.NullGeometry.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="set"> Geometry is <see cref="P:Aspose.Gis.Geometries.Geometry.Null"/>. </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.NullGeometry.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
            <exception cref="T:System.InvalidOperationException" accessor="set"> Geometry is <see cref="P:Aspose.Gis.Geometries.Geometry.Null"/>. </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.NullGeometry.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
            <exception cref="T:System.InvalidOperationException" accessor="set"> Geometry is <see cref="P:Aspose.Gis.Geometries.Geometry.Null"/>. </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.NullGeometry.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
            <remarks>
            According to SFA, IsEmpty returns true if the geometry represents the empty point set. This is always true for
            <see cref="T:Aspose.Gis.Geometries.Geometry.NullGeometry"/>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Geometry.NullGeometry.IsEditable">
            <summary>
            Gets a value indicating whether this instance can be edited.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.RoundXY(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to X and Y coordinates of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.RoundZ(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to Z coordinate of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.RoundM(Aspose.Gis.PrecisionModel)">
            <summary>
            Applies precision model to M coordinate of this geometry.
            </summary>
            <param name="precisionModel">A precision model.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Geometry.NullGeometry.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.GeometryCollection">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> is a <see cref="T:Aspose.Gis.Geometries.Geometry" /> that is a collection of one or more geometries.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.GeometryCollection"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.Count">
            <summary>
            Gets the number of geometries in this collection.
            </summary>
            <value>
            The count if geometries.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:Aspose.Gis.Geometries.IGeometry"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Geometries.IGeometry"/>.
            </value>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            If collection is Empty, <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Point" /> is returned.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.HasCurveGeometry">
            <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
            <value>
              <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.GeometryCollection.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.GetPointOnSurface">
            <summary>
            Finds a point that is guaranteed to be on one of the surfaces in this collection.
            </summary>
            <returns>
            A point on one of the surfaces. An empty point if this collection does not contain surfaces or all surfaces are empty.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A geometry, that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.ToLinearGeometry(System.Double)">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
            <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry.
            </param>
            <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s with specified <paramref name="tolerance"/>) </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve"/>s are joined into <c>LineString</c>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s </li>
            </ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry"/> of output geometry is <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.ReplacePolygonsByLines">
            <summary>
            Gets polygons represented as lines of this geometry.
            </summary>
            <returns>A geometry, that has no polygon geometries. The following transformation are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s)</li>
            <li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s are joined into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString"/>s</li>
            </ul>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.Add(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Adds the specified geometry to the collection.
            </summary>
            <param name="geometry">The geometry to add.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The collection does not accept geometries of this type.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.GeometryCollection.SpatialReferenceSystem"/> of argument are both not
            <see langword="null"/> and don't equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.AddRange(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IGeometry})">
            <summary>
            Adds the specified geometries to the collection.
            </summary>
            <param name="geometries">The geometries to add.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The collection does not accept geometries of this type.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the specified geometry from the collection.
            </summary>
            <param name="index">Index of the geometry to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.Equals(Aspose.Gis.Geometries.IGeometryCollection)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.op_Equality(Aspose.Gis.Geometries.GeometryCollection,Aspose.Gis.Geometries.GeometryCollection)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.op_Inequality(Aspose.Gis.Geometries.GeometryCollection,Aspose.Gis.Geometries.GeometryCollection)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.GeometryCollection"/> class.
            </summary>
            <param name="capacity">The number of geometries that the new collection can initially store.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.#ctor(Aspose.Gis.Geometries.GeometryCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.GeometryCollection"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Geometry" /> to copy data from.</param>
            <exception cref="T:System.ArgumentException">The collection does not accept geometries of this type.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.AddRef``1(``0@)">
            <summary>
            Adds a geometry into the collection. Does not copy the argument, just reference assigns it.
            Sets reference to null in order to prevent modifications of the geometry from outside.
            Any mutations to the argument after addition will be reflected in the collection and can result in invalid
            state of the collection. DO NOT modify the geometry after addition.
            </summary>
            <param name="geometry">
            Geometry to add.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.AddRefRange``1(``0@)">
            <summary>
            Adds geometries into the collection. Does not copy geometries, just reference assigns it.
            Sets the reference to null in order to prevent modifications of the geometries from outside.
            Any mutations to the geometries from argument after addition will be reflected in the collection and can result
            in invalid state of the collection. DO NOT modify the geometries from argument after addition.
            </summary>
            <param name="geometries">
            Geometries to add.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.RoundXY(Aspose.Gis.PrecisionModel)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.RoundZ(Aspose.Gis.PrecisionModel)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.RoundM(Aspose.Gis.PrecisionModel)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.IsAcceptableGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether the specified geometry is acceptable for this collection.
            </summary>
            <param name="geometry">The geometry to check.</param>
            <returns>
              <see langword="true" /> if the geometry is acceptable; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.GetBoundingRectangle">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.Transform``1(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.GeometryCollection.SetSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Sets spatial reference system of this geometry and all its points to <paramref name="newSpatialReferenceSystem"/>.
            </summary>
            <param name="newSpatialReferenceSystem"> New spatial reference system. </param>
        </member>
        <member name="T:Aspose.Gis.Geometries.GeometryDimension">
            <summary>
            Topological dimension of a <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryDimension.Point">
            <summary>
            0-dimensional (a point).
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryDimension.Line">
            <summary>
            1-dimensional (a line).
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryDimension.Surface">
            <summary>
            2-dimensional (a surface).
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.GeometryError">
            <summary>
            Contains factory methods for exceptions.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.GeometryType">
            <summary>
            The type of a geometry in a layer.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.Null">
            <summary>
            The geometry type is not set.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.Mixed">
            <summary>
            The geometry type is mixed.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.Point">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IPoint" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.LineString">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ILineString" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.LinearRing">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ILinearRing" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.CircularString">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ICircularString" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.ICurvePolygon" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.Polygon">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IPolygon" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.MultiPoint">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiPoint" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.MultiCurve">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiCurve" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.MultiLineString">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiLineString" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.MultiSurface">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiSurface" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" />.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.GeometryType.GeometryCollection">
            <summary>
            The geometry is an <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" />.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.ICircularString">
            <summary>
            A multi-vertex curve with circular interpolation between points.
            </summary>
            <remarks>
            The <c>CircularString</c> consists of one or more circular arc segments connected end to end.
            The first three points define the first segment. The first point is the start point of the arc.
            The second point is any intermediate point on the arc other than the start or end point.
            The third point is the end of the arc. Subsequent arcs are defined by their intermediate and end points only,
            as the start point is implicitly defined as the previous segment's end point.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.ICircularString.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.ICompoundCurve">
            <summary>
            A curve that represents a sequence of contiguous curves such that adjacent curves are joined at their end points.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.ICompoundCurve.Count">
            <summary>
            Gets the number of curves in the <see cref="T:Aspose.Gis.Geometries.ICompoundCurve" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.ICompoundCurve.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Geometries.ICurve"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Geometries.ICurve"/>.
            </value>
            <param name="index">The index.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.ICompoundCurve.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.ICurve">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.ICurve" /> is a sequence of points.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.ICurve.StartPoint">
            <summary>
            Returns a copy of the starting point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.ICurve.EndPoint">
            <summary>
            Returns a copy of the end point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.ICurve.IsClosed">
            <summary>
            Gets a values indicating whether a curve is closed.
            A curve is closed if its start point is equal to its end point.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.ICurve.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.ILineString"/> that approximates or equivalent to this curve.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.ICurve.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.ILineString"/> that approximates or equivalent to this curve:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.ILineString"/> itself the result is equivalent to this object
             If this object is <see cref="T:Aspose.Gis.Geometries.ICircularString"/> the result is the circular string linearized with the specified <paramref name="tolerance"/>
             If this object is <see cref="T:Aspose.Gis.Geometries.ICompoundCurve"/> - all curves from it are linearized and then joined into <see cref="T:Aspose.Gis.Geometries.ILineString"/>
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.ICurvePolygon">
            <summary>
            A planar surface, defined by 1 exterior boundary and 0 or more interior boundaries.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.ICurvePolygon.ExteriorRing">
            <summary>
            Gets the exterior ring.
            </summary>
            <value>
            The exterior ring.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.ICurvePolygon.GetInteriorRing(System.Int32)">
            <summary>
            Gets the interior ring by its index.
            </summary>
            <param name="index">The index.</param>
            <returns>The interior ring.</returns>
        </member>
        <member name="P:Aspose.Gis.Geometries.ICurvePolygon.InteriorRingsCount">
            <summary>
            Gets the number of interior rings.
            </summary>
            <value>
            The number of interior rings.
            </value>
        </member>
        <member name="T:Aspose.Gis.Geometries.IGeometry">
            <summary>
            The interface root class of Geometries hierarchy
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.IGeometry" />.
            If the dimension is unknown (e.g. for an empty GEOMETRYCOLLECTION) <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Point" /> is returned.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty (represents the empty point set).
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.IsSimple">
            <summary>
            Gets a value indicating whether this instance is simple from SFA point of view.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, if SpatialReferenceSystem is unknown.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry">
            <summary>
            Gets a value indicating whether this geometry is or contains curve (not linear) geometry.
            </summary>
            <value>
              <see langword="false" /> if this geometry and all geometries it contains are linear; otherwise, <see langword="true" />.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A geometry that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c> is defined by <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.ToLinearGeometry(System.Double)">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
            <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum
            which is currently equal to 10000 points.
            </param>
            <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s with specified <paramref name="tolerance"/>) </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve"/>s are joined into <c>LineString</c>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s </li>
            </ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry"/> of output geometry is <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.ReplacePolygonsByLines">
            <summary>
            Gets polygons represented as lines of this geometry.
            </summary>
            <returns>A geometry, that has no polygon geometries. The following transformation are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s)</li>
            <li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s are joined into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString"/>s</li>
            </ul>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns> An editable copy of this geometry. </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.ToEditable``1">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <typeparam name="T">
            Type of the geometry to get. Must be an inheritor of <see cref="T:Aspose.Gis.Geometries.Geometry"/> class.
            </typeparam>
            <returns> An editable copy of this geometry. </returns>
            <exception cref="T:System.InvalidCastException">
            Unable to cast an editable copy of this geometry to type <typeparamref name="T"/>.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsImage(Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Export this geometry to an image representation.
            </summary>
            <param name="outputPath">Path to the output image.</param>
            <param name="width"> Width of the map. </param>
            <param name="height"> Height of the map. </param>
            <param name="renderer">Renderer to use.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
            <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="!:SpatialReferencing.Unit.MapUnits"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsImage(System.String,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Export this geometry to an image representation.
            </summary>
            <param name="outputPath">Path to the output image.</param>
            <param name="width"> Width of the map. </param>
            <param name="height"> Height of the map. </param>
            <param name="renderer">Renderer to use.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
            <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="!:SpatialReferencing.Unit.MapUnits"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsImage(Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Export this geometry to an image representation.
            </summary>
            <param name="width"> Width of the map. </param>
            <param name="height"> Height of the map. </param>
            <param name="renderer">Renderer to use.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <returns>The image as stream</returns>
            <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
            <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="!:SpatialReferencing.Unit.MapUnits"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsText">
            <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
            <returns>Well-Known Text representation of this geometry.</returns>
            <remarks>Output of this method is in <see cref="F:Aspose.Gis.Geometries.WktVariant.Iso"/> WKT variant.</remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsText(Aspose.Gis.Geometries.WktVariant)">
            <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
            <returns>Well-Known Text representation of this geometry.</returns>
            <param name="variant">Well-Known Text variant to use.</param>
            <exception cref="T:System.NotSupportedException">
            The geometry is not supported by requested WKT variant.
            The following geometries are supported only by <see cref="F:Aspose.Gis.Geometries.WktVariant.Iso"/> WKT variant:
            <ul>
            <li><see cref="T:Aspose.Gis.Geometries.CircularString"/></li>
            <li><see cref="T:Aspose.Gis.Geometries.CompoundCurve"/></li>
            <li><see cref="T:Aspose.Gis.Geometries.CurvePolygon"/></li>
            <li><see cref="T:Aspose.Gis.Geometries.MultiCurve"/></li>
            <li><see cref="T:Aspose.Gis.Geometries.MultiSurface"/></li>
            </ul>
            All other geometries are supported by any WKT variant.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="variant"/> is not a valid <see cref="T:Aspose.Gis.Geometries.WktVariant"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsText(Aspose.Gis.Geometries.WktVariant,Aspose.Gis.NumericFormat)">
            <summary>
            Translates this geometry to its Well-Known Text representation.
            </summary>
            <returns>Well-Known Text representation of this geometry.</returns>
            <param name="variant">Well-Known Text variant to use.</param>
            <param name="format">Coordinate format for conversion to string. See the <see cref="T:Aspose.Gis.NumericFormat"/> to get it. </param>
            <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKT variant. Currently this happens when
            <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry"/> of geometry is <see langword="true"/> and WKT variant is
            <see cref="F:Aspose.Gis.Geometries.WktVariant.SimpleFeatureAccessOutdated"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="variant"/> is not a valid <see cref="T:Aspose.Gis.Geometries.WktVariant"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsBinary">
            <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
            <returns>Well-Known Binary representation of this geometry.</returns>
            <remarks>Output of this method is in <see cref="F:Aspose.Gis.Geometries.WkbVariant.Iso"/> WKB variant.</remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.AsBinary(Aspose.Gis.Geometries.WkbVariant)">
            <summary>
            Translates this geometry to its Well-Known Binary representation.
            </summary>
            <returns>Well-Known Binary representation of this geometry.</returns>
            <param name="variant">Well-Known Binary variant to use.</param>
            <exception cref="T:System.NotSupportedException">
            Geometry can not be represented in requested WKB variant. Currently this happens when 
            <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry"/> of geometry is <see langword="true"/> and WKB variant is
            <see cref="F:Aspose.Gis.Geometries.WkbVariant.SimpleFeatureAccessOutdated"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="variant"/> is not a valid <see cref="T:Aspose.Gis.Geometries.WkbVariant"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.GetExtent">
            <summary>
            Computes and returns a bounding extent of this geometry.
            </summary>
            <returns> A bounding extent of this geometry. </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.GetArea">
            <summary>
            Computes the area of this geometry.
            </summary>
            <returns>
            The area of this geometry.
            Sum of areas of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection"/>.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.GetLength">
            <summary>
            Computes the length of this geometry.
            </summary>
            <returns>
            The length of this geometry.
            Perimeter if this is a <see cref="T:Aspose.Gis.Geometries.Polygon"/>.
            Sum of lengths of elements of this geometry if this geometry is a <see cref="T:Aspose.Gis.Geometries.GeometryCollection"/>.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.GetDistanceTo(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Computes the minimum distance between this geometry and a specified geometry.
            </summary>
            <param name="other">A geometry to find distance to.</param>
            <returns>
            If both geometries are not <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty"/> - a distance between closest points of the geometries.
            If at least one geometry is empty -1 is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.GetConvexHull">
            <summary>
            Computes the convex hull of this geometry.
            </summary>
            <returns>
            A geometry that represents a convex hull of this geometry.
            If this geometry has no points then the result is <see cref="P:Aspose.Gis.Geometries.Geometry.Null"/>.
            If this geometry has only one point then the result is this point.
            If this geometry has only two points then the result is <see cref="T:Aspose.Gis.Geometries.ILineString"/> with the points.
            If this geometry has three or more points then the result is <see cref="T:Aspose.Gis.Geometries.ILinearRing"/> that represents a convex
            hull around all geometries points.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.GetCentroid">
            <summary>
            Computes the centroid of this geometry.
            </summary>
            <returns>
            The centroid of this geometry. If this geometry is empty an empty point returned.
            The centroid is equal to the centroid of the highest dimension geometries in this geometry
            (e.g. if both points and lines are contained in the geometry, only lines contribute to centroid).
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.GetBuffer(System.Double,System.Int32)">
            <summary>
            Computes a buffer region around this geometry.
            </summary>
            <param name="distance">The buffer region width (in Spatial Reference units).</param>
            <param name="quadrantSegments">
            Number of segments used to approximate a 90 degree of curvature.
            The larger this number is the better approximation of curves is produced.
            Default is 30.
            </param>
            <returns>
            A geometry that represents all points that are within a specified distance from
            this geometry.
            The type of result is either <see cref="P:Aspose.Gis.Geometries.Geometry.Null"/>, <see cref="T:Aspose.Gis.Geometries.IPolygon"/> or <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way that operation can not be completed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Quadrant segments is less or equal to 0.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Extent)">
            <summary>
            Determines whether this geometry is within a specified extent.
            </summary>
            <param name="extent">The extent.</param>
            <returns>
            <see langword="true"/> if this geometry is within extent; <see langword="false"/> otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <seealso cref="M:Aspose.Gis.Extent.Contains(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Extent)">
            <summary>
            Determines whether this geometry intersects a specified extent.
            </summary>
            <param name="extent">The extent.</param>
            <returns>
            <see langword="true"/> if this geometry intersects the extent; <see langword="false"/> otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <seealso cref="M:Aspose.Gis.Extent.Intersects(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.SpatiallyEquals(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry spatially equal to a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry "spatially equals" to specified geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests equality in terms of DE-9IM intersection matrix. It does not depend on order
            of components (e.g. order of interior rings in polygon), Z and M values. Basically, it tests
            that two geometries occupy the same "space" when projected on two dimensional space.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**FFF*");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry is disjoint from a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially disjoint" from another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries are disjoint in terms of DE-9IM intersection matrix.
            Basically, it tests that two geometries have no common points.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "FF*FF****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Intersects(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry and a specified geometry intersects.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry "spatially intersects" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method is equivalent to:
            <code>!this.Disjoint(other);</code>
            This is the negation of <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)"/>. See <see cref="M:Aspose.Gis.Geometries.IGeometry.Disjoint(Aspose.Gis.Geometries.IGeometry)"/> for more details.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Touches(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry and a specified geometry touch.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially touches" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries touch each other in terms of DE-9IM intersection matrix.
            Two geometries touch each other if they have at least one boundary point in common, but no interior points.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString"/>s touch each other if they share an endpoint, but don't share a segment,
            two polygons touch each other if they share part of exterior or interior ring, but their interiors don't overlap.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "FT*******") || this.Relate(other, "F**T*****") || this.Relate(other, "F***T****");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially touches" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Crosses(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines if this geometry and a specified geometry cross.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially crosses" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries are crosses in terms of DE-9IM intersection matrix.
            Two geometries cross each other if they have some but not all interior points in common and
            the dimension of the intersection is less then dimension of at least one of the geometries.
            That is: two <see cref="T:Aspose.Gis.Geometries.LineString"/>s cross, if they form an 'X' letter, a LineString and a <see cref="T:Aspose.Gis.Geometries.Polygon"/>
            cross if LineString goes through interior of a Polygon.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially crosses" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry is within a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially within" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry is within another in terms of DE-9IM intersection matrix.
            One geometry is within another one, if another geometry contains every point of the geometry and geometries
            interiors intersect.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "T*F**F***");
            </code>
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially within" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry spatially contains a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially contains" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry contains another in terms of DE-9IM intersection matrix.<cr/>
            This method is equivalent to:
            <code>
            other.Within(this);
            </code>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Within(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Overlaps(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry overlap with a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially overlaps" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether geometries are overlaps in terms of DE-9IM intersection matrix.
            Two geometries overlap if they have some but not all interior points in common and the intersection of the geometries
            have the same dimension as the geometries themselves.<cr/>
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Point"/> geometries or two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Surface"/> geometries this
            method is equivalent to:
            <code>
            this.Relate(other, "T*T***T**");
            </code>
            For two <see cref="F:Aspose.Gis.Geometries.GeometryDimension.Line"/> geometries this method is equivalent to:
            <code>
            this.Relate(other, "1*T***T**");
            </code>
            For two geometries with not equal <see cref="P:Aspose.Gis.Geometries.IGeometry.Dimension"/> this method always returns <see langword="false"/>.
            See OpenGIS Simple Features Specification for more details about DE-9IM and "spatially overlaps" relation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry covers a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially covers" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry covers another in terms of DE-9IM intersection matrix.
            One geometry covers another one, if the geometry contains every point of another geometry.
            This method is similar to <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>, but returns <see langword="true"/> more often,
            since it does not distinguish between interior and boundary points. So, if geometry A lies on boundary of
            geometry B, <see cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/> returns <see langword="false"/>,
            while this method returns <see langword="true"/>.<cr/>
            This method is equivalent to:
            <code>
            this.Relate(other, "T*****FF*") || this.Relate(other, "*T****FF*") || this.Relate(other, "***T**FF*) || this.Relate(other, "***T*FF*");
            </code>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether this geometry is covered by a specified geometry.
            </summary>
            <param name="other">A geometry.</param>
            <returns>
            <see langword="true"/> if this geometry is "spatially covered by" another geometry. <see langword="false"/> otherwise.
            </returns>
            <remarks>
            This method tests whether one geometry is covered by another in terms of DE-9IM intersection matrix.<cr/>
            This method is equivalent to:
            <code>
            other.Covers(this);
            </code>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>
            <seealso cref="M:Aspose.Gis.Geometries.IGeometry.Covers(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Relate(Aspose.Gis.Geometries.IGeometry,System.String)">
            <summary>
            Determines if DE-9IM intersection matrix of this geometry and a specified geometry matches provided pattern.
            </summary>
            <param name="other">A geometry.</param>
            <param name="intersectionPatternMatrix">
            A patter to match with.
            This should be a string with length equal to 9.
            Each character of the string represent expected dimension of an intersection:
            <ul>
            <li>character 0 - between interiors of the geometries.</li>
            <li>character 1 - between interior of this geometry and boundary of another geometry.</li>
            <li>character 2 - between interior of this geometry and exterior of another geometry.</li>
            <li>character 3 - between boundary of this geometry and interior of another geometry.</li>
            <li>character 4 - between boundaries of the geometries.</li>
            <li>character 5 - between boundary of this geometry and exterior of another geometry.</li>
            <li>character 6 - between exterior of this geometry and interior of another geometry.</li>
            <li>character 7 - between exterior of this geometry and boundary of another geometry.</li>
            <li>character 8 - between exteriors of the geometries.</li>
            </ul>
            Possible values of each characters are:
            <ul>
            <li>* - any value;</li>
            <li>F - no intersection;</li>
            <li>T - any intersection;</li>
            <li>0 - point intersection (e.g. shared point);</li>
            <li>1 - line intersection (e.g. shared segment of line);</li>
            <li>2 - area intersection (e.g. shared part of polygon);</li>
            </ul>
            For example, an intersection pattern "F0*******" means, that there should not be intersection between geometries interiors
            and intersection between geometries boundaries must be a point.
            See OpenGIS Simple Features Specification for more details about intersection matrix pattern.
            </param>
            <remarks>
            This method builds DE-9IM intersection matrix and matches it with the pattern
            See OpenGIS Simple Features Specification for more details about DE-9IM intersection matrix.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
            <example>
            The following code:
            <code>geometry.Relate(other, "T*F**FFF*");</code><cr/>
            will detect whether geometries are spatially equal.
            </example>
            <returns>
            <see langword="true"/> if this intersection matrix matches patter; <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Intersection(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Builds an intersection between this geometry and a specified geometry.
            </summary>
            <returns>
            A geometry that represents an intersection of this geometry and an argument. The result geometry contain
            point set that present in both this geometry and an argument.
            </returns>
            <param name="other">A geometry to compute intersection with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Union(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Unites this geometry and a specified geometry.
            </summary>
            <returns>
            A geometry that represents a union of this geometry and an argument. The result geometry contains
            point set that present in this geometry or in an argument.
            </returns>
            <param name="other">A geometry to unite with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.Difference(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Subtracts a specified geometry from this geometry.
            </summary>
            <returns>
            A geometry that represents a difference of this geometry and an argument. The result geometry contains
            point set that present in this geometry but not present in an argument.
            </returns>
            <param name="other">A geometry to subtract.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometry.SymDifference(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Builds a symmetric difference between this geometry and a specified geometry.
            </summary>
            <returns>
            A geometry that represents a symmetric difference of this geometry and an argument. The result geometry contains
            point set that present in one of the geometries but not present in both of them.
            </returns>
            <param name="other">A geometry to compute symmetric difference with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="other" /> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            One of the geometries is invalid in such way that operation can not be finished.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of geometries are not equivalent.
            You can use <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation"/> in order to convert geometries to the same spatial
            reference system.
            </exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.IGeometryCollection">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> is a <see cref="T:Aspose.Gis.Geometries.IGeometry" /> that is a collection of one or more geometries.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometryCollection.Count">
            <summary>
            Gets the number of geometries in this collection.
            </summary>
            <value>
            The count if geometries.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.IGeometryCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:Aspose.Gis.Geometries.IGeometry"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Geometries.IGeometry"/>.
            </value>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometryCollection.GetPointOnSurface">
            <summary>
            Finds a point that is guaranteed to be on one of the surfaces in this collection.
            </summary>
            <returns>
            A point on one of the surfaces. An empty point if this collection does not contain surfaces or all surfaces are empty.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometryCollection.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A geometry, that has no curve geometries. This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometryCollection.ToLinearGeometry(System.Double)">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
            </summary>
            <param name="tolerance">
            The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
            curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
            currently equal to 10000 points.
            </param>
            <returns>
            A geometry, that has no curve geometries. The following transformations are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CircularString"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s with specified <paramref name="tolerance"/>) </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CompoundCurve"/>s are joined into <c>LineString</c>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.CurvePolygon"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiCurve"/>s </li>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiSurface"/>s are transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s </li>
            </ul>
            As a result, <see cref="P:Aspose.Gis.Geometries.IGeometry.HasCurveGeometry"/> of output geometry is <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <c>tolerance</c> is less than or equal to <c>0</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IGeometryCollection.ReplacePolygonsByLines">
            <summary>
            Gets polygons represented as lines of this geometry.
            </summary>
            <returns>A geometry, that has no polygon geometries. The following transformation are applied:
            <ul>
            <li> <see cref="F:Aspose.Gis.Geometries.GeometryType.Polygon"/>s are linearized
            (transformed into <see cref="F:Aspose.Gis.Geometries.GeometryType.LineString"/>s)</li>
            <li><see cref="F:Aspose.Gis.Geometries.GeometryType.MultiPolygon"/>s are joined into <see cref="F:Aspose.Gis.Geometries.GeometryType.MultiLineString"/>s</li>
            </ul>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.ILinearRing">
            <summary>
            A multi-vertex ring.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.ILinearRing.IsClockwise">
            <summary>
            Determines if the ring has clockwise winding 
            </summary>
            <returns><see langword="true" /> if clockwise; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.ILinearRing.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.ILineString">
            <summary>
            A multi-vertex curve with linear interpolation between points.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.ILineString.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.IMultiCurve">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiCurve" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.Curve" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiCurve.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve"/>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve"/>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> - all curves are linearized and new <c>IMultiLineString</c> is created
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.IMultiLineString">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiLineString" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.LineString" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiLineString.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.IMultiPoint">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPoint" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.IPoint" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiPoint.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.IMultiPolygon">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> is a one-dimensional 
            <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.IPolygon" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiPolygon.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.IMultiSurface">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.IGeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.ISurface" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiSurface.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface"/>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface"/>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> - all surfaces are linearized and new <c>IMultiPolygon</c> is created
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.InternalIGeometryExtensions">
            <summary>
            This class contains extensions to the IGeometry interface that we don't want to export to the public API.
            IGeometry can not contain internal member by itself since this is an interface.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.InternalIGeometryExtensions.IsSfaCompatible(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Gets a value indicating whether this geometry and all its elements are one of:
            - Null
            - Point
            - LineString
            - LinearRing
            - Polygon
            - MultiPoint
            - MultiLineString
            - MultiPolygon
            - GeometryCollection
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.InternalIGeometryExtensions.EnforceSfaCompatible(Aspose.Gis.Geometries.IGeometry,System.Double)">
            <summary> Converts this geometry to SFA compatible if it is not. </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.InternalIGeometryExtensions.GetCoordinate(Aspose.Gis.Geometries.IPoint)">
            <summary>
            Gets the coordinate of the point.
            </summary>
            <returns>A coordinate of the point.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.IPoint">
            <summary>
            A single location in coordinate space.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPoint.X">
            <summary>
            Gets the x-coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPoint.Y">
            <summary>
            Gets the y-coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPoint.Z">
            <summary>
            Gets the z-coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPoint.M">
            <summary>
            Gets the m-coordinate.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.IPoint.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.IPointsSequence">
            <summary>
            A curve that is represented by sequence of vertices.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.IPointsSequence.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPointsSequence.Coordinates">
            <summary>
            Returns list of coordinates of this curve.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPointsSequence.ZValues">
            <summary>
            Returns list of Z values of this curve. null if HasZ is false.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPointsSequence.MValues">
            <summary>
            Returns list of m values of this curve. null if HasM is false.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.IPolygon">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.ICurvePolygon"/> whose boundaries are defined by linear rings.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.IPolygon.ExteriorRing">
            <summary>
            Gets the exterior ring.
            </summary>
            <value>
            The exterior ring.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.IPolygon.GetInteriorRing(System.Int32)">
            <summary>
            Gets the interior ring by its index.
            </summary>
            <param name="index">The index.</param>
            <returns>The interior ring.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.IPolygon.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.ISurface">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.ISurface" /> is a two-dimensional geometric object.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.ISurface.GetPointOnSurface">
            <summary>
            Finds a point that is guaranteed to be on this surface.
            </summary>
            <returns>A point on this surface. An empty point if this surface has no interior.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.ISurface.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.IPolygon"/> that approximates or equivalent to this <c>ISurface</c>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.IPolygon"/> that approximates or equivalent to this <c>ISurface</c>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IPolygon"/> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IPolygon"/> it is linearized and <see cref="T:Aspose.Gis.Geometries.IPolygon"/> is created
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.LinearRing">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.LinearRing" /> is a <see cref="T:Aspose.Gis.Geometries.LineString" /> that is both closed and simple.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing"/> class.
            </summary>
            <param name="other">The other line to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing"/> class.
            </summary>
            <param name="collection">The collection of points.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.LinearRing.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.IsClockwise">
            <summary>
            Determines if the ring has clockwise winding. 
            </summary>
            <returns><see langword="true" /> if clockwise; otherwise <see langword="false" />.</returns>
            <remarks> If linear ring is not valid (for example it is self intersecting), then function result is undefined. </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor(Aspose.Gis.Geometries.LinearRing)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing"/> class.
            </summary>
            <param name="other">The other line to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor(System.Collections.Generic.List{Aspose.Gis.Common.Coordinate})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing"/> class.
            </summary>
            <param name="coordinates">
            The coordinates. LinearRing takes ownership of the coordinates.
            DO NOT modify the list after construction.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.LinearRing.#ctor(Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LinearRing"/> class.
            </summary>
            <param name="sequence">
            The points sequence. LinearRing takes ownership of the points sequence.
            DO NOT modify the points sequence after construction.</param>
        </member>
        <member name="T:Aspose.Gis.Geometries.LineString">
            <summary>
            A multi-vertex line.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString"/> class.
            </summary>
            <param name="collection">The collection of points.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Any point is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty"/> is <see langword="true"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.#ctor(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString"/> class.
            </summary>
            <param name="other">The other line to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.Count">
            <summary>
            Gets the number of points in the <see cref="T:Aspose.Gis.Geometries.LineString" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Gis.Geometries.IPoint"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Geometries.IPoint"/>.
            </value>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="set">The value is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Point is empty.</exception>
            <exception cref="T:System.ArgumentException" accessor="set">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.LineString.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.StartPoint">
            <summary>
            Returns a copy of the starting point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.EndPoint">
            <summary>
            Returns a copy of the end point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, if SpatialReferenceSystem is unset.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(Aspose.Gis.Geometries.IPoint)">
            <summary>
            Adds a point to the end of the line.
            </summary>
            <param name="point">The point to add.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            The argument is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty"/> is <see langword="true"/>).
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.LineString.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(System.Double,System.Double)">
            <summary>
            Adds a point to the end of the line.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(System.Double,System.Double,System.Double)">
            <summary>
            Adds a point to the end of the line.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.AddPoint(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a point to the end of the line.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
            <param name="m">The value for M coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.Equals(Aspose.Gis.Geometries.ILineString)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.Reverse">
            <summary>
            Reverses order of points in this <see cref="T:Aspose.Gis.Geometries.LineString" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.op_Equality(Aspose.Gis.Geometries.LineString,Aspose.Gis.Geometries.LineString)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.op_Inequality(Aspose.Gis.Geometries.LineString,Aspose.Gis.Geometries.LineString)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.GetPointsSequence(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Returns an internal points sequence. Use this method in order to access
            coordinates faster (via <see cref="P:Aspose.Gis.Geometries.PointsSequence.Coordinates"/>). You can freely modify the result,
            all modifications to points sequence will be reflected by this instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.#ctor(Aspose.Gis.Geometries.LineString)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString"/> class.
            </summary>
            <param name="other">The other line to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.#ctor(System.Collections.Generic.List{Aspose.Gis.Common.Coordinate})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString"/> class.
            </summary>
            <param name="coordinates">
            The coordinates. LineString takes ownership of the coordinates.
            DO NOT modify the list after construction.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.#ctor(Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.LineString"/> class.
            </summary>
            <param name="sequence">
            The points sequence. LineString takes ownership of the points sequence.
            DO NOT modify the points sequence after construction.</param>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.IsEditable">
            <summary>
            Gets a value indicating whether this instance can be edited.
            </summary>
            <value>
              <see langword="true" /> if this instance is editable; otherwise, <see langword="false" />.
            </value>
            <remarks>
            In order to obtain an editable copy of the geometry use <see cref="M:Aspose.Gis.Geometries.Geometry.ToEditable``1"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.Coordinates">
            <summary>
            Returns list of coordinates of this line string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.ZValues">
            <summary>
            Returns list of z values of this line string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.LineString.MValues">
            <summary>
            Returns list of m values of this line string.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.GetIsClockwise">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.Append(Aspose.Gis.Geometries.ILineString,System.Int32)">
            <summary>
            Appends other line string into this one. Ignores SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.AppendReversed(Aspose.Gis.Geometries.ILineString,System.Int32)">
            <summary>
            Appends reversed line string into this one
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.LockFromEditing">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.RoundXY(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.RoundZ(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.RoundM(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.LineString.GetBoundingRectangle">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.Geometries.LockFromEditingEnumerator`1">
            <summary>
            Enumerator that locks geometries from editing on access.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LockFromEditingEnumerator`1.#ctor(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Create new instance.
            </summary>
            <param name="baseEnumerator">Enumerator to wrap.</param>
        </member>
        <member name="P:Aspose.Gis.Geometries.LockFromEditingEnumerator`1.Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:Aspose.Gis.Geometries.LockFromEditingEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the current element in the collection.</summary>
            <returns>The current element in the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.LockFromEditingEnumerator`1.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.LockFromEditingEnumerator`1.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>
            <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.LockFromEditingEnumerator`1.Reset">
            <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.MultiCurve">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiCurve" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.Curve" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiCurve"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiCurve.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiCurve.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve"/>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> - all curves are linearized and new <c>IMultiLineString</c> is created
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiLineString"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiCurve"/>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiCurve.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiCurve.IsClosed">
            <summary>
            Determines whether this curve is closed.
            </summary>
            <value>
              <see langword="true" /> if this instance is closed; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiCurve"/> class.
            </summary>
            <param name="capacity">The number of geometries that the new collection can initially store.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.#ctor(Aspose.Gis.Geometries.MultiCurve)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiCurve"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.MultiCurve" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiCurve.IsAcceptableGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether the specified geometry is acceptable for this collection.
            </summary>
            <param name="geometry">The geometry to check.</param>
            <returns>
              <see langword="true" /> if the geometry is acceptable; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.MultiLineString">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiLineString" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> 
            whose elements are <see cref="T:Aspose.Gis.Geometries.LineString" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiLineString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiLineString"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiLineString.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiLineString.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiLineString.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiLineString.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiLineString"/> class.
            </summary>
            <param name="capacity">The number of geometries that the new collection can initially store.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiLineString.#ctor(Aspose.Gis.Geometries.MultiLineString)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiLineString"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.MultiLineString" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiLineString.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiLineString.IsAcceptableGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether the specified geometry is acceptable for this collection.
            </summary>
            <param name="geometry">The geometry to check.</param>
            <returns>
              <see langword="true" /> if the geometry is acceptable; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.MultiPoint">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiPoint" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" />
            whose elements are <see cref="T:Aspose.Gis.Geometries.Point" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPoint"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiPoint.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiPoint.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPoint.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPoint.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPoint.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPoint"/> class.
            </summary>
            <param name="capacity">The number of geometries that the new collection can initially store.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPoint.#ctor(Aspose.Gis.Geometries.MultiPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPoint"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.MultiPoint" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPoint.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPoint.IsAcceptableGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether the specified geometry is acceptable for this collection.
            </summary>
            <param name="geometry">The geometry to check.</param>
            <returns>
              <see langword="true" /> if the geometry is acceptable; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.MultiPolygon">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiPolygon" /> is a one-dimensional 
            <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.Polygon" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPolygon"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiPolygon.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPolygon"/> class.
            </summary>
            <param name="capacity">The number of geometries that the new collection can initially store.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.#ctor(Aspose.Gis.Geometries.MultiPolygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiPolygon"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.MultiPolygon" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.IsAcceptableGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether the specified geometry is acceptable for this collection.
            </summary>
            <param name="geometry">The geometry to check.</param>
            <returns>
              <see langword="true" /> if the geometry is acceptable; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiPolygon.CreateFromRings(System.Collections.Generic.IReadOnlyList{Aspose.Gis.Geometries.ILinearRing},System.Collections.Generic.IReadOnlyList{Aspose.Gis.Geometries.ILinearRing})">
             <summary>
             Try to create a MultiPolygon from a set of linear rings.
             In case of error (if rings intersect each other, interior ring contains exterior, etc.) returns null.
             </summary>
            <param name="exteriorRings"> Exterior rings.</param>
            <param name="interiorRings"> Interior rings.</param>
        </member>
        <member name="T:Aspose.Gis.Geometries.MultiSurface">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.MultiSurface" /> is a one-dimensional <see cref="T:Aspose.Gis.Geometries.GeometryCollection" /> whose elements are <see cref="T:Aspose.Gis.Geometries.ISurface" />s.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiSurface"/> class.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiSurface.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.MultiSurface.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface"/>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.IMultiSurface.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> that approximates or equivalent to this <see cref="T:Aspose.Gis.Geometries.IMultiSurface"/>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IMultiPolygon"/> - all surfaces are linearized and new <c>IMultiPolygon</c> is created
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiSurface"/> class.
            </summary>
            <param name="capacity">The number of geometries that the new collection can initially store.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.#ctor(Aspose.Gis.Geometries.MultiSurface)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.MultiSurface"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.MultiSurface" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.MultiSurface.IsAcceptableGeometry(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether the specified geometry is acceptable for this collection.
            </summary>
            <param name="geometry">The geometry to check.</param>
            <returns>
              <see langword="true" /> if the geometry is acceptable; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Aspose.Gis.Geometries.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Geometries</c> namespace contains classes that represent geometry data.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.AreaOperation">
            <summary>
            Computes area of a geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.AsBinaryOperation">
            <summary>
            Converts geometries into their WKB representation.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.AsBinaryOperation.PointerWriter">
            <summary>
            Writes values into the pointer. Endianness of the data matches endianness of this computer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.AsBinaryOperation.PointerWriter.#ctor(System.Byte*,System.Int32)">
            <summary>
            Create new instance.
            </summary>
            <param name="output">Where to write data to.</param>
            <param name="maxCount">
            Limit of how many bytes can be written. If you exceed the limit an exception is thrown.
            </param>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.AsImageOperation">
            <summary>
            Converts geometries into their Image representation.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.AsTextOperation">
            <summary>
            Converts geometries into their WKT representation.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.AsTextOperation.WriteMemberCurve(Aspose.Gis.Geometries.Operations.AsTextOperation.WktStringBuilder,Aspose.Gis.Geometries.ICurve,Aspose.Gis.Geometries.WktVariant)">
            <summary>
            Writes curve without geometry name if it is LineString or LinearRing or with geometry name in the other case.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.AsTextOperation.WriteMemberSurface(Aspose.Gis.Geometries.Operations.AsTextOperation.WktStringBuilder,Aspose.Gis.Geometries.ISurface,Aspose.Gis.Geometries.WktVariant)">
            <summary>
            Writes surface without geometry name if it is Polygon or with geometry name in the other case.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.AsTextOperation.WktStringBuilder">
            <summary> This class wrap <see cref="T:System.Text.StringBuilder"/> to apply the specified numeric format. </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.BuildGeometryOperation">
            <summary>
            Builds <see cref="T:Aspose.Gis.Geometries.IGeometry"/> from <see cref="T:Aspose.Gis.Topology.TopologyGeometry"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildGeometryOperation.BuildGeometry(Aspose.Gis.Topology.TopologyGeometry,System.Boolean@)">
            <summary>
            Creates new geometry that represents an argument.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildGeometryOperation.BuildGeometry(System.Collections.Generic.IReadOnlyList{Aspose.Gis.Geometries.Polygon},System.Collections.Generic.IReadOnlyList{Aspose.Gis.Geometries.LineString},System.Collections.Generic.IReadOnlyList{Aspose.Gis.Geometries.Point})">
            <summary>
            Creates a geometry from list of polygons, lines and points. Choose the most specific geometry type possible.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.BuildTopologyGeometryOperation">
            <summary>
            Builds <see cref="T:Aspose.Gis.Topology.TopologyGeometry"/> from <see cref="T:Aspose.Gis.Geometries.Geometry"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildTopologyGeometryOperation.TryGetChain(Aspose.Gis.Geometries.ILineString,Aspose.Gis.Topology.Chain@,System.String@)">
            <summary>
            Return <see cref="T:Aspose.Gis.Topology.Chain"/> that represents coordinates of a <paramref name="line"/>
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildTopologyGeometryOperation.GetChainSkipErrors(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Return <see cref="T:Aspose.Gis.Topology.Chain"/> that represents coordinates of a <paramref name="line"/>
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildTopologyGeometryOperation.BuildSkipErrors(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Return <see cref="T:Aspose.Gis.Topology.TopologyGeometry"/> that represent a <paramref name="geometry"/>.
            Fixes errors if possible.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildTopologyGeometryOperation.TryBuild(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Topology.TopologyGeometry@,System.String@)">
            <summary>
            Return <see cref="T:Aspose.Gis.Topology.TopologyGeometry"/> that represent a <paramref name="geometry"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildTopologyGeometryOperation.TryAdd(Aspose.Gis.Topology.TopologyGeometry,Aspose.Gis.Geometries.IGeometry,System.String@)">
            <summary>
            Adds <paramref name="geometry"/> to <paramref name="topologyGeometry"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.BuildTopologyGeometryOperation.AddSkipErrors(Aspose.Gis.Topology.TopologyGeometry,Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Adds <paramref name="geometry"/> to <paramref name="topologyGeometry"/>.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.CentroidOpeartion">
            <summary>
            Gets a centroid of a geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.CentroidOpeartion.PointsCentroidComputer">
            <summary>
            Computes a centroid of points in a geometry
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.CentroidOpeartion.LinesCentroidComputer">
            <summary>
            Computer a centroid of lines in a geometry
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.CentroidOpeartion.PolygonsCentroidComputer">
            <summary>
            Computer a centroid of polygons in a geometry
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.ConvexHullOperation">
            <summary>
            Gets a convex hull of the geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.ConvexHullOperation.UniqueCoordinatesCollector">
            <summary>
            Collects all coordinates in a geometry into a hash set.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.ConvexHullOperation.RadialComparer">
            <summary>
            Compares coordinates by angle with the focal point.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.DisjointUnionOperation">
            <summary>
            Unites two disjoint geometries.
            Collects all polygons, lines and points of the geometries into three lists, then create and return
            a geometry based on those list. The most specific geometry type will be created.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.DisjointUnionOperation.Unite(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Unites the geometries. <see cref="T:Aspose.Gis.Geometries.Operations.DisjointUnionOperation"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException">Argument is null.</exception>
            <exception cref="T:System.ArgumentException">Argument has unknown geometry type.</exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.DisjointUnionOperation.ComponentsCollector">
            <summary>
            Collects all geometries within an input geometry into three lists: list of points, list
            of lines and list of polygons.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.DistanceOperation">
            <summary>
            Gets distance between two geometries.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.DistanceOperation.GetDistance(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.Double)">
            <summary>
            Gets distance between two geometries.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.DistanceOperation.PointsAndLinesCollector">
            <summary>
            Collects all non empty Points and LineStrings in a geometry into two lists.
            Points that are part of LineStrings are not included into Points list.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.FromBinaryOperation">
            <summary>
            Creates geometry from Well-Known-Binary representation.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.FromTextOperation">
            <summary>
            Creates geometry from Well-Known-Text representation.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.FromTextOperation.FromText(System.String)">
            <summary>
            Creates geometry from WKT
            </summary>
            <exception cref="T:System.ArgumentNullException">Argument is null.</exception>
            <exception cref="T:System.FormatException">WKT format is wrong.</exception>
            <exception cref="T:System.NotSupportedException">Geometry type is not supported.</exception>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.FromTextOperation.Tokenizer">
            <summary>
            A wrapper around <see cref="T:Aspose.Gis.Common.Formats.Wkt.WktTokenizer"/> with a few additional methods.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.FromTextOperation.Tokenizer.MoveForward">
            <summary>
            Updates current and next tokens.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.FromTextOperation.Tokenizer.MoveForward(Aspose.Gis.Common.Formats.Wkt.WktTokenType,System.String)">
            <summary>
            Ensures that next tokens type is <paramref name="expectedType"/>. Updates current and next tokens.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.FromTextOperation.Tokenizer.MoveForward(Aspose.Gis.Common.Formats.Wkt.WktTokenType,Aspose.Gis.Common.Formats.Wkt.WktTokenType,System.String)">
            <summary>
            Ensures that next tokens type is <paramref name="expectedType1"/> or <paramref name="expectedType2"/>.
            Updates current and next tokens.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.GeometryClipper">
            <summary>
            Clips geometry to bounding rect.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryClipper.Clip(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Clips geometry. Only SFA compatible geometries are supported.
            If clipping is failed (can potentially happen with polygons) returns input geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.GeometrySplitter">
            <summary> Separates geometries. </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.GeometryVisitor">
            <summary>
            Implements visitor pattern for a geometry.
            </summary>
            <remarks>
            Default implementations of <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitGeometryCollection(Aspose.Gis.Geometries.IGeometryCollection)"/>, <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiPolygon(Aspose.Gis.Geometries.IMultiPolygon)"/>,
            <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiPoint(Aspose.Gis.Geometries.IMultiPoint)"/>, <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiLineString(Aspose.Gis.Geometries.IMultiLineString)"/>, <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiCurve(Aspose.Gis.Geometries.IMultiCurve)"/> and <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiSurface(Aspose.Gis.Geometries.IMultiSurface)"/>
            recursively applies visitor to their elements. So, in order to create a visitor that can be applied to any
            standalone geometry and will be recursively applied to every geometry in a collection,
            inherit and override <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitNull(Aspose.Gis.Geometries.IGeometry)"/>, <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitLineString(Aspose.Gis.Geometries.ILineString)"/>, <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitPolygon(Aspose.Gis.Geometries.IPolygon)"/> and
            <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitPoint(Aspose.Gis.Geometries.IPoint)"/>. Override <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitCircularString(Aspose.Gis.Geometries.ICircularString)"/>, <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitCompoundCurve(Aspose.Gis.Geometries.ICompoundCurve)"/>,
            <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitCurvePolygon(Aspose.Gis.Geometries.ICurvePolygon)"/> if you need to support non-SFA geometries.
            If any special behavior is needed for collection classes (e.g MultiPoint) a corresponding Visit...
            method can be overwritten.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.Visit(Aspose.Gis.Geometries.IGeometry,System.Action{Aspose.Gis.Geometries.IPoint},System.Action{Aspose.Gis.Geometries.ILineString},System.Action{Aspose.Gis.Geometries.IPolygon})">
            <summary>
            Creates visitor that is based on provided callbacks and applies it to the input geometry.
            The visitor expands collections.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.Visit(Aspose.Gis.Geometries.IGeometry,System.Action{Aspose.Gis.Geometries.IGeometry})">
            <summary>
            Creates visitor that is based on provided callback and applies it to the input geometry.
            The visitor expands collections.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.ApplyTo(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Applies a visitor to the geometry. Calls one of the 'Visit...' methods.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitPoint(Aspose.Gis.Geometries.IPoint)">
            <summary>
            Visits point.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitLineString(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Visits line string.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitPolygon(Aspose.Gis.Geometries.IPolygon)">
            <summary>
            Visits polygon.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitNull(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Visits null geometry. Does nothing by default
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitLinearRing(Aspose.Gis.Geometries.ILinearRing)">
            <summary>
            Visits linear ring. Default implementation calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitLineString(Aspose.Gis.Geometries.ILineString)"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiPoint(Aspose.Gis.Geometries.IMultiPoint)">
            <summary>
            Visits multi point. Default implementation calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllPointsInMultiPoint(Aspose.Gis.Geometries.IMultiPoint)"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiLineString(Aspose.Gis.Geometries.IMultiLineString)">
            <summary>
            Visits multi line string. Default implementation calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllLineStringsInMultiLineString(Aspose.Gis.Geometries.IMultiLineString)"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiPolygon(Aspose.Gis.Geometries.IMultiPolygon)">
            <summary>
            Visits multi polygon. Default implementation calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllPolygonsInMultiPolygon(Aspose.Gis.Geometries.IMultiPolygon)"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitGeometryCollection(Aspose.Gis.Geometries.IGeometryCollection)">
            <summary>
            Visits geometry collection. Default implementation calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllGeometriesInCollection(Aspose.Gis.Geometries.IGeometryCollection)"/>.
            </summary>
            <param name="geometryCollection"></param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitCircularString(Aspose.Gis.Geometries.ICircularString)">
            <summary>
            Visits circular string.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitCompoundCurve(Aspose.Gis.Geometries.ICompoundCurve)">
            <summary>
            Visits compound curve.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitCurvePolygon(Aspose.Gis.Geometries.ICurvePolygon)">
            <summary>
            Visits curve polygon.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllCurvesInCompoundCurve(Aspose.Gis.Geometries.ICompoundCurve)">
            <summary>
            Visits all curves in compound curve.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiCurve(Aspose.Gis.Geometries.IMultiCurve)">
            <summary>
            Visits multi curve.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitMultiSurface(Aspose.Gis.Geometries.IMultiSurface)">
            <summary>
            Visits multi surface.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllCurvesInCurvePolygon(Aspose.Gis.Geometries.ICurvePolygon)">
            <summary>
            Calls corresponding method for every curve in the specified curve polygon.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllLinearRingsInPolygon(Aspose.Gis.Geometries.IPolygon)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitLinearRing(Aspose.Gis.Geometries.ILinearRing)"/> for every linear ring in the specified polygon.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllGeometriesInCollection(Aspose.Gis.Geometries.IGeometryCollection)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.ApplyTo(Aspose.Gis.Geometries.IGeometry)"/> for every geometry in geometry collection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllPointsInMultiPoint(Aspose.Gis.Geometries.IMultiPoint)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitPoint(Aspose.Gis.Geometries.IPoint)"/> for every point in a multi point.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllCurvesInMultiCurve(Aspose.Gis.Geometries.IMultiCurve)">
            <summary>
            Calls corresponding method for every curve in multi curve.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllLineStringsInMultiLineString(Aspose.Gis.Geometries.IMultiLineString)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitLineString(Aspose.Gis.Geometries.ILineString)"/> for every line string in a multi line string.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllSurfacesInMultiSurface(Aspose.Gis.Geometries.IMultiSurface)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitPolygon(Aspose.Gis.Geometries.IPolygon)"/> or <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitCurvePolygon(Aspose.Gis.Geometries.ICurvePolygon)"/> for every surface in a multi surface.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitAllPolygonsInMultiPolygon(Aspose.Gis.Geometries.IMultiPolygon)">
            <summary>
            Calls <see cref="M:Aspose.Gis.Geometries.Operations.GeometryVisitor.VisitPolygon(Aspose.Gis.Geometries.IPolygon)"/> for every polygon in a multi polygon.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.IsSimpleOperation">
            <summary>
            Determines whether geometry is simple from SFA point of view.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsSimpleOperation.IsSimple(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Determines whether geometry is simple from SFA point of view.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsSimpleOperation.IsSimple(Aspose.Gis.Geometries.IMultiPoint)">
            <summary>
            Determines whether multi point is simple from SFA point of view.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsSimpleOperation.IsSimple(Aspose.Gis.Geometries.ILineString)">
            <summary>
            Determines whether line string is simple from SFA point of view.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsSimpleOperation.IsSimple(Aspose.Gis.Geometries.IMultiLineString)">
            <summary>
            Determines whether multi line string is simple from SFA point of view.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.IsValidOperation">
            <summary>
            Determines whether geometry is valid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValid(Aspose.Gis.Geometries.IGeometry,System.String@)">
            <summary>
            Determines if geometry is valid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidPoint(Aspose.Gis.Geometries.IPoint,System.String@)">
            <summary>
            Determines if point is valid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidCoordinates(System.Collections.Generic.IReadOnlyList{Aspose.Gis.Common.Coordinate},System.String@)">
            <summary>
            Determines if all points in the line are valid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidLineString(Aspose.Gis.Geometries.ILineString,System.String@)">
            <summary>
            A valid line string is a line string, which has at least two points and all its points are valid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidLinearRing(Aspose.Gis.Geometries.ILinearRing,System.String@)">
            <summary>
            A valid linear ring is a closed line string with 4 or more unique points that does not intersect itself.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidCircularString(Aspose.Gis.Geometries.ICircularString,System.String@)">
            <summary>
            A valid circular string must have even number of points and have at least 3 points (or be empty).
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidCompoundCurve(Aspose.Gis.Geometries.ICompoundCurve,System.String@)">
            <summary>
            A valid compound curve must contain valid curves and be contiguous.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidCurvePolygon(Aspose.Gis.Geometries.ICurvePolygon,System.String@)">
            <summary>
            A curve polygon is valid when all of its rings are valid AND it forms a valid linearized polygon.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidPolygon(Aspose.Gis.Geometries.IPolygon,System.String@)">
            <summary>
            A polygon is valid when:
            1. Its exterior and interior rings are valid.
            2. Its interior rings are within exterior ring.
            3. Its interior rings not within other interior rings.
            4. It has its rings touch each other at finite number of points.
            5. Its interior is a connected component - it can not be cut off by holes within a polygon.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidMultiPolygon(Aspose.Gis.Geometries.IMultiPolygon,System.String@)">
            <summary>
            A multi polygon is valid, when:
            1. It contains only valid polygons.
            2. Polygons' interiors don't intersect and touch each other only at finite number of points.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidGeometryCollection(Aspose.Gis.Geometries.IGeometryCollection,System.String@)">
            <summary>
            Geometry collection is valid when all of the geometries it contains are valid and multi polygon
            formed by all polygons in this geometry collection is valid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.BuildClosedChainWithInteriorToTheRight(Aspose.Gis.Topology.Graph.EdgeEnd,System.Collections.Generic.HashSet{Aspose.Gis.Topology.Graph.EdgeEnd})">
            <summary>
            Build as small closed Chain as possible, with Path to the right equal to Location.Interior.
            Add visited EdgeEnds to <paramref name="visitedEdgeEnds"/>.
            </summary>
            <param name="startEdgeEnd"></param>
            <param name="visitedEdgeEnds"></param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.GetNextEdgeEndWithInteriorToTheRight(Aspose.Gis.Topology.Graph.EdgeEnd)">
            <summary>
            Finds next edge end to <see cref="P:Aspose.Gis.Topology.Graph.EdgeEnd.Opposite"/> of <paramref name="edgeEnd"/> in counter-clockwise direction
            with Label.RightLocation == Location.Interior. Is used in <see cref="M:Aspose.Gis.Geometries.Operations.IsValidOperation.BuildClosedChainWithInteriorToTheRight(Aspose.Gis.Topology.Graph.EdgeEnd,System.Collections.Generic.HashSet{Aspose.Gis.Topology.Graph.EdgeEnd})"/>
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.IsValidOperation.IsValidCoordinate(System.Double,System.String,System.String@)">
            <summary>
            Determines if coordinate is valid.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.LengthOperation">
            <summary> Computes length of a geometry. </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.LengthOperation.GetLength(Aspose.Gis.Geometries.IGeometry)">
            <summary> Computes length of a geometry. </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.OverlayOperations">
            <summary>
            Implements overlay operations (Intersection, Difference, SymDifference and Union).
            Every method has similar API - two geometries and two geometries names (used to form exceptions text).
            The detailed description of overlays can be found in doc comments of <see cref="T:Aspose.Gis.Geometries.Geometry"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.OverlayOperations.Intersection(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Intersection(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.OverlayOperations.Union(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Union(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.OverlayOperations.Difference(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Difference(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.OverlayOperations.SymDifference(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.SymDifference(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.SpatialPredicates">
            <summary>
            Implements spatial predicates.
            Every method has similar API - two geometries and two geometries names (used to form exceptions text).
            The detailed description of spatial predicates can be found in doc comments of <see cref="T:Aspose.Gis.Geometries.Geometry"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.BuildPlanarGraph(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <summary>
            Create a planar graph from two geometries. Throw exception if the result planar graph is not valid because
            of invalid input geometries.
            </summary>
            <param name="left">First geometry.</param>
            <param name="right">Second geometry.</param>
            <param name="leftName">First geometry name. Used to form exception text.</param>
            <param name="rightName">Second geometry name. Used to form exception text.</param>
            <returns>PlanarGraph that represents two geometries.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Equals(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.SpatiallyEquals(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Disjoint(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Disjoint(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Intersects(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Intersects(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Touches(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Touches(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Crosses(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Crosses(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Within(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Within(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Contains(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.SpatiallyContains(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Overlaps(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Overlaps(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Covers(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Covers(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.CoveredBy(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.CoveredBy(Aspose.Gis.Geometries.IGeometry)"/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Operations.SpatialPredicates.Relate(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.Geometries.IGeometry,System.String,System.String,System.String)">
            <inheritdoc cref="M:Aspose.Gis.Geometries.Geometry.Relate(Aspose.Gis.Geometries.IGeometry,System.String)"/>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.ToLinearGeometryOperation">
            <summary> Converts an input geometry to linear geometry. </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Operations.ToPointsGeometryOperation">
            <summary> Converts an input geometry to linear geometry by points. </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Point">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.Point" /> represents a single location in coordinate space.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point"/> class.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point"/> class.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point"/> class.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
            <param name="m">The value for M coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.#ctor(Aspose.Gis.Geometries.IPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.IPoint" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.X">
            <summary>
            Gets or sets a value for the x-coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.Y">
            <summary>
            Gets or sets a value for the y-coordinate.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.Z">
            <summary>
            Gets or sets a value for the z-coordinate.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry does not have a Z coordinate.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.M">
            <summary>
            Gets or sets a value for the m-coordinate.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry does not have an M coordinate.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.HasM">
            <summary>
            Gets a value indicating whether this instance has an M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has an M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Point.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.op_Equality(Aspose.Gis.Geometries.Point,Aspose.Gis.Geometries.Point)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.op_Inequality(Aspose.Gis.Geometries.Point,Aspose.Gis.Geometries.Point)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.Equals(Aspose.Gis.Geometries.IPoint)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.#ctor(Aspose.Gis.Geometries.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Point" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.#ctor(Aspose.Gis.Common.Coordinate)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Point"/> class.
            </summary>
            <param name="coordinate">The coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.RoundXY(Aspose.Gis.PrecisionModel)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.RoundZ(Aspose.Gis.PrecisionModel)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.RoundM(Aspose.Gis.PrecisionModel)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.Equals(Aspose.Gis.Geometries.IPoint,System.Boolean)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <param name="nested">
            Indicates, whether this equality comparison is part of equality comparison of geometry collection or any other geometry-container.
            If nested == true, then properties, which MUST be same with parent geometry (like SpatialReferenceSystem) are not compared.
            If nested == false, all properties are compared.
            </param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Point.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.PointsSequence">
            <summary>
            A curve implementation that is based on sequence of vertices.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.PointsSequence"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.#ctor(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.PointsSequence"/> class.
            </summary>
            <param name="collection">The collection of points.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">Any point is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty"/> is <see langword="true"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.#ctor(Aspose.Gis.Geometries.IPointsSequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.PointsSequence"/> class.
            </summary>
            <param name="other">The other curve to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.Coordinates">
            <summary>
            Returns list of coordinates of this curve.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.ZValues">
            <summary>
            Returns list of Z values of this curve. null if HasZ is false.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.MValues">
            <summary>
            Returns list of m values of this curve. null if HasM is false.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.Count">
            <summary>
            Gets the number of points in the <see cref="T:Aspose.Gis.Geometries.PointsSequence" />.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Gis.Geometries.IPoint"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Geometries.IPoint"/>.
            </value>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="set">The value is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Point is empty.</exception>
            <exception cref="T:System.ArgumentException" accessor="set">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.PointsSequence.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.StartPoint">
            <summary>
            Returns a copy of the starting point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.EndPoint">
            <summary>
            Returns a copy of the end point of the curve.
            </summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The geometry is empty.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.PointsSequence.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, if SpatialReferenceSystem is unset.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.AddPoint(Aspose.Gis.Geometries.IPoint)">
            <summary>
            Adds a point to the end of the curve.
            </summary>
            <param name="point">The point to add.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            The argument is empty (its <see cref="P:Aspose.Gis.Geometries.IGeometry.IsEmpty"/> is <see langword="true"/>).
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.PointsSequence.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.AddPoint(System.Double,System.Double)">
            <summary>
            Adds a point to the end of the curve.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.AddPoint(System.Double,System.Double,System.Double)">
            <summary>
            Adds a point to the end of the curve.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.AddPoint(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a point to the end of the curve.
            </summary>
            <param name="x">The value for X coordinate.</param>
            <param name="y">The value for Y coordinate.</param>
            <param name="z">The value for Z coordinate.</param>
            <param name="m">The value for M coordinate.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>
            <see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.Equals(Aspose.Gis.Geometries.IPointsSequence)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.Reverse">
            <summary>
            Reverses order of points in this <see cref="T:Aspose.Gis.Geometries.PointsSequence" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.op_Equality(Aspose.Gis.Geometries.PointsSequence,Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.op_Inequality(Aspose.Gis.Geometries.PointsSequence,Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.CastToSimpleCurve(Aspose.Gis.Geometries.IPointsSequence)">
            <summary>
            Casts argument to SimpleCurve. If argument is not a SimpleCurve - throw an exception.
            </summary>
            <exception cref="T:System.NotSupportedException"/>
            <remarks>
            Use this method in order to get access to <see cref="P:Aspose.Gis.Geometries.PointsSequence.Coordinates"/>, <see cref="P:Aspose.Gis.Geometries.PointsSequence.ZValues"/> and
            <see cref="P:Aspose.Gis.Geometries.PointsSequence.MValues"/> property.
            By the moment SimpleCurve is the only direct inheritor of ISimpleCurve so this method should never fail.
            Still, use this method rather than direct cast so it would be easier for us to find all casts if we introduce new
            ISimpleCurve inheritors.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.#ctor(Aspose.Gis.Geometries.PointsSequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.PointsSequence"/> class.
            </summary>
            <param name="other">The other curve to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.#ctor(System.Collections.Generic.List{Aspose.Gis.Common.Coordinate})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.PointsSequence"/> class.
            </summary>
            <param name="coordinates">
            The coordinates. SimpleCurve takes ownership of the coordinates.
            DO NOT modify the list after construction.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.#ctor(System.Collections.Generic.List{Aspose.Gis.Common.Coordinate},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.PointsSequence"/> class.
            </summary>
            <param name="coordinates">
            The coordinates. SimpleCurve takes ownership of the coordinates.
            DO NOT modify the list after construction.</param>
            <param name="zValues">
            The Z values. SimpleCurve takes ownership of the values.
            DO NOT modify the list after construction.
            </param>
            <param name="mValues">
            The M values. SimpleCurve takes ownership of the values.
            DO NOT modify the list after construction.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.Append(Aspose.Gis.Geometries.PointsSequence,System.Int32)">
            <summary>
            Appends other curve into this one. Ignores SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.AppendReversed(Aspose.Gis.Geometries.PointsSequence,System.Int32)">
            <summary>
            Appends reversed curve into this one
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.RoundXY(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.RoundZ(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.RoundM(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.PointsSequence.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <summary>
            Applies coordinate transformation to each coordinate in geometry.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Polygon">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.Polygon" /> is a planar surface,
            defined by 1 exterior boundary and 0 or more interior boundaries.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.#ctor(Aspose.Gis.Geometries.ILinearRing)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon"/> class.
            </summary>
            <param name="exteriorRing">The exterior ring.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.#ctor(Aspose.Gis.Geometries.ILinearRing,System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.ILinearRing})">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon"/> class.
            </summary>
            <param name="exteriorRing">The exterior ring.</param>
            <param name="interiorRings">The interior rings.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.HasM">
            <summary>
            Gets a value indicating whether this instance has M coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has M coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.HasZ">
            <summary>
            Gets a value indicating whether this instance has Z coordinate.
            </summary>
            <value>
              <see langword="true" /> if this instance has Z coordinate; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.SpatialReferenceSystem">
            <summary>
            Gets SpatialReferenceSystem of this instance.
            This property can be <see langword="null"/>, is SpatialReferenceSystem is unknown.
            Assigning new SpatialReferenceSystem will not perform any coordinate transformation, only reference will change.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.GeometryType">
            <summary>
            Gets the type of the geometry.
            </summary>
            <value>
            The type of the geometry.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.ExteriorRing">
            <summary>
            Gets the exterior ring.
            </summary>
            <value>
            The exterior ring.
            </value>
            <exception cref="T:System.ArgumentException" accessor="set">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.Polygon.SpatialReferenceSystem"/> of argument are both not <see langword="null"/>
            and don't equal to each other.
            </exception>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.Aspose#Gis#Geometries#ICurvePolygon#ExteriorRing">
            <summary>
            Gets the exterior ring.
            </summary>
            <value>
            The exterior ring.
            </value>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.InteriorRingsCount">
            <summary>
            Gets the number of interior rings.
            </summary>
            <value>
            The number of interior rings.
            </value>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.GetPointOnSurface">
            <summary>
            Finds a point that is guaranteed to be on this polygon.
            </summary>
            <returns>A point on this polygon. An empty point if this polygon has no interior.</returns>
            <exception cref="T:System.InvalidOperationException">Polygon is invalid in such way that operation can not be completed.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.SetEmpty">
            <summary>
            Makes this <see cref="T:Aspose.Gis.Geometries.Geometry" /> empty.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.GetInteriorRing(System.Int32)">
            <summary>
            Gets the interior ring by its index.
            </summary>
            <param name="index">The index.</param>
            <returns>The interior ring.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.Aspose#Gis#Geometries#ICurvePolygon#GetInteriorRing(System.Int32)">
            <summary>
            Gets the interior ring by its index.
            </summary>
            <param name="index">The index.</param>
            <returns>The interior ring.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.AddInteriorRing(Aspose.Gis.Geometries.ILinearRing)">
            <summary>
            Adds an interior ring.
            </summary>
            <param name="ring">The ring to add.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> of this geometry and <see cref="P:Aspose.Gis.Geometries.Polygon.SpatialReferenceSystem"/> of argument are both not
            <see langword="null"/> and don't equal to each other.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The clone of this instance</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.Equals(Aspose.Gis.Geometries.ICurvePolygon)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="other">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.Equals(Aspose.Gis.Geometries.IPolygon)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="other">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.op_Equality(Aspose.Gis.Geometries.Polygon,Aspose.Gis.Geometries.Polygon)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.op_Inequality(Aspose.Gis.Geometries.Polygon,Aspose.Gis.Geometries.Polygon)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.#ctor(Aspose.Gis.Geometries.Polygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Polygon" /> to copy data from.</param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.#ctor(Aspose.Gis.Geometries.CurvePolygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Polygon"/> class.
            </summary>
            <param name="curvePolygon">The curve polygon to use internally.</param>
        </member>
        <member name="P:Aspose.Gis.Geometries.Polygon.IsEditable">
            <summary>
            Gets a value indicating whether this instance can be edited.
            </summary>
            <value>
              <see langword="true" /> if this instance is editable; otherwise, <see langword="false" />.
            </value>
            <remarks>
            In order to obtain an editable copy of the geometry use <see cref="M:Aspose.Gis.Geometries.Geometry.ToEditable``1"/>.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.SetExteriorRingRef(Aspose.Gis.Geometries.LinearRing@)">
            <summary>
            Sets the exterior ring into. Does not copy the argument, just reference assigns it.
            Sets reference to null in order to prevent modifications of the geometry from outside.
            Any mutations to the argument after addition will be reflected in the polygon and can result in invalid
            state of the polygon. DO NOT modify the geometry after setting.
            </summary>
            <param name="ring">
            Exterior ring to set.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.AddInteriorRingRef(Aspose.Gis.Geometries.LinearRing@)">
            <summary>
            Adds an interior ring. Does not copy the argument, just reference assigns it.
            Sets reference to null in order to prevent modifications of the geometry from outside.
            Any mutations to the argument after addition will be reflected in the polygon and can result in invalid
            state of the polygon. DO NOT modify the geometry after addition.
            </summary>
            <param name="ring">
            Ring to add.
            </param>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.LockFromEditing">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.RoundXY(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.RoundZ(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.RoundM(Aspose.Gis.PrecisionModel)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.GrowBoundingBox(Aspose.Gis.Common.BoundingBox)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.GrowBoundingRectangle(Aspose.Gis.Common.BoundingRectangle)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.Transform(Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Geometries.Polygon.FindOrdinateWithNoPoints">
            <summary>
            Finds an ordinate inside bounding box with no points on it
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.Surface">
            <summary>
            A <see cref="T:Aspose.Gis.Geometries.Surface" /> is a two-dimensional geometric object.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Geometries.Surface.Dimension">
            <summary>
            Gets the topological dimension of this <see cref="T:Aspose.Gis.Geometries.Geometry" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Surface.GetPointOnSurface">
            <summary>
            Finds a point that is guaranteed to be on this surface.
            </summary>
            <returns>A point on this surface. An empty point if this surface has no interior.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Surface.ToEditable">
            <summary>
            Gets an editable copy of this geometry.
            </summary>
            <returns>An editable copy of this geometry.</returns>
        </member>
        <member name="M:Aspose.Gis.Geometries.Surface.ToLinearGeometry">
            <summary>
            Gets approximate or equivalent non-curve version of this geometry using the default <c>tolerance</c>.
            </summary>
            <returns>
            A <see cref="T:Aspose.Gis.Geometries.IPolygon"/> that approximates or equivalent to this <c>ISurface</c>.
            This is the equivalent of <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)"/> with
            default <c>tolerance</c>. Default <c>tolerance</c>s value is dependent on <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>
            of this geometry:
            <ul>
            <li> For projected SRS Tolerance is 0.001 meters (in SRS units) </li>
            <li> For geographic SRS Tolerance is <c>1e-5</c> degrees (in SRS units) </li>
            <li> For unknown SRS Tolerance is <c>1e-5</c> </li>
            </ul>
            For more details on what transformations are applied refer to <see cref="M:Aspose.Gis.Geometries.ISurface.ToLinearGeometry(System.Double)"/> specification.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This geometry is invalid in a such way, that operation can not be completed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Surface.ToLinearGeometry(System.Double)">
             <summary>
             Gets approximate or equivalent non-curve version of this geometry using the specified <c>tolerance</c>.
             </summary>
             <param name="tolerance">
             The <c>tolerance</c> to use. The result is guaranteed to be less than <c>tolerance</c> away from the
             curved geometry, unless the number of points needed to linearize the geometry exceeds the per-quadrant maximum,
             currently equal to 10000 points.
             </param>
             <returns>
             A <see cref="T:Aspose.Gis.Geometries.IPolygon"/> that approximates or equivalent to this <c>ISurface</c>:
             <ul>
             If this object is <see cref="T:Aspose.Gis.Geometries.IPolygon"/> itself the result is equivalent to this object
             If this object is not <see cref="T:Aspose.Gis.Geometries.IPolygon"/> it is linearized and <see cref="T:Aspose.Gis.Geometries.IPolygon"/> is created
            </ul>
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             <c>tolerance</c> is less than or equal to <c>0</c>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             This geometry is invalid in a such way, that operation can not be completed.
             </exception>
        </member>
        <member name="M:Aspose.Gis.Geometries.Surface.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Surface"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Geometries.Surface.#ctor(Aspose.Gis.Geometries.Surface)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Geometries.Surface"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Geometries.Surface" /> to copy data from.</param>
        </member>
        <member name="T:Aspose.Gis.Geometries.WkbVariant">
            <summary>
            The variant of Well-Known Binary
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.WkbVariant.SimpleFeatureAccessOutdated">
            <summary>
            Well-Known Binary compliant with Simple Feature Access specification, version 1.1.
            </summary>
            <remarks>
            This variant of Well-Known Binary does not include Z and M values.
            </remarks>
        </member>
        <member name="F:Aspose.Gis.Geometries.WkbVariant.Iso">
            <summary>
            Well-Known Binary compliant with ISO standard "SQL Multimedia and application packages - Part 3: Spatial" and
            Simple Feature Access specification, version 1.2.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.WkbVariant.ExtendedPostGis">
            <summary>
            Extended Well-Known Binary variant designed by PostGIS that exports Spatial Reference System identifier (EPSG code).
            </summary>
        </member>
        <member name="T:Aspose.Gis.Geometries.WktVariant">
            <summary>
            The variant of Well-Known Text
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.WktVariant.SimpleFeatureAccessOutdated">
            <summary>
            Well-Known Text compliant with Simple Feature Access specification, version 1.1.
            </summary>
            <remarks>
            This variant of Well-Known Text does not include Z and M values.
            </remarks>
        </member>
        <member name="F:Aspose.Gis.Geometries.WktVariant.Iso">
            <summary>
            Well-Known Text compliant with ISO standard "SQL Multimedia and application packages - Part 3: Spatial" and
            Simple Feature Access specification, version 1.2.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Geometries.WktVariant.ExtendedPostGis">
            <summary>
            Extended Well-Known Text variant designed by PostGIS that exports Spatial Reference System identifier (EPSG code).
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.Extensions.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.GeoTools.Extensions</c> namespace contains classes that represent Extensions.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.Extensions.VectorLayerExtention">
            <summary>
            Vector Layer Extention.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.Extensions.VectorLayerExtention.AddFeatures``1(Aspose.Gis.VectorLayer,System.Collections.Generic.List{``0})">
            <summary>
            Add Features using generic list.
            </summary>
            <typeparam name="T">The Generic Type.</typeparam>
            <param name="layer">The Layer to add.</param>
            <param name="featuresData">Input data.</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.Extensions.VectorLayerExtention.AddFeatures(Aspose.Gis.VectorLayer,System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IGeometry})">
            <summary>
            Add Features using generic list.
            </summary>        
            <param name="layer">The Layer to add.</param>
            <param name="geometries">Input geometries.</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.Extensions.VectorLayerExtention.ReadFeatures``1(Aspose.Gis.VectorLayer)">
            <summary>
            Read Features using generic list (the same as <seealso cref="M:Aspose.Gis.GeoTools.Extensions.VectorLayerExtention.GetObjects``1(Aspose.Gis.VectorLayer)"/>>).
            </summary>
            <typeparam name="T">The Generic Type.</typeparam>
            <param name="layer">The Layer to read.</param>
            <returns>The features.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.Extensions.VectorLayerExtention.ReadGeometries(Aspose.Gis.VectorLayer)">
            <summary>
            Read only geometries from layer.
            </summary>        
            <param name="layer">The Layer to read.</param>
            <returns>The features.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.Extensions.VectorLayerExtention.GetObjects``1(Aspose.Gis.VectorLayer)">
            <summary>
            Read Features using generic list.
            </summary>
            <typeparam name="T">The Generic Type.</typeparam>
            <param name="layer">The Layer to read.</param>
            <returns>The features.</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeneratorPlaces">
            <summary>
            Describes the object places using by the <see cref="T:Aspose.Gis.GeoTools.GeoGenerator"/>.
            </summary>
        </member>
        <member name="F:Aspose.Gis.GeoTools.GeneratorPlaces.Random">
            <summary> Places by random. </summary>
        </member>
        <member name="F:Aspose.Gis.GeoTools.GeneratorPlaces.Regular">
            <summary> Places in centers </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeoGenerator">
            <summary>
            Generator of random points, lines and polygons on given planes.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeoGenerator.ProducePoints(Aspose.Gis.Extent,Aspose.Gis.GeoTools.PointGeneratorOptions)">
            <summary>
            Creates an array of points belonging to the specified area.
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>).</param>
            <param name="options">Point creation options (see <see cref="T:Aspose.Gis.GeoTools.PointGeneratorOptions">PointGeneratorOptions</see>).</param>
            <returns>Array of points (see enumeration of <see cref="T:Aspose.Gis.Geometries.IGeometry">IGeometry</see>).</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Number of points must be grater then one.</exception>
            <exception cref="T:System.NullReferenceException">Extent must have a value (not be NULL).</exception>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeoGenerator.ProduceLines(Aspose.Gis.Extent,Aspose.Gis.GeoTools.LineGeneratorOptions)">
            <summary>
            Creates a new ILineString Enumerator with a given number of random items, all of them within a given extent.
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>)</param>
            <param name="options">Line creation options (see <see cref="T:Aspose.Gis.GeoTools.LineGeneratorOptions">LineGeneratorOptions</see>)</param>
            <returns>Array of lines (see enumeration of <see cref="T:Aspose.Gis.Geometries.ILineString">ILineString</see>)</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Number of lines must be grater then one.</exception>
            <exception cref="T:System.NullReferenceException">Extent must have a value (not be NULL)</exception>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeoGenerator.ProducePolygons(Aspose.Gis.Extent,Aspose.Gis.GeoTools.PolygonGeneratorOptions)">
            <summary>
            Creates a new IPolygon Enumerator with a given number of random items, all of them within a given extent.
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>)</param>
            <param name="options">Polygon creation options (see <see cref="T:Aspose.Gis.GeoTools.PolygonGeneratorOptions">PolygonGeneratorOptions</see>)</param>
            <returns>Array of polygons (see enumeration of <see cref="T:Aspose.Gis.Geometries.IPolygon">IPolygon</see>)</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Number of polygons must be grater then one.</exception>
            <exception cref="T:System.NullReferenceException">Extent must have a value (not be NULL)</exception>
            <exception cref="T:System.ArgumentException">The minimum and maximum lengths must be unequal and greater than 0</exception>
            <exception cref="T:System.ArgumentException">The maximum length must be greater than the minimum</exception>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeoGenerator.ProduceStars(Aspose.Gis.Extent,Aspose.Gis.GeoTools.StarGeneratorOptions)">
            <summary>
            Creates an array of stars, all of them within a given extent.
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>)</param>
            <param name="options">Polygon creation options (see <see cref="T:Aspose.Gis.GeoTools.StarGeneratorOptions">StarGeneratorOptions</see>)</param>
            <returns>Array of stars (see enumeration of <see cref="T:Aspose.Gis.Geometries.IPolygon">IPolygon</see>)</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Number of stars must be grater then one.</exception>
            <exception cref="T:System.NullReferenceException">Extent must have a value (not be NULL)</exception>
            <exception cref="T:System.ArgumentException">The minimum and maximum lengths must be unequal and greater than 3</exception>
            <exception cref="T:System.ArgumentException">The maximum length must be greater than the minimum</exception>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.PlaceAdapters.IPlaceGeneratorAdapter">
            <summary>
            Place mode for <see cref="T:Aspose.Gis.GeoTools.GeoGenerator"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.PlaceAdapters.IPlaceGeneratorAdapter.NextRandomDoubleByRange(System.Double,System.Double)">
            <summary>
            Take next place double number by range.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.PlaceAdapters.RandomGeneratorAdapter">
            <summary>
            A wrapper class on a standard random (see <see cref="T:System.Random"/>) class for the convenience of initialization and generation of pseudo-random values
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.PlaceAdapters.RandomGeneratorAdapter.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="seed">A number used to calculate the seed value for a sequence of pseudo-random numbers</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.PlaceAdapters.RandomGeneratorAdapter.NextRandomDoubleByRange(System.Double,System.Double)">
            <summary>
            Take next random double number by range
            </summary>
            <param name="minimum">Range start position</param>
            <param name="maximum">Range end position</param>
            <returns> Random double number</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.PlaceAdapters.RegularGeneratorAdapter">
            <summary>
            Place points in range center.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.PointsGenerator">
            <summary>
            This class implements the generation of points on a rectangle
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.PointsGenerator.#ctor(Aspose.Gis.Extent,Aspose.Gis.GeoTools.PointGeneratorOptions)">
            <summary>
            Constructor
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>)</param>
            <param name="options">Point creation options (see <see cref="T:Aspose.Gis.GeoTools.PointGeneratorOptions">PointGeneratorOptions</see>)</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.PointsGenerator.Produce">
            <summary>
            Produce an array of points belonging to the specified area
            </summary>
            <returns>Array of points (see enumeration of <see cref="T:Aspose.Gis.Geometries.IGeometry">IGeometry</see>)</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.PolygonsGenerator">
            <summary>
            This class implements the generation of polygons on a rectangle
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.PolygonsGenerator.#ctor(Aspose.Gis.Extent,Aspose.Gis.GeoTools.PolygonGeneratorOptions)">
            <summary>
            Constructor
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>)</param>
            <param name="options">Polygon creation options (see <see cref="T:Aspose.Gis.GeoTools.PolygonGeneratorOptions">PolygonGeneratorOptions</see>)</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.PolygonsGenerator.Produce">
            <summary>
            Produce an array of polygones belonging to the specified area
            </summary>
            <returns>Array of polygones (see enumeration of <see cref="T:Aspose.Gis.Geometries.IPolygon">IPolygon</see>)</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.RectangleSpliter">
            <summary>
            Split the rectangle to rectangles.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.RectangleSpliter.Split(System.Int32,Aspose.Gis.Extent)">
            <summary>
            Take the extent and halve the larger side.
            Randomly choose one of the rectangles and divide it in half on the larger side. 
            Do it until we get the required number
            </summary>
            <param name="countOfObject">Parameter for split to count of object</param>
            <param name="rectangle">Base extent for split</param>
            <returns>List of extent after split</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.SegmentsGenerator">
            <summary>
            This class implements the generation of lines on a rectangle
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.SegmentsGenerator.#ctor(Aspose.Gis.Extent,Aspose.Gis.GeoTools.LineGeneratorOptions)">
            <summary>
            Constructor
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>)</param>
            <param name="options">Polyline creation options (see <see cref="T:Aspose.Gis.GeoTools.LineGeneratorOptions">LineGeneratorOptions</see>)</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.SegmentsGenerator.Produce">
            <summary>
            Produce an array of lines belonging to the specified area
            </summary>
            <returns>Array of lines (see enumeration of <see cref="T:Aspose.Gis.Geometries.ILineString">ILineString</see>)</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryGenerator.StarsGenerator">
            <summary>
            This class implements the generation of stars on a rectangle
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.StarsGenerator.#ctor(Aspose.Gis.Extent,Aspose.Gis.GeoTools.StarGeneratorOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="rect">Specified area (see <see cref="T:Aspose.Gis.Extent">Extent</see>)</param>
            <param name="options">Stars creation options (see <see cref="T:Aspose.Gis.GeoTools.StarGeneratorOptions" /> </param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryGenerator.StarsGenerator.Produce">
            <summary>
            Produce an array of polygones belonging to the specified area
            </summary>
            <returns>Array of polygones (see enumeration of <see cref="T:Aspose.Gis.Geometries.IPolygon">IPolygon</see>)</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryOperations">
            <summary>
            The geometry operations class provides additional geoprocessing algorithms for geometries.
            </summary>
            <remarks>
            Other algorithms you can find in the methods of <see cref="T:Aspose.Gis.Geometries.Geometry"/>
            </remarks>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.CreateMidpoints(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Create midpoints by adding a new point in the middle to each segment.
            </summary>
            <param name="geometry">Geometry for processing.</param>
            <returns>The geometry after processing.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.CloseLinearRing(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Closes geometric segments in rings if it needs.
            </summary>
            <param name="geometry">Geometry for closing.</param>
            <returns>The geometry after closing.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.DeleteNearPoints(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.GeoTools.NearPointsCleanerOptions)">
            <summary>
            Delete points that are too close to each other.
            </summary>
            <param name="geometry">Geometry for deleting the nearest points.</param>
            <param name="options">Options for deleting the nearest points.</param>
            <returns>The geometry after deleting nearest point.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.SimplifySegments(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.GeoTools.SimplifySegmentsOptions)">
            <summary>
            Delete points lying on the same segment.
            </summary>
            <param name="geometry">Geometry for deleting extra point</param>
            <param name="options">Options for deleting extra point</param>
            <returns>The geometry after deleting extra point</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.OrderGeometryCollection(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Order geometry collection by type to four collection (point, line, polygon and other type)
            </summary>
            <param name="geometry">Geometry collection for order</param>
            <returns>The collection contains four collections (point, line, polygon and other type)</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.MakeVoronoiGraph(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint})">
            <summary>
            Build "Voronoi" diagram for collection of points (sites)
            </summary>
            <param name="sites">Collection of points (sites)</param>
            <returns>Collection of edges voronoi's diagram</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.BuildCenterline(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.Point})">
            <summary>
            Build centerline diagram for collection of points (sites)
            </summary>
            <param name="sites">Collection of points (sites)</param>
            <returns>Collection of centerline edges</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.BuildCenterline(Aspose.Gis.Geometries.Polygon)">
            <summary>
            Build centerline diagram for polygon
            </summary>
            <param name="polygon">Polygon for centerline diagram</param>
            <returns>Collection of centerline edges</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.GetCenterlineLength(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.Point})">
            <summary>
            Get centerline Length
            </summary>
            <param name="sites">Collection of points (sites)</param>
            <returns>Length of centerline edges</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryOperations.GetCenterlineLength(Aspose.Gis.Geometries.Polygon)">
            <summary>
            Get centerline Length
            </summary>
            <param name="polygon">Polygon for centerline diagram</param>
            <returns>Length of centerline edges</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.GeometryTypeAnalyzer.OrderCollection(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Order geometry collection by type to four collection (point, line, polygon and other type) 
            </summary>
            <param name="geometry">Geometry collection for order</param>
            <returns>Collection contains four collections (point, line, polygon and other type)</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.GeometryTypeAnalyzer.AddGeometryToSpecificCollection(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            check geometry type and add to specific collection depend on it
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryProcessing.Helpers.GeoToolsMath">
            <summary>
            Common Math functions for GeoTools.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.Helpers.GeoToolsMath.IsPointCoordinateEquals(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint)">
            <summary>
            Check is Point's Coordinate are Equals
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.Helpers.GeoToolsMath.IsPointNearest(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint,System.Double)">
            <summary>
            Check is point near to another point by distance parameter
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.Helpers.GeoToolsMath.GetDistanceBetweenPoints(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint)">
            <summary>
            Get distance between points
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.Helpers.GeoToolsMath.GetDistanceSqr(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint)">
            <summary>
            Get sqr distance between points
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.LinearRingCloser.Accept(Aspose.Gis.Geometries.LineString,Aspose.Gis.Geometries.LineString@)">
            <summary>
            Accept 'LineString' GeometryType for closing
            </summary>
            <param name="line">Line for closing</param>
            <param name="resolvedGeometry">New instance of LineString</param>
            <returns>Line after closing</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryProcessing.MidpointsCreator">
            <summary>
            Add Midpoints in Lines.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.MidpointsCreator.Accept(Aspose.Gis.Geometries.LineString,Aspose.Gis.Geometries.LineString@)">
            <summary>
            Accept 'LineString' GeometryType for split
            </summary>
            <param name="line">Line for split</param>
            <param name="resolvedGeometry">New instance of LineString</param>
            <returns>Line after split</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryProcessing.Visitor.GeometryLineVisitor">
            <summary>
            Implement visitor for geometry segments.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.Visitor.GeometryLineVisitor.MakeAction(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.GeoTools.GeometryProcessing.Visitor.ILineAction)">
            <summary>
            Make action for geometry depend on 'GeometryType'
            </summary>
            <param name="geometry">Geometry object for action</param>
            <param name="action">Type operation</param>
            <returns>Geometry after action</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.GeometryProcessing.Visitor.ILineAction">
            <summary>
            Any segment from <see cref="T:Aspose.Gis.GeoTools.GeometryProcessing.Visitor.GeometryLineVisitor"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.GeometryProcessing.Visitor.ILineAction.Accept(Aspose.Gis.Geometries.LineString,Aspose.Gis.Geometries.LineString@)">
            <summary>
            Accept <see cref="T:Aspose.Gis.Geometries.LineString"/> GeometryType for operation
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder">
            <summary>
            Contains a method for creating maps and all the functions it depends on.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder.CreateMap(Aspose.Gis.GeoTools.LayersMap.MapOptions)">
            <summary>
            Creates a map using options provided and contains its render in a System.IO.MemoryStream.
            </summary>
            <param name="model"> Map layers options. </param>
            <returns> The completed map. </returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder.CalculateMapSizesOnTiles(System.Collections.Generic.List{Aspose.Gis.Raster.Web.WebTile})">
            <summary>
            Finds the maximum width and height in a list of Aspose.Gis.Raster.Web.WebTile.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder.CalculateMapSizesOnRasters(System.Collections.Generic.List{Aspose.Gis.GeoTools.LayersMap.MapRasterOptions})">
            <summary>
            Finds the maximum and minimum coordinates in a list of Aspose.Gis.GeoTools.LayersMap.MapRasterOptions.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder.LoadLayersUseTils(System.Collections.Generic.List{Aspose.Gis.Raster.Web.WebTile})">
            <summary>
            Loads web tiles into raster layers.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder.CalculateMaxDataExtent(Aspose.Gis.GeoTools.LayersMap.MapLayerOptions[],Aspose.Gis.GeoTools.LayersMap.MapRasterOptions[])">
            <summary>
            creates an extent of the maximum and minimum coordinates from a list of Aspose.Gis.GeoTools.LayersMap.MapRasterOptions.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LayersMap.MapLayerOptions">
            <summary>
            Vector Layer Options for creating maps using <see cref="T:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder"/>
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapLayerOptions.Layer">
            <summary> Vector layer. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapLayerOptions.Symbolyzer">
            <summary> Vector symbolyzer. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapLayerOptions.Labeling">
            <summary> Labeling of the features. Defaults to null. </summary>
        </member>
        <member name="F:Aspose.Gis.GeoTools.LayersMap.MapLayerOptions.LayerSpatialRefSys">
            <summary> Specifies a value for a layer spatial reference. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LayersMap.MapOptions">
            <summary>
            Map Options for creating maps using <see cref="T:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder"/>
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Layers">
            <summary> A collection of options for vector layers to represent by Aspose.Gis.GeoTools.LayersMap.MapLayerOptions. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Rasters">
            <summary> A collection of options for rasters layers to represent by Aspose.Gis.GeoTools.LayersMap.MapRasterOptions. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Tiles">
            <summary> Tiles options. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.SizeMode">
            <summary> Size Mode. Defaults to <see cref="F:Aspose.Gis.GeoTools.LayersMap.MapSizeModes.Auto"/> </summary>
        </member>
        <member name="F:Aspose.Gis.GeoTools.LayersMap.MapOptions.SpatialReference">
            <summary> Spatial Reference. Defaults to Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.WebMercator. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Width">
            <summary> Visual width of the map. Defaults to 400. Used when <see cref="F:Aspose.Gis.GeoTools.LayersMap.MapSizeModes.Custom"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Height">
            <summary> Visual height of the map. Defaults to 400. Used when <see cref="F:Aspose.Gis.GeoTools.LayersMap.MapSizeModes.Custom"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.BackgroundColor">
            <summary> Background color of the map. Defaults to System.Drawing.Color.Transparent. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Renderer">
            <summary> Renderer to use. Defaults to Aspose.Gis.Rendering.Renders.Jpeg. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LayersMap.MapRasterOptions">
            <summary>
            Raster layer options for creating maps using <see cref="T:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder"/>
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapRasterOptions.Raster">
            <summary> Raster layer. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapRasterOptions.PixelPerRow">
            <summary> Height of the raster in pixels. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapRasterOptions.PixelPerColumn">
            <summary> Width of the raster in pixels. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapRasterOptions.LayerSpatialRefSys">
            <summary> Specifies a value for a layer spatial reference. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LayersMap.MapSizeModes">
            <summary>
            Map size modes for <see cref="T:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder"/>.
            </summary>
        </member>
        <member name="F:Aspose.Gis.GeoTools.LayersMap.MapSizeModes.None">
            <summary> Unknown Size Mode. </summary>
        </member>
        <member name="F:Aspose.Gis.GeoTools.LayersMap.MapSizeModes.Auto">
            <summary> Auto map sizes. </summary>
        </member>
        <member name="F:Aspose.Gis.GeoTools.LayersMap.MapSizeModes.Custom">
            <summary> Use sizes from options <see cref="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Width"/> and <see cref="P:Aspose.Gis.GeoTools.LayersMap.MapOptions.Height"/>. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LayersMap.MapTilesOptions">
            <summary>
            Tiles options for creating maps using <see cref="T:Aspose.Gis.GeoTools.LayersMap.LayersMapBuilder"/>
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapTilesOptions.Url">
            <summary> Url or Path to a file. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LayersMap.MapTilesOptions.Level">
            <summary> The zoom level for loading tiles. Defaults to 3. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LayersMap.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.GeoTools.LayersMap</c> namespace contains classes that represent geo tools LayersMap.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.LineGeneratorOptions">
            <summary>
            Options from produce lines on surface or area.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LineGeneratorOptions.Count">
            <summary>
            Number of lines to create.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LineGeneratorOptions.Seed">
            <summary>
            A number used to calculate the seed value for a sequence of pseudo-random numbers.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.LineGeneratorOptions.Place">
            <summary>
            Placing mode in generated cells.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LineGeneratorOptions.#ctor">
            <summary>
            Create an instance with init fields by default.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LineGeneratorOptions.Clone">
            <summary>
            Clone object to one another.
            </summary>
            <returns>Clone object to one another <see cref="T:Aspose.Gis.GeoTools.LineGeneratorOptions"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.LineGeneratorOptions.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions">
            <summary>
            Options from produce geometries on surface or area.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions.Width">
            <summary> Width of the map (columns count). </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions.Height">
            <summary> Height of the map  (rows count). </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions.#ctor">
            <summary>
            Create an instance using default options.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions.Clone">
            <summary>
            Clone object to one another.
            </summary>
            <returns>Clone object to one another <see cref="T:Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions"/>.</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.MapBuilder.MapLayersGenerator">
            <summary>
            Map layers generator
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.MapBuilder.MapLayersGenerator.GetListOfLayers(Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions)">
            <summary>
            Get list of layers: roadLayer, buildingLayer, parkLayer, parkRoadLayer, industrialLayer.
            </summary>
            <param name="options"> Map generator options. </param>
            <returns> The list of layers with generated geometry. </returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.MapBuilder.MapLayersGenerator.ProduceMap(Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions)">
            <summary>
            Produce map.
            </summary>
            <param name="options"> Map generator options. </param>
            <returns> The completed map. </returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.MapBuilder.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.GeoTools</c> namespace contains classes that represent geo tools.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedGeometry">
            <summary>
            This class wraps a regular geometry in a clustering algorithm.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedGeometry.GeometryNumber">
            <summary> The geometry number from an input array. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedGeometry.Geometry">
            <summary> The geometry from an input array. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedGeometry.IsOnlyBorder">
            <summary>Is only border geometry. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedGeometry.CellType">
            <summary>Type of the cells for geometry. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedMesh">
            <summary>
            This class allows us to split the generated objects by cells to optimize searching for these.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedMesh.#ctor">
            <summary> Create an instance of <see cref="T:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedMesh"/> </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedMesh.Geometries">
            <summary> All geometries from the net. </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedMesh.AddToCells(Aspose.Gis.GeoTools.MapBuilder.Net.GeneratedGeometry,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Searches for a cell for the specified point, and then adds that point to the net.  </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.MapBuilder.Net.MeshGeneratedCellCallback">
            <summary> Represents a delegate, which provides access to geometry in the cells reading. </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.MapBuilder.Net.MapGenerator.Generate(Aspose.Gis.GeoTools.MapBuilder.MapGeneratorOptions)">
            <summary> Generate geometries on surface or area </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.GeoTools</c> namespace contains classes that represent geo tools.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.NearPointsCleanerOptions">
            <summary>
            Options for deleting points that are too close to each other.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.NearPointsCleanerOptions.#ctor">
            <summary>
             Create an instance with init fields by default.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.NearPointsCleanerOptions.#ctor(Aspose.Gis.GeoTools.NearPointsCleanerOptions)">
            <summary>
            Create copy of instance <see cref="T:Aspose.Gis.GeoTools.NearPointsCleanerOptions"/>.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.NearPointsCleanerOptions.Clone">
            <summary>
            Create copy of object.
            </summary>
            <returns>The options clone.</returns>
        </member>
        <member name="P:Aspose.Gis.GeoTools.NearPointsCleanerOptions.Distance">
            <summary>
            Parameter for check is point near to another point. Default value is 0.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.PointGeneratorOptions">
            <summary>
            Options from produce points on surface or area.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PointGeneratorOptions.Count">
            <summary>
            Number of points to create.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PointGeneratorOptions.Seed">
            <summary>
            A number used to calculate the seed value for a sequence of pseudo-random numbers.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PointGeneratorOptions.Place">
            <summary>
            Placing mode in generated cells.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.PointGeneratorOptions.#ctor">
            <summary>
            Create an instance using default options.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.PointGeneratorOptions.Clone">
            <summary>
            Clone object to one another.
            </summary>
            <returns>Clone object to one another <see cref="T:Aspose.Gis.GeoTools.PointGeneratorOptions"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.PointGeneratorOptions.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.PolygonGeneratorOptions">
            <summary>
            Options from produce lines on surface or area.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PolygonGeneratorOptions.Count">
            <summary>
            Number of polygons to create.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PolygonGeneratorOptions.MinimumPolygonPoints">
            <summary>
            The minimum length of the generated polygon.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PolygonGeneratorOptions.MaximumPolygonPoints">
            <summary>
            The maximum length of the generated polygon.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PolygonGeneratorOptions.Seed">
            <summary>
            A number used to calculate the seed value for a sequence of pseudo-random numbers.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.PolygonGeneratorOptions.Place">
            <summary>
            Placing mode in generated cells.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.PolygonGeneratorOptions.#ctor">
            <summary>
            Create an instance with init fields by default.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.PolygonGeneratorOptions.Clone">
            <summary>
            Clone object to one another.
            </summary>
            <returns>Clone object to one another <see cref="T:Aspose.Gis.GeoTools.PolygonGeneratorOptions"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.PolygonGeneratorOptions.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.SimplifySegmentsOptions">
            <summary>
            Options for <see cref="M:Aspose.Gis.GeoTools.GeometryOperations.SimplifySegments(Aspose.Gis.Geometries.IGeometry,Aspose.Gis.GeoTools.SimplifySegmentsOptions)"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.SimplifySegmentsOptions.#ctor">
            <summary>
            Create an instance with init fields by default.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.SimplifySegmentsOptions.#ctor(Aspose.Gis.GeoTools.SimplifySegmentsOptions)">
            <summary>
            Create copy of instance <see cref="T:Aspose.Gis.GeoTools.SimplifySegmentsOptions"/>.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.SimplifySegmentsOptions.Clone">
            <summary>
            Create copy of object.
            </summary>
            <returns>The options clone.</returns>
        </member>
        <member name="P:Aspose.Gis.GeoTools.SimplifySegmentsOptions.Distance">
            <summary>
            Parameter for check is point near to line segment. Default value is 0.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.StarGeneratorOptions">
            <summary>
            Generator-specific options for <see cref="M:Aspose.Gis.GeoTools.GeoGenerator.ProducePolygons(Aspose.Gis.Extent,Aspose.Gis.GeoTools.PolygonGeneratorOptions)"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.StarGeneratorOptions.Count">
            <summary>
            Number of polygons to create.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.StarGeneratorOptions.MinimumStarVertex">
            <summary>
            The minimum outside vertex of the generated side.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.StarGeneratorOptions.MaximumStarVertex">
            <summary>
            The maximum outside vertex of the generated side.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.StarGeneratorOptions.Seed">
            <summary>
            A number used to calculate the seed value for a sequence of pseudo-random numbers.
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.StarGeneratorOptions.Place">
            <summary>
            Placing mode in generated cells.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.StarGeneratorOptions.#ctor">
            <summary>
            Create an instance with init fields by default.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.StarGeneratorOptions.Clone">
            <summary>
            Clone object to one another.
            </summary>
            <returns>Clone object to one another <see cref="T:Aspose.Gis.GeoTools.PolygonGeneratorOptions"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.GeoTools.StarGeneratorOptions.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.MeshCell.NodeKey">
            <summary> The key from an input array. </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.MeshCell.TimeFromStart">
            <summary> Time from start to current cell. </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.WayAnalyzer.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.GeoTools.WayAnalyzer</c> namespace contains classes that represent geo tools.
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.WayAnalyzer.RoadNetMesh">
            <summary>
            This class allows us to split the generated objects by cells to optimize searching for these.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.RoadNetMesh.#ctor(System.Int32)">
            <summary> Create an instance of <see cref="T:Aspose.Gis.GeoTools.WayAnalyzer.RoadNetMesh"/> </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.WayGenerator.PavingTheWay(Aspose.Gis.GeoTools.WayAnalyzer.RoadNetMesh,Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions)">
            <summary>
            Paving the way from start point to goal
            </summary>
        </member>
        <member name="T:Aspose.Gis.GeoTools.WayAnalyzer.WayLayerGenerator">
            <summary>
            Way layers generator
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.WayLayerGenerator.#ctor(Aspose.Gis.GeoTools.WayAnalyzer.WayOptions)">
            <summary> Create an instance of <see cref="T:Aspose.Gis.GeoTools.WayAnalyzer.WayLayerGenerator"/> </summary>
            <param name="options">the options of generator.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.WayLayerGenerator.AddRoad(Aspose.Gis.Geometries.Point,Aspose.Gis.Geometries.Point,System.Double)">
            <summary>
            Add road to the cell
            </summary>
            <param name="startPoint">the start point.</param>
            <param name="endPoint">the end point.</param>
            <param name="velocity">the velocity.</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.WayLayerGenerator.AddBlock(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Add block to the cell
            </summary>
            <param name="x">the x of block</param>
            <param name="y">the y of block</param>
            <param name="sizeX">the sizeX of block</param>
            <param name="sizeY">the sizeY of block</param>
            <param name="velocity">the velocity of block</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.WayLayerGenerator.FindTheWay(Aspose.Gis.Geometries.Point,Aspose.Gis.Geometries.Point,System.Double)">
            <summary>
            Find the way from start point to goal
            </summary>
            <param name="startPoint">the start Point</param>
            <param name="goalPoint">the goa lPoint</param>
            <param name="radius">the radius to look for</param>
            <returns>The Found Way.</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions">
            <summary>
            Options to find a way on the map
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.StartPoint">
            <summary> 
            Start point of the way
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.GoalPoint">
            <summary>
            Goal point of the way
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.Scale">
            <summary>
            Scale of the map
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.Radius">
            <summary>
            Radius for search
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.IsMoveOnlyRoad">
            <summary>
            Find the way only by road 
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.IsScaleFixed">
            <summary> 
            Is scale constant
            </summary>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.#ctor(System.Int32)">
            <summary>
            Create an instance using default options.
            </summary>
            <param name="scale">the scale constant</param>
        </member>
        <member name="M:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions.Clone">
            <summary>
            Clone object to one another.
            </summary>
            <returns>Clone object to one another <see cref="T:Aspose.Gis.GeoTools.WayAnalyzer.WayOptions"/>.</returns>
        </member>
        <member name="T:Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions">
            <summary>
            Options to find a way on the map
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions.StartPoint">
            <summary> 
            Start point of the way
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions.GoalPoint">
            <summary>
            Goal point of the way
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions.Scale">
            <summary>
            Scale of the map
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions.Radius">
            <summary>
            Radius for search
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions.IsMoveOnlyRoad">
            <summary>
            Find the way only by road 
            </summary>
        </member>
        <member name="P:Aspose.Gis.GeoTools.WayAnalyzer.WayResolvedOptions.IsScaleFixed">
            <summary> 
            Is scale constant
            </summary>
        </member>
        <member name="T:Aspose.Gis.GisException">
            <summary>
            The exception that is thrown when an error occurs during GIS data processing.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GisException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.GisException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Aspose.Gis.GisException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Aspose.Gis.GisException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.GisException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <see langword="null" />. </exception>
        </member>
        <member name="T:Aspose.Gis.IAttributesConverter">
            <summary>
            A custom converter for layer attributes.
            </summary>
        </member>
        <member name="M:Aspose.Gis.IAttributesConverter.ModifyAttribute(Aspose.Gis.FeatureAttribute,Aspose.Gis.AttributesConverterActions)">
            <summary>
            Adjusts a <see cref="T:Aspose.Gis.FeatureAttribute" /> as necessary for the target layer.
            </summary>
            <param name="attribute">A copy of an attribute of the source layer.</param>
            <param name="actions">
            Specifies optional actions with attributes of the destination layer.
            For example, allows us to exclude our attribute.
            </param>
        </member>
        <member name="T:Aspose.Gis.IFeatureStyle">
            <summary> The interface root class of the feature styles hierarchy. </summary>
        </member>
        <member name="T:Aspose.Gis.ImageMetadata.GeoLocation">
            <summary>
            The class representing a geographic location
            </summary>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.GeoLocation.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.GeoLocation.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="T:Aspose.Gis.ImageMetadata.ImageData">
            <summary>
            Class containing all extracted supported EXIF tags
            </summary>
            <remarks>
            If the data is not represented in the file, the property is set to the default value.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.ImageData.Artist">
            <summary>
            EXIF tag Artist
            </summary>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.ImageData.Description">
            <summary>
            EXIF tag ImageDescription
            </summary>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.ImageData.ModifyDate">
            <summary>
            EXIF tag ModifyDate (DataTime)
            </summary>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.ImageData.ImageSize">
            <summary>
            EXIF tags tags ImageWidth and ImageHeight
            </summary>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.ImageData.GeoLocation">
            <summary>
            EXIF tags tags GPSLatitude, GPSLongitude
            </summary>
        </member>
        <member name="T:Aspose.Gis.ImageMetadata.ImageFormat">
            <summary>
            Specifies the file format of the image.
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.MemoryBmp">
            <summary>
            MemoryBmp image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Bmp">
            <summary>
            Bmp image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Emf">
            <summary>
            Emf image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Wmf">
            <summary>
            Wmf image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Gif">
            <summary>
            Gif image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Jpeg">
            <summary>
            Jpeg image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Png">
            <summary>
            Png image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Tiff">
            <summary>
            Tiff image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Exif">
            <summary>
            Exif image format
            </summary>
        </member>
        <member name="F:Aspose.Gis.ImageMetadata.ImageFormat.Icon">
            <summary>
            Icon image format
            </summary>
        </member>
        <member name="T:Aspose.Gis.ImageMetadata.ImageMetadataReader">
            <summary>
            Class for editing, adding some EXIF tags
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.Finalize">
            <summary>
            Ensures that unmanaged resources are released before garbage collection
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.TryGetArtist(System.String@)">
            <summary>
            It tries to find EXIF tag Artist, if the tag is not found it returns null
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.SetArtist(System.String)">
            <summary>
            Saving the EXIF Artist tag, adding or overwriting the data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.TryGetDescription(System.String@)">
            <summary>
            It tries to find EXIF tag ImageDescription, if the tag is not found it returns null
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.SetDescription(System.String)">
            <summary>
            Saving the EXIF ImageDescription tag, adding or overwriting the data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.TryGetModifyDate(System.DateTime@)">
            <summary>
            It tries to find EXIF tag ModifyDate (DataTime), if the tag is not found it returns default DataTime value
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.SetModifyDate(System.DateTime)">
            <summary>
            Saving the EXIF ModifyDate (DataTime) tag, adding or overwriting the data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.TryGetImageSize(Aspose.Gis.ImageMetadata.ImageSize@)">
            <summary>
            It tries to find EXIF set of tags ImageWidth and ImageHeight, if the tags does not presented it returns null
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.SetImageSize(System.Int32,System.Int32)">
            <summary>
            Saving the EXIF ImageWidth and ImageHeight tags, adding or overwriting the data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.TryGetGeoLocation(Aspose.Gis.ImageMetadata.GeoLocation@)">
            <summary>
            It tries to find EXIF set of tags GPSLatitudeRef, GPSLongitudeRef, GPSLatitude, GPSLongitude, if the tags does not presented it returns null
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.SetGeoLocation(System.Double,System.Double)">
            <summary>
            Saving the EXIF GPSLatitudeRef, GPSLongitudeRef, GPSLatitude and GPSLongitude tags, adding or overwriting the data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.ReadData">
            <summary>
            Extracts all supported EXIF tags 
            </summary>
            <returns>ImageData that represented set of supported tags</returns>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.Save(System.String)">
            <summary>
            Save to new file since the original one is locked for changes
            </summary>
            <param name="fileName">Full name of the destination file</param>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.Save(System.String,Aspose.Gis.ImageMetadata.ImageFormat)">
            <summary>
            Save to new file since the original one is locked for changes
            </summary>
            <param name="fileName">Full name of the destination file</param>
            <param name="format">Specifies the format for saving</param>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.Save(System.IO.Stream)">
            <summary>
            Saving changes to a separate stream
            </summary>
            <param name="stream">Destination stream</param>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.Save(System.IO.Stream,Aspose.Gis.ImageMetadata.ImageFormat)">
            <summary>
            Saving changes to a separate stream
            </summary>
            <param name="stream">Destination stream</param>
            <param name="format">Specifies the format for saving</param>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.Dispose">
            <summary>
            Public implementation of Dispose pattern callable by consumers.
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern.
            </summary>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.GetReader(System.String)">
            <summary>
            Creates a reader instance for EXIF tags
            </summary>
            <param name="fileName">Full name of the image file.</param>
            <returns>Metadata reader instance</returns>
            <remarks>
            The image file will be locked for changes until the reader's Dispose is executed.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.ImageMetadata.ImageMetadataReader.GetReader(System.IO.Stream)">
            <summary>
            Creates a reader instance for EXIF tags
            </summary>
            <param name="stream">Image data source stream</param>
            <returns>Metadata reader instance</returns>
            <remarks>
            It is important not to close the source stream until the reader's Dispose is executed.
            </remarks>
        </member>
        <member name="T:Aspose.Gis.ImageMetadata.ImageSize">
            <summary>
            The class representing image size
            </summary>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.ImageSize.Width">
            <summary>
            Width
            </summary>
            <remarks>
            Real stored value in ushort data type
            </remarks>
        </member>
        <member name="P:Aspose.Gis.ImageMetadata.ImageSize.Height">
            <summary>
            Height
            </summary>
            <remarks>
            Real stored value in ushort data type
            </remarks>
        </member>
        <member name="T:Aspose.Gis.EvaluationRestrictions">
            <summary>
            Keeps track of evaluation limits.
            </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictions.ReportDocument">
            <summary> Call this when the user opens a document. </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictions.ResetReports(System.Object)">
            <summary> Call this when we use a venture licence. </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictions.ReportUsedSpace(System.Int64,System.Int64)">
            <summary> Call this to count the total size when the user open or save documents. </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictions.NeedReportUsedSpace">
            <summary> Call this to count the total size when the user open or save documents. </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictions.TranslateUsedSpaceToCredits(System.Int64)">
            <summary> Calculate amount credits for used space. </summary>
        </member>
        <member name="T:Aspose.Gis.EvaluationRestrictionsInternal.DocumentEvaluationRestrictions">
            <summary>
            Implementation of document-level restrictions.
            </summary>
        </member>
        <member name="F:Aspose.Gis.EvaluationRestrictionsInternal.DocumentEvaluationRestrictions.DocumentsInHour">
            <summary>
            Evaluation limit for documents in an hour.
            </summary>
        </member>
        <member name="F:Aspose.Gis.EvaluationRestrictionsInternal.DocumentEvaluationRestrictions.Documents">
            <summary>
            Time (tick count) of recent document instantiations.
            </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictionsInternal.DocumentEvaluationRestrictions.ReportDocumentImpl">
            <summary>
            Implementation detail.
            Use <see cref="M:Aspose.Gis.EvaluationRestrictions.ReportDocument" /> instead.
            </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictionsInternal.DocumentEvaluationRestrictions.ResetReportsImpl(System.Object)">
            <summary>
            Implementation detail.
            Use <see cref="M:Aspose.Gis.EvaluationRestrictions.ReportDocument" /> instead.
            </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictionsInternal.DocumentMeteredReporter.NeedReportUsedSpaceImpl">
            <summary>
            Implementation detail.
            Use <see cref="M:Aspose.Gis.EvaluationRestrictions.ReportUsedSpace(System.Int64,System.Int64)" /> instead.
            </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictionsInternal.DocumentMeteredReporter.ReportUsedSpaceImpl(System.Int64,System.Int64)">
            <summary>
            Implementation detail.
            Use <see cref="M:Aspose.Gis.EvaluationRestrictions.ReportUsedSpace(System.Int64,System.Int64)" /> instead.
            </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictionsInternal.DocumentMeteredReporter.UpdateInMemoryObserver(System.Action{System.Int64,System.Int64})">
            <summary> Setup reserved observer (for test purposes). </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictionsInternal.DocumentMeteredReporter.ReportToServer(System.Int64,System.Int64)">
            <summary> Regular callback to send data to server. </summary>
        </member>
        <member name="M:Aspose.Gis.EvaluationRestrictionsInternal.DocumentMeteredReporter.ReportInMemory(System.Int64,System.Int64)">
            <summary> Used to test. </summary>
        </member>
        <member name="F:Aspose.Gis.EvaluationRestrictionsInternal.LicenseInfo.LicenseOk">
            <summary>
            A flag that indicates that a valid license was set. Use carefully.
            </summary>
        </member>
        <member name="T:Aspose.Gis.LayerEvaluationRestrictions">
            <summary>
            Keeps track of evaluation limits within one layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.ReportFeature">
            <summary>
            Report that feature is accessed. Call this when users reads or writes a feature.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.ReportRasterData">
            <summary>
            Report that raster pixel is accessed. Call this when users reads or writes a raster pixel.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.ResetReports(System.Object)">
            <summary>
            Reset reports if need.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.ThrowFeaturesExceeded">
            <summary>
            Throws an exception that indicates that features-per-document limit has been exceeded.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.ThrowRasterDataExceeded">
            <summary>
            Throws an exception that indicates that data-per-document limit has been exceeded.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LayerEvaluationRestrictions.FeaturesPerDocument">
            <summary>
            Evaluation limit for features that can be accessed in a single document.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LayerEvaluationRestrictions.RasterDataPerDocument">
            <summary>
            Evaluation limit for features that can be accessed in a single document.
            </summary>
        </member>
        <member name="T:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter">
            <summary>
            Counts increments toward a preset number.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter.IncrementsCount">
            <summary>
            Number of calls to <see cref="M:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter.Increment" /> before it returns <see langword="true" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter.Increment">
            <summary>
            Adds an increment toward the <see cref="F:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter.IncrementsCount" />.
            </summary>
            <returns><see langword="true" /> if increments count has been reached; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter.IsElapsed">
            <summary>
            Determines whether increments have reached the <see cref="F:Aspose.Gis.LayerEvaluationRestrictions.DelayCounter.IncrementsCount" />.
            </summary>
            <returns><see langword="true" /> if increments count has been reached; otherwise <see langword="false" />.</returns>
        </member>
        <member name="T:Aspose.Gis.LicenseState">
            <summary>
            Represents possible license states.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LicenseState.Evaluation">
            <summary>
            The license is Evaluation
            </summary>
        </member>
        <member name="F:Aspose.Gis.LicenseState.Licensed">
            <summary>
            The license is a proper valid license.
            </summary>
        </member>
        <member name="T:Aspose.Gis.License">
            <summary>
            Provides methods to license the component.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            </example>
        </member>
        <member name="M:Aspose.Gis.License.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            </example>
        </member>
        <member name="M:Aspose.Gis.License.SetLicense(System.String)">
            <summary>
            Licenses the component.
            </summary>
            <remarks>
            <p>Tries to find the license in the following locations:</p>
            <p>1. Explicit path.</p>
            
            <ms>
            <p>2. The folder that contains the Aspose component assembly.</p>
            <p>3. The folder that contains the client's calling assembly.</p>
            <p>4. The folder that contains the entry (startup) assembly.</p>
            <p>5. An embedded resource in the client's calling assembly.</p>
            
            <p><b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
            <p>1. Explicit path.</p>
            <p>2. An embedded resource in the client's calling assembly.</p>
            </ms>
            
            <java>
            <p>2. The folder that contains the Aspose component JAR file.</p>
            <p>3. The folder that contains the client's calling JAR file.</p>
            </java>
            </remarks>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            <param name="licenseName">Can be a full or short file name<ms> or name of an embedded resource</ms>.
            Use an empty string to switch to evaluation mode.</param>
            </example>
        </member>
        <member name="M:Aspose.Gis.License.SetLicense(System.IO.Stream)">
            <summary>
            Licenses the component.
            </summary>
            <param name="stream">A stream that contains the license.</param>
            <remarks>
            <p>Use this method to load a license from a stream.</p>
            </remarks>
            <example>
            <code>
            <ms>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </ms>
            <java>
            License license = new License();
            license.setLicense(myStream);
            </java>
            </code>
            </example>
            <javaName>void setLicense(java.io.InputStream stream)</javaName>
        </member>
        <member name="T:Aspose.Gis.LicenseCore">
            <summary>
            The actual code of the license class is put into an internal class and made into long functions to 
            make it harder for the crackers to find anything meaningful after the dlls were cracked in November 2005.
            The obfuscation virtualization is also applied using custom attribute.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.GetLicenseState_ForInternalUse">
            <summary>
            Call this from your component code to check if running evaluation version or not.
            </summary>
            <example>
            <code>
               if (Aspose.Words.LicenseCore.GetLicenseState_ForInternalUse() == LicenseState.Evaluation)
                   InjectWatermark();
               </code>
            </example>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.GetLicenseState_ForPublicUse">
            <summary>
            This method has to be exactly the same as <see cref="M:Aspose.Gis.LicenseCore.GetLicenseState_ForInternalUse"/>.
            It is created (and duplicated) to make hacking of Aspose licensing a little more difficult.
            The hacker can easily find this method and attempt to circumvent it, but it will not 
            affect the real decision about watermark injection because it is made in 
            <see cref="M:Aspose.Gis.LicenseCore.GetLicenseState_ForInternalUse"/>.
            
            The issue was discussed and a solution proposed in
            https://asposeproductleads.wordpress.com/2015/08/20/license-islicensed-a-potential-security-leak/#comment-22
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.LoadLicense(System.IO.Stream)">
            <summary>
            Loads license and check signature.
            </summary>
            <param name="stream"></param>
            <returns><c>true></c> if license signature is correct; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.MapOldProductName(System.String)">
            <summary>
            In January 2006 product names such as Aspose Word, Aspose Excel etc had to be changed. 
            This function maps these product names so old licenses can be used in new products.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.VerifySignature(System.String,System.String)">
            <summary>
            Checks signarure.
            </summary>
            <param name="dataString"></param>
            <param name="signatureString"></param>
            <returns><c>true></c> if license signature is correct; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.VerifySignature(System.String,System.String,System.String)">
            <summary>
            Verifies that content of the data element has not been tampered with. Safe to pass nulls.
            
            Note there is no direct action taken inside this method if the signature is invalid.
            If the signature is invalid, the VerificationSupervisor.SignatureInvalidFlag is set to greater 
            than zero and you need to examine it somewhere later in your code. This is to confuse hackers.
            </summary>
            <returns><c>true></c> if license signature is correct; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.VerifySignature(System.Byte[],System.Byte[],System.String)">
            <summary>
            Verifies signature for a specified byte array.
            </summary>
            <returns><c>true></c> if license signature is correct; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.ProbeLicense(System.String,System.Reflection.Assembly)">
            <summary>
            Tries to find the license in several locations:
            1. Explicit path.
            2. The folder of this assembly.
            3. The folder of the client's calling assembly.
            4. The folder of the entry assembly (does not apply for the .NET Compact Framework).
            5. An embedded resource in the client's calling assembly.
            </summary>
            <param name="licenseName">This can be full or short file name or name of an embedded resource.</param>
            <param name="callingAssembly">Client's calling assembly. Used to find license in embedded resource.</param>
            <returns>Returns a stream that contains the license or throws.</returns>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.GetAssemblyPath(System.Reflection.Assembly)">
            <summary>
            Returns assembly path correctly even if the assembly is shadow-copied.
            Uses CodeBase instead of Location for that.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.GetResourceByPartialName(System.Reflection.Assembly,System.String)">
            <summary>
               The resource names can get prefixed with customer's namespace, so I do a partial name search.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.LoadBlackList(System.String,System.String)">
            <summary>
            Loads and verifies black list from the specified resource, which must be present.
            </summary>
            <remarks>
            For a moment we have following resources with blacklisted licenses:
            - Aspose.License.BlackList.Real.xml
            - Conholdate.License.BlackList.Real.xml
            </remarks>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.GetProducts(System.String)">
            <summary>
            Gets list of license products.
            </summary>
        </member>
        <member name="M:Aspose.Gis.LicenseCore.HasConholdateProduct(System.String)">
            <summary>
            Returns true, if license contains products with Conholdate string.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LicenseCore.gAsposeBlackListCache">
            <summary>
            The key is a string blacklisted license serial number. The value is null.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LicenseCore.gConholdateBlackListCache">
            <summary>
            The key is a string blacklisted license serial number. The value is null.
            </summary>
        </member>
        <member name="T:Aspose.Gis.LicenseCore.ProductNameMapping">
            <summary>
            Maps old product name into new.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LicenseCore.AsposeDot">
            <summary>
            Used in the product mapping to build full product name.
            This is to avoid other developers accidentally damaging this code when doing global rename.
            </summary>
        </member>
        <member name="F:Aspose.Gis.LicenseCore.gProductNameMap">
            <summary>
            Maps old product names into new.
            </summary>
        </member>
        <member name="T:Aspose.Gis.MeteredState">
            <summary>
            Represents possible metered states.
            </summary>
        </member>
        <member name="F:Aspose.Gis.MeteredState.Evaluation">
            <summary>
            The metered is evaluation
            </summary>
        </member>
        <member name="F:Aspose.Gis.MeteredState.Paid">
            <summary>
            The metered is a paid customer.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Metered">
            <summary>
            Provides methods to set metered key.
            </summary>
            <example>
            In this example, an attempt will be made to set metered public and private key
            
            <ms>
            <code>
            [C#]
            
            Metered.SetMeteredKey("PublicKey", "PrivateKey");
            
            
            [Visual Basic]
            
            Metered.SetMeteredKey("PublicKey", "PrivateKey")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            Metered.setMeteredKey("PublicKey", "PrivateKey");
            </code>
            </java>
            
            </example>
        </member>
        <member name="M:Aspose.Gis.Metered.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Metered.SetMeteredKey(System.String,System.String)">
            <summary>
            Sets metered public and private key
            </summary>
            <param name="publicKey">public key</param>
            <param name="privateKey">private key</param>
        </member>
        <member name="M:Aspose.Gis.Metered.GetConsumptionQuantity">
            <summary>
            Gets consumption file size
            </summary>
            <returns>consumption quantity</returns>
        </member>
        <member name="M:Aspose.Gis.Metered.ResetMeteredKey">
            <summary>
            Removes previously setup license
            </summary>
        </member>
        <member name="M:Aspose.Gis.Metered.GetConsumptionCredit">
            <summary>
            Gets consumption credit
            </summary>
            <returns>consumption quantity</returns>
        </member>
        <member name="T:Aspose.Gis.Metered.MeteredHidden">
            <summary>
            Used for getting information about metered state.
            For internal usage only. Do not make this class public in your assembly and make sure it is obfuscated.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredHidden.IsEvaluation">
            <summary>
            Gets evaluation status
            </summary>
            <returns>Determines whether product is under evaluation or not</returns>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredHidden.IncreaseCount(System.Double)">
            <summary>
            Increases data counter for absolute value
            </summary>
            <param name="uploadMeteringSize">number of bytes to increase</param>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredHidden.ResetMeteredKey">
            <summary>
            Resets the metered key. Useful for unit tests.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Metered.MeteredCountService">
            <summary>
            This internal class is used to handle customer's consumption data, the unit is MB.
            </summary>
            <example>
            In this example, an attempt will be made to increase of 9MB on customer consumption data.
            
            <ms>
            <code>
            [C#]
            
            MeteredCountService.Instance.IncreaseCount(9);
            
            </code>
            </ms>
            </example>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredCountService.IncreaseCount(System.Double)">
            <summary>
            Increase customer consumption file size, and try to upload data
            </summary>
            <param name="count">increased quantities, in unit of MB</param>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredCountService.IncreaseCredit(System.Int64)">
            <summary>
            Increase customer consumption credit, and try to upload
            </summary>
            <param name="credit">increased credit</param>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredCountService.IncreaseCredit(System.Int64,System.Boolean)">
            <summary>
            Increase customer consumption credit
            </summary>
            <param name="credit">increased credit</param>
            <param name="isSend">whether upload data</param>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredCountService.IncreaseCount(System.Decimal,System.Boolean)">
            <summary>
            Increase customer consumption file size
            </summary>
            <param name="count">increased file quantities, in unit of MB</param>
            <param name="isSend">whether upload data</param>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredCountService.GetAndResetCount">
            <summary>
            Gets and Resets customer consumption file size
            </summary>
            <returns>quantities of customer consumption data</returns>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredCountService.GetAndResetCredit">
            <summary>
            Get and Reset customer consumption credit
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspose.Gis.Metered.MeteredBillingService">
            <summary>
            This internal class is used to handle customer's matered state
            </summary>
            <example>
            In this example, an attempt will be check customer's matered state.
            
            <ms>
            <code>
            [C#]
            
            MeteredState materedState = MeteredBillingService.GetMeteredState();
            
            </code>
            </ms>
            </example>
        </member>
        <member name="P:Aspose.Gis.Metered.MeteredBillingService.Instance">
            <summary>
            Singleton pattern
            </summary>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredBillingService.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredBillingService.Setkey(System.String,System.String)">
            <summary>
            Sets the subscription public and private key
            </summary>
            <param name="subscriptionPublicKey">subscription public key</param>
            <param name="subscriptionPrivateKey">subscription private key</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredBillingService.GetMeteredState">
            <summary>
            Gets metered state
            </summary>
            <returns>matered state</returns>
        </member>
        <member name="M:Aspose.Gis.Metered.MeteredBillingService.UploadCustomerData">
            <summary>
            Uploads customer consumption data
            </summary>
        </member>
        <member name="T:Aspose.Gis.VentureLicenser">
            <summary>
            The venture licenser. This is main class for licensing inside GroupDocs or any other ASPOSE Vendor.
            </summary>
        </member>
        <member name="F:Aspose.Gis.VentureLicenser.ArialFontEncoded">
            <summary>
            The arial font encoded. Note arial name encoded using key.
            </summary>
        </member>
        <member name="F:Aspose.Gis.VentureLicenser.Licenser">
            <summary>
            The global venture licenser
            </summary>
        </member>
        <member name="M:Aspose.Gis.VentureLicenser.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Aspose.Gis.VentureLicenser"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.VentureLicenser.LicenseImage(System.Object)">
            <summary>
            Applies the venture licensing status to the Aspose.Imaging.Image.
            </summary>
        </member>
        <member name="M:Aspose.Gis.VentureLicenser.SetVentureLicensed(System.Object,System.Boolean,System.String,System.Single,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Applies the venture licensing status to the Aspose.Imaging.Image or Aspose.Imaging.LoadOptions instance.
            </summary>
            <param name="objectToLicense">The object to license.</param>
            <param name="isLicensed">if set to <c>true</c> the <paramref name="objectToLicense"/> is licensed and no restrictions/watermarks applied.</param>
            <param name="evaluationWatermark">The evaluation watermark text.</param>
            <param name="evaluationFontSize">Size of the evaluation watermark font.</param>
            <param name="evaluationWatermarkWidth">Width of the evaluation watermark in pixels.</param>
            <param name="evaluationWatermarkHeight">Height of the evaluation watermark in pixels.</param>
            <param name="evaluationWatermarkFontName">Name of the evaluation watermark font. May be null if you do not want the default font to change.</param>
            <param name="alignment">The vertical alignment. For the sake of security this is integer parameter which is one of the System.Drawing.StringAlignment values.</param>
            <param name="lineAlignment">The line alignment. For the sake of security this is integer parameter which is one of the System.Drawing.StringAlignment values.</param>
        </member>
        <member name="T:Aspose.Gis.VirtualizationCounter">
            <summary>
            Represents helper for obfuscation virtualzation.
            </summary>
        </member>
        <member name="F:Aspose.Gis.VirtualizationCounter.ExcludeVirtualization">
            <summary>
            Set to true to exclude virtualization and false to enable strong virtualizaiton.
            </summary>
        </member>
        <member name="F:Aspose.Gis.VirtualizationCounter.ExcludeInlining">
            <summary>
            Set to true to exclude inlining and false to enable inlining.
            </summary>
        </member>
        <member name="F:Aspose.Gis.VirtualizationCounter.DefaultInstruction">
            <summary>
            The default instruction
            </summary>
        </member>
        <member name="F:Aspose.Gis.VirtualizationCounter.InlineInstruction">
            <summary>
            The inline instruction
            </summary>
        </member>
        <member name="F:Aspose.Gis.VirtualizationCounter.Instruction">
            <summary>
            The instruction
            </summary>
        </member>
        <member name="M:Aspose.Gis.VirtualizationCounter.GetStringHashCode(System.String)">
            <summary>
            Gets the correct string hash code (not dependant on platform and processor architecture).
            </summary>
            <param name="str">The string hash code.</param>
            <returns>The string hash code.</returns>
        </member>
        <member name="T:Aspose.Gis.NamespaceDoc">
            <summary>
            <c>Aspose.Gis</c> namespace provides classes for generating, converting, and modifying GIS data.
            </summary>
        </member>
        <member name="T:Aspose.Gis.NumericFormat">
            <summary>
            <see cref="T:Aspose.Gis.NumericFormat"/> are used to format common numeric types in text.
            </summary>
            <remarks>
            There are three types of <see cref="T:Aspose.Gis.NumericFormat"/>:
            <ul>
            <li>General - fixed-point or scientific notation. Some number of digits are significant. </li>
            <li>RoundTrip - fixed-point or scientific notation. Max of digits are significant. </li>
            <li>Flat - fixed-point notation. Some number of digits are significant. </li>
            </ul>
            A <see cref="T:Aspose.Gis.NumericFormat"/> can be set to <see cref="T:Aspose.Gis.Geometries.IGeometry"/> via <see cref="M:Aspose.Gis.Geometries.IGeometry.AsText"/>
            in order to specify the numeric format when translating geometry to its Well-Known Text (WKT) representation.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.NumericFormat.General(System.Int32)">
            <summary>
            Converts a number to the more compact of either fixed-point or scientific notation,
            depending on the type of the number and whether a precision specifier is present. Recommended to use.
            </summary>
            <remarks>
            Internally code is generating number strings for WKT via: coordinate.ToString("G", CultureInfo.InvariantCulture).
            </remarks>
            <param name="precision">
            The precision defines the maximum number of significant digits that can appear in the result string.
            If the precision is zero, the value "15" is used. The maximum available precision is "17".
            </param>
            <returns>The General Format Specifier.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Number of significant digits is less then 0 or more than 17.
            </exception>
        </member>
        <member name="P:Aspose.Gis.NumericFormat.RoundTrip">
            <summary>
            Converts and attempts to ensure that a numeric value that is converted to
            a string is parsed back into the same numeric value.
            </summary>
            <remarks>
            Internally code is generating number strings for WKT via: coordinate.ToString("R", CultureInfo.InvariantCulture) decision.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.NumericFormat.Flat(System.Int32)">
            <summary>
            Converts a number to a fixed-point text without a scientific notation.
            </summary>
            <remarks>
            Internally code is generating number strings for WKT via: coordinate.ToString("0.##..", CultureInfo.InvariantCulture) decision.
            </remarks>
            <param name="significantDigits"> Number of significant digits. The maximum available precision is "308" </param>
            <returns>The Rounding Precision Specifier.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Number of significant digits is less then 0 or more than 308.
            </exception>
        </member>
        <member name="M:Aspose.Gis.NumericFormat.ConvertToString(System.Double)">
            <summary> Convert coordinate a value to string. </summary>
        </member>
        <member name="M:Aspose.Gis.NumericFormat.#ctor">
            <summary> Create an instance. </summary>
        </member>
        <member name="T:Aspose.Gis.PointFormats">
            <summary>
            <see cref="T:Aspose.Gis.PointFormats"/> are used to convert coordinates in text.
            </summary>
        </member>
        <member name="F:Aspose.Gis.PointFormats.DecimalDegrees">
            <summary>
            Decimal Degrees (DD) format.
            </summary>
        </member>
        <member name="F:Aspose.Gis.PointFormats.DegreeMinutesSeconds">
            <summary>
            Degree Minutes Seconds (DMS) format.
            </summary>
        </member>
        <member name="F:Aspose.Gis.PointFormats.DegreeDecimalMinutes">
            <summary>
             Degree Decimal Minutes (DDM) format.
            </summary>
        </member>
        <member name="F:Aspose.Gis.PointFormats.GeoRef">
            <summary>
            World Geographic Reference System.
            </summary>
        </member>
        <member name="F:Aspose.Gis.PointFormats.Mgrs">
            <summary>
            Military Grid Reference System with WGS 84 datum.
            </summary>
        </member>
        <member name="F:Aspose.Gis.PointFormats.Usng">
            <summary>
            United States National Grid with WGS 84 datum.
            </summary>
        </member>
        <member name="T:Aspose.Gis.PrecisionModel">
            <summary>
            <see cref="T:Aspose.Gis.PrecisionModel"/> specifies a number of significant digits in a coordinate.
            </summary>
            <remarks>
            There are two types of PrecisionModel:
            <ul>
            <li>Exact <see cref="T:Aspose.Gis.PrecisionModel"/> (all digits are significant);</li>
            <li>Rounded <see cref="T:Aspose.Gis.PrecisionModel"/> (some number of digits are significant).</li>
            </ul>
            A <see cref="T:Aspose.Gis.PrecisionModel"/> can be set to <see cref="T:Aspose.Gis.VectorLayer"/> via <see cref="T:Aspose.Gis.DriverOptions"/>
            in order to round coordinates when writing or reading geometries.
            </remarks>
            <seealso cref="P:Aspose.Gis.DriverOptions.XYPrecisionModel"/>
            <seealso cref="P:Aspose.Gis.DriverOptions.ZPrecisionModel"/>
            <seealso cref="P:Aspose.Gis.DriverOptions.MPrecisionModel"/>
        </member>
        <member name="P:Aspose.Gis.PrecisionModel.Exact">
            <summary>
            Returns an exact precision model.
            According to exact precision model all digits in a double value are significant.
            </summary>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.Rounding(System.Int32)">
            <summary>
            Returns a rounding precision model.
            According to rounding precision model only a limited number of digits are significant.
            </summary>
            <remarks>
            When applied to a coordinate, the following code is used to reduce precision:
            <code>double rounded = Math.Round(value, significantDigits);</code>
            </remarks>
            <param name="significantDigits">Number of significant digits.</param>
            <returns>Rounding Precision model.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Number of significant digits is less then 0 or more than 15.
            </exception>
        </member>
        <member name="P:Aspose.Gis.PrecisionModel.IsExact">
            <summary>
            Gets a value indicating whether this precision model is exact.
            </summary>
            <value><see langword="true"/> if this precision model is exact; <see langword="false"/> otherwise.</value>
        </member>
        <member name="P:Aspose.Gis.PrecisionModel.IsRounding">
            <summary>
            Gets a value indicating whether this precision model is rounding.
            </summary>
            <value><see langword="true"/> if this precision model is rounding; <see langword="false"/> otherwise.</value>
        </member>
        <member name="P:Aspose.Gis.PrecisionModel.SignificantDigits">
            <summary>
            Gets a number of significant digits in a precision model if it is rounding.
            </summary>
            <value>
            Number of significant digits if this is a rounded precision model. -1 if this is an exact precision model.
            </value>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.Equals(System.Object)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.Equals(Aspose.Gis.PrecisionModel)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.op_Equality(Aspose.Gis.PrecisionModel,Aspose.Gis.PrecisionModel)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.op_Inequality(Aspose.Gis.PrecisionModel,Aspose.Gis.PrecisionModel)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.Convert(System.Double)">
            <summary>
            Rounds a value to this precision model.
            </summary>
        </member>
        <member name="M:Aspose.Gis.PrecisionModel.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AssemblyConstants.ReleaseDate">
            <summary>
            Release date of the product.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AssemblyConstants.Family">
            <summary>
            Product family name.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AssemblyConstants.Platform">
            <summary>
            Product platform.
            </summary>
        </member>
        <member name="F:Aspose.Gis.AssemblyConstants.Product">
            <summary>
            Product name.
            </summary>
        </member>
        <member name="T:Aspose.Gis.RasterDriver">
            <summary>
            A driver for a specific raster based format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.RasterDriver.CanOpenLayers">
            <summary>
            Gets a value indicating whether this driver can open raster layers.
            </summary>
            <value>
            <see langword="true"/>, if this driver can open raster layers; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Aspose.Gis.RasterDriver.OpenLayer(Aspose.Gis.AbstractPath,Aspose.Gis.RasterDriverOptions)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open raster layers (see <see cref="P:Aspose.Gis.RasterDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.RasterDriver.OpenLayer(System.String)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open raster layers (see <see cref="P:Aspose.Gis.RasterDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.RasterDriver.OpenLayer(Aspose.Gis.AbstractPath)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open raster layers (see <see cref="P:Aspose.Gis.RasterDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="M:Aspose.Gis.RasterDriver.OpenLayer(System.String,Aspose.Gis.RasterDriverOptions)">
            <summary>
            Opens the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="options">Driver-specific options.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.Raster.RasterLayer" />.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">Driver can not open raster layers (see <see cref="P:Aspose.Gis.RasterDriver.CanOpenLayers"/>).</exception>
        </member>
        <member name="T:Aspose.Gis.RasterDriverOptions">
            <summary>
            Options for a <see cref="T:Aspose.Gis.RasterDriver" />.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.BandTypes">
            <summary>
            The types of a raster band.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.RawBits">
            <summary> Unknown band type. See <see cref="M:Aspose.Gis.Raster.IRasterValues.AsRawBits"/> for values. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.Bit">
            <summary> 1-bit. It known as <see cref="T:System.Boolean"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.SByte">
            <summary> 8-bit signed integer. It known as <see cref="T:System.SByte"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.Byte">
            <summary> 8-bit unsigned integer. It known as <see cref="T:System.Byte"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.Short">
            <summary> 16-bit signed integer. It known as <see cref="T:System.Int16"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.UShort">
            <summary> 16-bit unsigned integer. It known as <see cref="T:System.UInt16"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.Integer">
            <summary> 32-bit integer. It known as <see cref="T:System.Int32"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.UInteger">
            <summary> 32-bit unsigned integer. It known as <see cref="T:System.UInt32"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.Long">
            <summary> 64-bit integer. It known as <see cref="T:System.Int64"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.ULong">
            <summary> 64-bit unsigned integer. It known as <see cref="T:System.UInt64"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.Float">
            <summary> 64-bit float. float. It known as <see cref="T:System.Single"/>. </summary>
        </member>
        <member name="F:Aspose.Gis.Raster.BandTypes.Double">
            <summary> 64-bit float. It known as <see cref="T:System.Double"/>. </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.BytesSegment">
            <summary>
            Delimits a section of a bytes array.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.BytesSegment.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary> Create an instance. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.BytesSegment.BytesOffset">
            <summary> Calculate position of the first byte. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.BytesSegment.BytesPerPixel">
            <summary> Calculate byte per pixel with ceiling. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.BytesSegment.Array">
            <summary> Gets the original bytes that the segment delimits. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.BytesSegment.BitsOffset">
            <summary> Gets the position of the first bit. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.BytesSegment.BitsPerPixel">
            <summary> Gets bits per pixel. </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.Crop.CropRasterLayer">
            <summary>
            Class that represents a cropped layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.Crop.CropRasterLayer.#ctor(Aspose.Gis.Raster.RasterLayer,Aspose.Gis.Geometries.IGeometry,System.Double[])">
            <summary> Create an instance of <see cref="T:Aspose.Gis.Raster.Crop.CropRasterLayer"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.IsEmpty">
            <summary>
            Indicates if the layer has no intersections with the geometry.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.BandCount">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.Crop.CropRasterLayer.GetBand(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.NoDataValues">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.Driver">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.Width">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.Height">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.UpperLeftX">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.UpperLeftY">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.CellSize">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Crop.CropRasterLayer.SpatialReferenceSystem">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.Crop.CropRasterLayer.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Raster.IRasterBand">
            <summary>
            Contains metadata about a raster band.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterBand.DataType">
            <summary> Gets type of values stored in each cell. </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.IRasterCellSize">
            <summary>
            Describes the size, scale and rotation of a raster cell on a map.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterCellSize.Height">
            <summary> Gets the cell or pixel height, always positive. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterCellSize.Width">
            <summary> Gets the cell or pixel width, always positive. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterCellSize.ScaleX">
            <summary> Gets x-component of the cell or pixel width (x-scale). </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterCellSize.ScaleY">
            <summary> Gets y-component of the cell or pixel height (y-scale), typically negative. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterCellSize.SkewX">
            <summary> Gets x-component of the cell or pixel height (x-skew). </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterCellSize.SkewY">
            <summary> Gets y-component of the cell or pixel width (y-skew). </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.IRasterReaderStrategy">
            <summary>
            Allow inject a cache on the raster reading.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterReaderStrategy.ReadOnExpression(Aspose.Gis.Raster.RasterRect,Aspose.Gis.Raster.RasterReadExpression)">
            <summary> Reads and processes band values ​​in an expression. No verify input params. </summary>
            <param name="rect">Block of raster cells where values are read.</param>
            <param name="expression">Provides a way to process a band value. </param>
        </member>
        <member name="T:Aspose.Gis.Raster.IRasterValues">
            <summary> Provides access to the values of raster bands. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.IRasterValues.Item(System.Int32)">
            <summary>
            Gets the band value as a <see langword="double"/> type.
            </summary>
            <remarks>
            If band type is <see cref="F:Aspose.Gis.Raster.BandTypes.RawBits"/> consider to use <see cref="M:Aspose.Gis.Raster.IRasterValues.AsRawBits"/> method to avoid exceptions.
            </remarks>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted values.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.IsNull(System.Int32)">
            <summary>
            Checks if the raster value is set in the specified band.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0. </param>
            <returns>Return 'false' if not exist.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.EqualsNoData(System.Int32)">
            <summary>
            Checks if the value represents background or 'no data' in the specified band.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>Return 'true' if represents background or 'no data'. </returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsRawBits">
            <summary>
            Get raw bits of all bands values.
            </summary>
            <returns>The raw bits.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsBoolean(System.Int32)">
            <summary>
            Converts the specified band data to a <see langword="bool"/> value.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsByte(System.Int32)">
            <summary>
            Converts the specified band data to a <see langword="byte"/> value.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsShort(System.Int32)">
            <summary>
            Converts the specified band data to a <see langword="short"/> value.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsInteger(System.Int32)">
            <summary>
            Converts the specified band data to a <see langword="int"/> value.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsLong(System.Int32)">
            <summary>
            Converts the specified band data to a <see langword="long"/> value.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsFloat(System.Int32)">
            <summary>
            Converts the specified band data to a <see langword="float"/> value.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.AsDouble(System.Int32)">
            <summary>
            Converts the specified band data to a <see langword="double"/> value.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.IRasterValues.GetDataType(System.Int32)">
            <summary>
            Gets type of values.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <returns>The type of values.</returns>
        </member>
        <member name="T:Aspose.Gis.Raster.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Raster</c> namespace provides classes for working with raster formats.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterAllReaderStrategy">
            <summary>
            This implementation reads fully all data.
            Used when raster format can't support other reading strategies.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterBand">
            <summary>
            Contains data about a raster Band.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterBand.#ctor(Aspose.Gis.Raster.BandTypes)">
            <summary>
            Create an instance of <see cref="T:Aspose.Gis.Raster.RasterBand"/>.
            </summary>
            <param name="dataType">Specifies the type and size of values stored in each pixel or cell.</param>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterBand.DataType">
            <summary> Gets type of values stored in each cell. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterBand.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterCellSize">
            <summary>
            Describes the size, scale and rotation of a raster cell on a map.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterCellSize.#ctor">
            <summary> Create an instance of <see cref="T:Aspose.Gis.Raster.RasterCellSize"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterCellSize.Height">
            <summary> Compute the pixel height. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterCellSize.Width">
            <summary> Compute the pixel width. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterCellSize.ScaleX">
            <summary> Gets or sets x-component of the pixel width (x-scale). </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterCellSize.ScaleY">
            <summary> Gets or sets y-component of the pixel height (y-scale), typically negative. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterCellSize.SkewX">
            <summary> Gets or sets x-component of the pixel height (x-skew). </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterCellSize.SkewY">
            <summary> Gets or sets y-component of the pixel width (y-skew). </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterCellSize.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterReadExpression">
            <summary> Represents a delegate, which is reading expression. </summary>
            <param name="context">The value context. </param>
            <param name="rasterValues">The read values. </param>
        </member>
        <member name="T:Aspose.Gis.Raster.ReadAllCallback">
            <summary>
            Represents a delegate, which allow you to an inject logic on data in full reading.
            </summary>
            <param name="expression">expression</param>
        </member>
        <member name="T:Aspose.Gis.Raster.ReadDirectCallback">
            <summary>
            Represents a delegate, which allow you to an inject logic on data block reading.
            </summary>
            <param name="rect">block rect</param>
            <param name="expression">expression</param>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterDirectReaderStrategy">
            <summary>
            Implement non cache reading.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterExpressionContext">
            <summary> This class describes the value context when it reads raster a band. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterExpressionContext.#ctor(System.Int32,System.Int32)">
            <summary>
            Create an instance of <see cref="T:Aspose.Gis.Raster.RasterExpressionContext"/>
            </summary>
            <param name="cellX">Column value (x-coordinate). </param>
            <param name="cellY">Row value (y-coordinate). </param>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterExpressionContext.CellX">
            <summary> Gets or sets column value (x-coordinate). Numbering starts at 0. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterExpressionContext.CellY">
            <summary> Gets or sets row value (y-coordinate). Numbering starts at 0. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterExpressionContext.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary>
            <returns>The fully qualified type name.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterExpressionContext.Equals(Aspose.Gis.Raster.RasterExpressionContext)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterExpressionContext.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>true if <paramref name="obj">obj</paramref> and this instance are the same type and represent the same value; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterExpressionContext.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterLayer">
            <summary>
            Represents a raster layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.BandCount">
            <summary> Gets the number of bands in the raster layer. </summary>
            <remarks> A single-band raster always returns '1' value. </remarks>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetBand(System.Int32)">
            <summary>
            Gets a band by the specified index.
            </summary>
            <param name="index">Band numbers start at 0 and band is assumed to be 0 if not specified.</param>
            <returns>Returns basic meta data about a raster band.</returns>
            <remarks> If raster contains no bands then an error is thrown. </remarks>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.NoDataValues">
            <summary>
            Gets the values that represents background or 'no data' of the raster.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.Width">
            <summary> Gets the width of the raster in pixels. Also it is known as columns count. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.Height">
            <summary> Gets the height of the raster in pixels. Also it is known as rows count. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.UpperLeftX">
            <summary> Gets x-coordinate of the raster upper left corner. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.UpperLeftY">
            <summary> Gets y-coordinate of the raster upper left corner. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.CellSize">
            <summary> Gets cell or pixel size of the raster. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.SpatialReferenceSystem">
            <summary>
            Gets a spatial reference system of raster.
            Can be <see langword="null"/> if it is unknown.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.Raster.RasterLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetExtent">
            <summary> Calculates a spatial extent of this layer. </summary>
            <returns>A spatial extent of this layer.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterLayer.Bounds">
            <summary>Gets the raster bounds.</summary>
            <returns>The raster bounds.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetSpatialPoint(System.Int32,System.Int32)">
            <summary>
            Converts the specified column and row to the spatial coordinate.
            </summary>
            <param name="cellX">The value for column (x-coordinate). Numbering starts at 0.</param>
            <param name="cellY">The value for row (y-coordinate). Numbering starts at 0.</param>
            <returns>Returns the x-coordinate of upper left corner given a column and row.</returns>
            <remarks>
            If either parameter is passed out of range of the respective dimension of the raster,
            it will return coordinates outside of the raster assuming the raster's grid is applicable outside the raster's bounds.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetStatistics(System.Int32,System.Boolean)">
            <summary>
            Calculate summary statistics consisting of count, sum, mean, min, max.
            </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <param name="excludeNodataValue">Allows to exclude 'nodata' values. If 'excludeNodataValue' is set to false, then all pixels are considered.</param>
            <returns>The summary statistics.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetValuesOnExpression(Aspose.Gis.Raster.RasterRect,Aspose.Gis.Raster.RasterReadExpression)">
            <summary>
            Reads and processes band values ​​in an expression.
            </summary>
            <param name="rect">Block of raster cells where values are read. </param>
            <param name="expression">Provides a way to process a band value. </param>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetValuesDump(Aspose.Gis.Raster.RasterRect)">
            <summary>
            Reads the values in the specified block as a 1-dimension array.
            </summary>
            <param name="rect">Block of raster cells where dump is read.</param>
            <returns>The dump of values.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetValues(System.Int32,System.Int32)">
            <summary>
            Reads the values in the specified cell.
            </summary>
            <param name="cellX">The value for column (x-coordinate). Numbering starts at 0.</param>
            <param name="cellY">The value for row (y-coordinate). Numbering starts at 0.</param>
            <returns>The raster values.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.Warp(Aspose.Gis.Raster.WarpOptions)">
            <summary>
            Warps the raster layer to another.
            </summary>
            <param name="options"> Options for the reprojection procedure. </param>
            <returns>The warp raster layer.</returns>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null. Parameter name: options.</exception>
            <exception cref="T:System.ArgumentException">Unknown source spatial reference system.</exception>
            <exception cref="T:System.InvalidOperationException">Original layer cannot be another WarpRasterLayer.</exception>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.Crop(Aspose.Gis.Geometries.IGeometry,System.Double[])">
            <summary>
            Crops the raster layer using a shape form (and band mask).
            </summary>
            <param name="geometry">Geometry represented the shape form.</param>
            <param name="masks">Mask for crop layer</param>
            <returns>The cropped raster layer. If no intersections found returns <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null. Parameter name: geometry.</exception>
            <exception cref="T:System.NotSupportedException">Argument cannot be different from polygon or surface. Parameter name: geometry.</exception>
            <exception cref="T:System.InvalidOperationException">Original layer cannot be another CropRasterLayer.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error while cropping the layer.</exception>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.Crop(System.Double[])">
            <summary>
            Crops the raster layer using a band mask).
            </summary>
            <param name="masks">Mask for crop layer</param>
            <returns>The cropped raster layer. If no intersections found returns <see langword="null"/>.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.Dispose">
            <summary> Releases the resources used by the <see cref="T:Aspose.Gis.Raster.RasterLayer" />. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetCell(Aspose.Gis.Geometries.IPoint,System.Int32@,System.Int32@)">
            <summary> Get cell position by point. The SRS is ignored. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.GetCell(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Raster.IRasterCellSize,System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary> Get cell position by point. The SRS is ignored. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.#ctor(Aspose.Gis.RasterDriverOptions)">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Raster.RasterLayer"/> class. </summary>
            <param name="options">Raster-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.Raster.RasterLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterRect">
            <summary>
            Block of raster cells.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create an instance of <see cref="T:Aspose.Gis.Raster.RasterRect"/>.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner (start column). Numbering starts at 0.</param>
            <param name="y">The y-coordinate of the upper-left corner (start row). Numbering starts at 0.</param>
            <param name="width">The value for width (column count).</param>
            <param name="height">The value for height (row count).</param>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterRect.X">
            <summary> Gets start column (x-coordinate). </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterRect.Y">
            <summary> Gets start row (y-coordinate). </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterRect.Width">
            <summary> Gets width (columns count). </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterRect.Height">
            <summary> Gets height (row count). </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterRect.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterStatistics">
            <summary>
            The statistics for any raster layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterStatistics.Min">
            <summary>
            Minimum value of counted cells or pixel values.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterStatistics.Max">
            <summary>
            Maximum value of counted cells or pixel values.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterStatistics.Mean">
            <summary>
            Arithmetic mean of all counted cells or pixel values.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterStatistics.Sum">
            <summary>
            Sum of all counted cells or pixel values.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.RasterStatistics.Count">
            <summary> Number of cells or pixels counted for the summary statistics. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterStatistics.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterStatistics.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Raster.RasterStatistics"/> class. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterStatistics.CalculateSummary(Aspose.Gis.Raster.RasterLayer,System.Int32,System.Boolean)">
            <summary> Calculate summary. </summary>
            <param name="bandIndex">The index of the band. Numbering starts from 0.</param>
            <param name="excludeNodataValue">Allows to exclude 'nodata' values.</param>
            <param name="layer"> The specified raster layer.</param>
        </member>
        <member name="T:Aspose.Gis.Raster.RasterValues">
            <summary>
            This class implements the <see cref="T:Aspose.Gis.Raster.IRasterValues"/> interface for <see cref="T:Aspose.Gis.Formats.GeoTiff.GeoTiffReadLayer"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.#ctor(Aspose.Gis.Raster.BytesSegment,System.Collections.Generic.List{Aspose.Gis.Raster.IRasterBand},Aspose.Gis.Raster.IRasterValues,Aspose.Gis.Common.BinaryConverter)">
            <summary> Create an instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.ToString">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.RasterValues.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.IsNull(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.EqualsNoData(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsRawBits">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsBoolean(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsByte(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsShort(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsInteger(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsLong(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsFloat(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.AsDouble(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.RasterValues.GetDataType(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Raster.WarpOptions">
            <summary>
            Options for raster warping.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.WarpOptions.Width">
            <summary>
            Specifies output raster width in pixels and columns.
            If the value is set to 0, the width is automatically computed. The default value is "0".
            </summary>
            <remarks>
            If the width is set to 0, the value will be taken from the original width or computed from <see cref="P:Aspose.Gis.Raster.WarpOptions.CellWidth"/>.
            Note that <see cref="P:Aspose.Gis.Raster.WarpOptions.Width"/> cannot be used with <see cref="P:Aspose.Gis.Raster.WarpOptions.CellWidth"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Raster.WarpOptions.Height">
            <summary>
            Specifies output raster height in pixels and columns.
            If the value is set to 0, the height is automatically computed. The default value is "0".
            </summary>
            <remarks>
            If the height is set to 0, the value will be taken from the original height or computed from <see cref="P:Aspose.Gis.Raster.WarpOptions.CellHeight"/>.
            Note that <see cref="P:Aspose.Gis.Raster.WarpOptions.Height"/> cannot be used with <see cref="P:Aspose.Gis.Raster.WarpOptions.CellHeight"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Raster.WarpOptions.CellWidth">
            <summary>
            Specifies a new width of the raster cell (in target georeferenced units).
            If the value is set to 0, the <see cref="P:Aspose.Gis.Raster.WarpOptions.CellWidth"/> is automatically computed. The default value is "0".
            </summary>
            <remarks>
            If the cell width is set to 0, the value will be taken from the original cell width or computed from <see cref="P:Aspose.Gis.Raster.WarpOptions.Width"/>.
            Note that <see cref="P:Aspose.Gis.Raster.WarpOptions.CellWidth"/> cannot be used with <see cref="P:Aspose.Gis.Raster.WarpOptions.Width"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Raster.WarpOptions.CellHeight">
            <summary>
            Specifies a new height of the raster cell (in target georeferenced units).
            If the value is set to 0, the <see cref="P:Aspose.Gis.Raster.WarpOptions.CellHeight"/> is automatically computed. The default value is "0".
            </summary>
            <remarks>
            If the cell height is set to 0, the value will be taken from the original cell height or computed from <see cref="P:Aspose.Gis.Raster.WarpOptions.Height"/>.
            Note that <see cref="P:Aspose.Gis.Raster.WarpOptions.CellHeight"/> cannot be used with <see cref="P:Aspose.Gis.Raster.WarpOptions.Height"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Raster.WarpOptions.TargetExtent">
            <summary>
            Specifies bounds of raster layer to warp.
            If set to <see langword="null"/>, extent is calculated during warping to include all cells from raster.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.WarpOptions.TargetSpatialReferenceSystem">
            <summary>
            Specifies target spatial reference.
            If set to <see langword="null"/>, default or source spatial reference is used.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.WarpOptions.DefaultSpatialReferenceSystem">
            <summary>
            Specifies a value for a source spatial reference if that is missing.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.Warp.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Raster.Warp</c> namespace provides classes for working with raster warping.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.Warp.WarpRasterLayer">
            <summary>
            A layer that represents reprojection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.Warp.WarpRasterLayer.#ctor(Aspose.Gis.Raster.RasterLayer,Aspose.Gis.Raster.WarpOptions)">
            <summary> Create an instance of <see cref="T:Aspose.Gis.Raster.Warp.WarpRasterLayer"/>. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.BandCount">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.Warp.WarpRasterLayer.GetBand(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.NoDataValues">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.Driver">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.Width">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.Height">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.UpperLeftX">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.UpperLeftY">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.CellSize">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.Raster.Warp.WarpRasterLayer.SpatialReferenceSystem">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Raster.Warp.WarpRasterLayer.GetExtent">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Raster.Web.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Raster.Web</c> namespace provides classes for working with web warping.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Raster.Web.WebTile">
            <summary>
            Abstract Web Tile Model.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.Web.WebTile.CellX">
            <summary> The X-Column of a tile. </summary>
        </member>
        <member name="P:Aspose.Gis.Raster.Web.WebTile.CellY">
            <summary> The Y-Row of a tile. </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.Web.WebTile.GetExtent">
            <summary> Presents a spatial extent of this layer. </summary>
            <returns>A spatial extent of this layer.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.Web.WebTile.AsRaster">
            <summary>
            Presents the tile content as a Raster layer.
            </summary>
            <returns>The Raster.</returns>
        </member>
        <member name="M:Aspose.Gis.Raster.Web.WebTile.AsPath">
            <summary>
            Presents the tile content as a Url or Path to a file.
            </summary>
            <returns>Url or Path to a file</returns>
        </member>
        <member name="T:Aspose.Gis.Raster.Web.WebTiles">
            <summary>
            Provides access to web tiles.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Raster.Web.WebTiles.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="T:Aspose.Gis.Relationship.Joins.JoinByGeometryOptions">
            <summary>
            Options for layers joining.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinByGeometryOptions.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinByGeometryOptions.Radius">
            <summary>
            Specifies a radius to look for the joined geometry.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinByGeometryOptions.ConditionComparer">
            <summary>
            Defines the way the features of two layers are related in a query by specifying a logic to be used in comparing values from the features.
            </summary>
            <remarks>
            By default, it determines if two objects are equal:
            <code>EqualityComparer&lt;object&gt;.Default;  </code>
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinByGeometryOptions.JoinedAttributesPrefix">
            <summary>
            Specifies a prefix string for the joined attribute's names. Default is "joined_".
            </summary>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinByGeometryOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinByGeometryOptions.#ctor(Aspose.Gis.Relationship.Joins.JoinByGeometryOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Relationship.Joins.JoinedAttributesConverter">
            <summary>
            A class with default logic of layer joins.
            </summary>
            <remarks>
            By default, the logic excludes unnecessary attributes based on <see cref="P:Aspose.Gis.Relationship.Joins.JoinOptions.JoinAttributeNames"/>
            and marks the desired attribute names with the <see cref="P:Aspose.Gis.Relationship.Joins.JoinOptions.JoinedAttributesPrefix"/>.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinedAttributesConverter.JoinedToOriginalNames">
            <summary>
            Dictionary contains modified and original attributes names.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinedAttributesConverter.#ctor(Aspose.Gis.Relationship.Joins.JoinOptions)">
            <summary>
            Create an instance of <see cref="!:JoinedLayerOld"/>.
            </summary>
            <param name="options">Join parameters.</param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinedAttributesConverter.ModifyAttribute(Aspose.Gis.FeatureAttribute,Aspose.Gis.AttributesConverterActions)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Relationship.Joins.JoinOptions">
            <summary>
            Options for layers joining.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinOptions.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinOptions.JoinAttributeName">
            <summary>Specifies an attribute name of the joined layer which value will be used into <see cref="P:Aspose.Gis.Relationship.Joins.JoinOptions.ConditionComparer"/>.</summary>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinOptions.TargetAttributeName">
            <summary>Specifies an attribute name of the main layer which value will be used into <see cref="P:Aspose.Gis.Relationship.Joins.JoinOptions.ConditionComparer"/>.</summary>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinOptions.JoinAttributeNames">
            <summary>
            Specifies a list of attribute names to be joined.
            If it is <see langword="null"/> or empty, all attributes of the joined layer will be joined.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinOptions.ConditionComparer">
            <summary>
            Defines the way the features of two layers are related in a query by specifying a logic to be used in comparing values from the features.
            </summary>
            <remarks>
            By default, it determines if two objects are equal:
            <code>EqualityComparer&lt;object&gt;.Default;  </code>
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Relationship.Joins.JoinOptions.JoinedAttributesPrefix">
            <summary>
            Specifies a prefix string for the joined attribute's names. Default is "joined_".
            </summary>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Clone of this instance. </returns>
        </member>
        <member name="M:Aspose.Gis.Relationship.Joins.JoinOptions.#ctor(Aspose.Gis.Relationship.Joins.JoinOptions)">
            <summary>
            Create new instance, that is clone of argument.
            </summary>
            <param name="other"> Other instance, to clone data from. </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="T:Aspose.Gis.Relationship.Joins.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Relationship.Joins</c> namespace provides classes for join the layers.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.CapStyle">
            <summary> Specifies how lines are rendered at their ends. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.CapStyle.Butt">
            <summary> Sharp square edge. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.CapStyle.Round">
            <summary> Rounded edge. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.CapStyle.Square">
            <summary> Slightly elongated square edge. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Colorizers.BandColor">
            <summary>
            Associates band values and a color component for specified band index.
            There are band values between min and max will be interpolated linearly.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Colorizers.BandColor.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Colorizers.BandColor" /> class. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.BandColor.BandIndex">
            <summary> Specifies the index of the band. Numbering starts from 0. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.BandColor.Min">
            <summary> Specifies the min value. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.BandColor.Max">
            <summary> Specifies the max value. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Colorizers.BandColor.GetChannelColor(Aspose.Gis.Raster.IRasterValues)">
            <summary> Translate values to color component using linear interpolation. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Colorizers.MultiBandColor">
            <summary>
            Multiband colorizer specifies red, green and blue components for a raster.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Colorizers.MultiBandColor.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Colorizers.MultiBandColor" /> class. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.MultiBandColor.AlphaBand">
            <summary>  Specifies the alpha component for our raster. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.MultiBandColor.RedBand">
            <summary>  Specifies the red component for our raster. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.MultiBandColor.GreenBand">
            <summary>  Specifies the green component for our raster. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.MultiBandColor.BlueBand">
            <summary>  Specifies the blue component for our raster. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Colorizers.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Rendering.Colorizers</c> namespace provides classes for configuring rendering raster cells.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Colorizers.NullColorizer">
            <summary>
            The <c>NullColorizer</c> draws nothing and effectively skips rendering of a raster cell it is applied to.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.NullColorizer.Instance">
            <summary> Gets an instance of <c>NullColorizer</c>. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Colorizers.RasterColorizer">
            <summary>
            The abstract root class for the colorizer that render a raster.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.RasterColorizer.Null">
            <summary>
            The <see cref="T:Aspose.Gis.Rendering.Colorizers.NullColorizer"/> draws nothing and effectively skips the rendering of cells it is applied to.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Colorizers.SingleBandColor">
            <summary>
            Single band colorizer specifies a gray component for a raster.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Colorizers.SingleBandColor.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Colorizers.SingleBandColor" /> class. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Colorizers.SingleBandColor.GrayBand">
            <summary>  Specifies the gray component for our raster. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Colorizers.ValuesContext">
            <summary>
            A context for rendering a raster cell.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.FillStyle">
            <summary>
            Specifies a filling pattern.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.Solid">
            <summary> Solid fill. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.None">
            <summary> Do not fill. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.HorizontalHatch">
            <summary> A pattern of horizontal lines. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.VerticalHatch">
            <summary> A pattern of vertical lines. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.CrossHatch">
            <summary> A pattern of horizontal and vertical lines that cross. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.ForwardDiagonalHatch">
            <summary> A pattern of lines on a diagonal from upper left to lower right. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.BackwardDiagonalHatch">
            <summary> A pattern of lines on a diagonal from upper right to lower left. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.FillStyle.DiagonalCrossHatch">
            <summary> A pattern of crisscross diagonal lines. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Bmp.BmpRenderer">
            <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer"/> that renders <see cref="T:Aspose.Gis.Rendering.Map"/> into BMP file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Bmp.BmpRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Bmp.BmpRenderer.Render(Aspose.Gis.Rendering.Map,System.String,Aspose.Gis.Rendering.Formats.Bmp.BmpRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Bmp.BmpRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Formats.Bmp.BmpRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Bmp.BmpRendererOptions">
            <summary>
            BMP specific renderer options.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Bmp.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Bmp</c> namespace provides classes for working with BMP format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Jpeg.JpegRenderer">
            <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer"/> that renders <see cref="T:Aspose.Gis.Rendering.Map"/> into JPEG file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Jpeg.JpegRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Jpeg.JpegRenderer.Render(Aspose.Gis.Rendering.Map,System.String,Aspose.Gis.Rendering.Formats.Jpeg.JpegRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Jpeg.JpegRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Formats.Jpeg.JpegRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Jpeg.JpegRendererOptions">
            <summary>
            JPEG specific renderer options.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Jpeg.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Jpeg</c> namespace provides classes for working with JPEG format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.NamespaceGroupDoc">
            <summary>
            <c>Aspose.Gis.Rendering.Formats</c> namespace provides classes for working with specific rendering formats.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Png.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Png</c> namespace provides classes for working with PNG format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Png.PngRenderer">
            <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer"/> that renders <see cref="T:Aspose.Gis.Rendering.Map"/> into PNG file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Png.PngRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Png.PngRenderer.Render(Aspose.Gis.Rendering.Map,System.String,Aspose.Gis.Rendering.Formats.Png.PngRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Png.PngRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Formats.Png.PngRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Png.PngRendererOptions">
            <summary>
            PNG specific renderer options.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Svg.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Formats.Svg</c> namespace provides classes for working with SVG format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Svg.SvgGeometryRenderer">
            <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer"/> that renders <see cref="T:Aspose.Gis.Rendering.Map"/> into GSVG file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Svg.SvgGeometryRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Svg.SvgGeometryRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Formats.Svg.SvgRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Svg.SvgRenderer">
            <summary>
            A <see cref="T:Aspose.Gis.Rendering.Renderer"/> that renders <see cref="T:Aspose.Gis.Rendering.Map"/> into SVG file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Svg.SvgRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Svg.SvgRenderer.Render(Aspose.Gis.Rendering.Map,System.String,Aspose.Gis.Rendering.Formats.Svg.SvgRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Formats.Svg.SvgRenderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Formats.Svg.SvgRendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.Formats.Svg.SvgRendererOptions">
            <summary>
            SVG specific renderer options.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.FontStyle">
            <summary>
            Specifies style to be applied to text.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Regular">
            <summary> Regular text. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Bold">
            <summary> Bold text. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Italic">
            <summary> Italic text. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Underline">
            <summary> Underlined text. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.FontStyle.Strikeout">
            <summary> Text with a line through the middle. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.Labeling">
            <summary>
            The abstract root class for labelings, classes that describe how to place labels on features.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.Labeling.Null">
            <summary> Gets an instance of <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/>. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.LabelingRule">
            <summary>
            A user-defined rule for <see cref="T:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.LabelingRule.CreateFilterRule(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Labelings.Labeling)">
            <summary>
            Creates new rule that applies a labeling to feature whenever it passes filter.
            </summary>
            <param name="filter">Determines when labeling should be used.</param>
            <param name="labeling">Labeling to apply.</param>
            <exception cref="T:System.ArgumentNullException">Filter is <see langword="null"/>.</exception>
            <returns> New LabelingRule object. </returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.LabelingRule.CreateElseRule(Aspose.Gis.Rendering.Labelings.Labeling)">
            <summary>
            Creates new rule that applies a labeling to feature whenever it doesn't match any filter rule.
            </summary>
            <param name="labeling">Labeling to apply.</param>
            <returns> New LabelingRule object. </returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.IsElseRule">
            <summary>
            Gets a value indicating whether this rule is "else-rule".
            </summary>
            <remarks>
            "Else-rule" applies labeling to a feature if feature doesn't match any filter rule.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.IsFilterRule">
            <summary>
            Gets a value indicating whether this rule is "filter-rule".
            </summary>
            <remarks>
            "filter-rule" applies labeling to a feature if <see cref="P:Aspose.Gis.Rendering.Labelings.LabelingRule.Filter"/> returns <see langword="true"/> for the feature.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.Filter">
            <summary>
            Determines if "filter-rule" should apply labeling to the feature.
            If returns <see langword="true"/> labeling is used; otherwise, feature is skipped.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.Labeling">
            <summary>
            Labeling to apply to the feature.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.SldMinScaleDenominator">
            <summary> Min scale denominator imported from SLD. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LabelingRule.SldMaxScaleDenominator">
            <summary> Max scale denominator imported from SLD. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.LabelingRule.#ctor(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Labelings.Labeling,Aspose.Gis.Rendering.Labelings.LabelingRule.RuleType)">
            <summary>
            Creates new rule.
            </summary>
            <param name="filter">Determines when labeling should be used.</param>
            <param name="labeling">Labeling to use.</param>
            <param name="ruleType">Type of the rule.</param>
            <exception cref="T:System.ArgumentNullException">Any of the arguments is <see langword="null"/>.</exception>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.LabelPlacement">
            <summary>
            Label placement specifies how labels are placed relatively to feature's geometry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.LabelPlacement.Clone">
            <summary> Clones this instance. </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.LineLabelAlignment">
            <summary>
            Specifies how the label is aligned with the line.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Horizontal">
            <summary>
            No alignment. The label is horizontal.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Parallel">
            <summary>
            The label is parallel to the line.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Curved">
            <summary>
            The label follows the shape of the line.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.LineLabelPlacement">
            <summary>
            Line label placement places labels along line.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.#ctor">
            <summary> Creates new instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.#ctor(Aspose.Gis.Rendering.Labelings.LineLabelPlacement)">
            <summary> Creates new instance. </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Labelings.LineLabelPlacement" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.Offset">
            <summary>
            The offset from the linear path.
            Positive values offset to the left of the line, negative to the right. Default is 0.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.Alignment">
            <summary>
            Specifies how the label is aligned with the linear path. Default is <see cref="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Parallel"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.MaxAngleDelta">
            <summary>
            When used with <see cref="F:Aspose.Gis.Rendering.Labelings.LineLabelAlignment.Curved" /> sets the maximum angle in degrees between two
            subsequent characters in a curved label. Default is 25.
            </summary>
            <exception cref="T:System.ArgumentException" accessor="set">Value is negative.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.LineLabelPlacement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.MultipartMode">
            <summary>
            Specifies how labels are rendered for features that contain multipart geometries.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.MultipartMode.All">
            <summary>
            Places a label near each part of the geometry as long as there is space near the part.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.MultipartMode.Any">
            <summary>
            Places one label for the whole geometry.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Labelings.MultipartMode.Largest">
            <summary>
            Places a label for the largest part of the geometry as long as there is space for the label.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Rendering.Labelings</c> namespace provides classes for configuring vector features labeling.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.NullLabeling">
            <summary>
            The <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/> skips labeling of a geometry it is applied to.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.NullLabeling.Instance">
            <summary>
            Gets an instance of <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/>.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.PointLabelPlacement">
            <summary>
            Points label placement places labels near geometries centers.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.#ctor">
            <summary> Creates new instance. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.#ctor(Aspose.Gis.Rendering.Labelings.PointLabelPlacement)">
            <summary> Creates new instance. </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Labelings.PointLabelPlacement" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.HorizontalAnchorPoint">
            <summary> Specifies which side of a label will be aligned horizontally with the point location. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.VerticalAnchorPoint">
            <summary> Specifies which side of a label will be aligned vertically with the point location. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.HorizontalOffset">
            <summary> Specifies horizontal offset from a point location to the labels anchor point. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.VerticalOffset">
            <summary> Specifies vertical offset from a point location to the labels anchor point. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.Rotation">
            <summary> Specifies rotation of label in degrees. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.PointLabelPlacement.Clone">
            <summary> Clones this instance. </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling">
            <summary>
            Applies a labeling to feature according to user-defined rules.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Count">
            <summary>Gets the number of rules.</summary>
            <returns>The number of rules. </returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Item(System.Int32)">
            <summary>Gets the rule at the specified index .</summary>
            <param name="index">The zero-based index of the rule to get. </param>
            <returns>The rule at the specified index.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Add(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Labelings.Labeling)">
            <summary>
            Adds new <see cref="T:Aspose.Gis.Rendering.Labelings.LabelingRule"/>.
            </summary>
            <param name="filter">Determines when labeling should be applied to a feature.</param>
            <param name="labeling">Labeling to apply to a feature when <paramref name="filter"/> returns true.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.AddElseRule(Aspose.Gis.Rendering.Labelings.Labeling)">
            <summary>
            Adds a labeling that will be applied to features that don't match any filtering rule.
            </summary>
            <param name="labeling">A labeling.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.Add(Aspose.Gis.Rendering.Labelings.LabelingRule)">
            <summary> Adds a rule. </summary>
            <param name="rule">Rule to add.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.RuleBasedLabeling.GetEnumerator">
            <summary>Returns an enumerator that iterates through rules.</summary>
            <returns>An enumerator that can be used to iterate through rules.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling">
            <summary> A simple labeling places label on every feature. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling"/> class.
            </summary>
            <param name="labelAttribute">Attribute name to use as a source of labels.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.#ctor(Aspose.Gis.Rendering.Labelings.SimpleLabeling)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Labelings.SimpleLabeling" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute">
            <summary>
            Attribute name to use as a source of labels. Ignored if <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression"/> is set.
            Either <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute"/> or <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression"/> must be set before rendering;
            <see cref="T:System.InvalidOperationException"/> is thrown otherwise.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression">
            <summary>
            Provides a way to customize and format label text. If set, overrides <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute"/>.
            Either <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelAttribute"/> or <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.LabelExpression"/> must be set before rendering;
            <see cref="T:System.InvalidOperationException"/> is thrown otherwise.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontFamily">
            <summary>
            Font family to use to render text. The default is system dependent value.
            </summary>
            <exception cref="T:System.ArgumentNullException" accessor="set">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontStyle">
            <summary>
            Style to apply to text.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontSize">
            <summary>
            Size of the text.
            </summary>
            <exception cref="T:System.ArgumentException" accessor="set">Value is not positive.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FontColor">
            <summary> Determines color of text. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.HaloSize">
            <summary> Size of the halo (stroke) around text. </summary>
            <exception cref="T:System.ArgumentException" accessor="set">Value is negative.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.HaloColor">
            <summary> Color of the halo (stroke) around text. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.GeometryExpression">
            <summary>
            Provides a way to substitute the feature geometry with a one modified for labeling.
            This callback is invoked the first after <see cref="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FeatureBasedConfiguration"/> .
            Default is <see langword="null"/> (use feature geometry as-is).
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.MultipartMode">
            <summary>
            Specifies rendering behavior for multipart geometries. Default is <see cref="F:Aspose.Gis.Rendering.Labelings.MultipartMode.All"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.Placement">
            <summary>
            Label placement specifies how labels are placed relatively to feature's geometries.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.Priority">
            <summary>
            Indicates priority of this label in case if it overlaps with another label. The label with lower priority is not rendered.
            Default is 1000.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Labelings.SimpleLabeling.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Labelings.SimpleLabeling.FeatureBasedConfiguration">
            <summary>
            A callback that is used to configure this labeling before handling a feature.
            </summary>
            <remarks>
            This callback is invoked before labeling every feature. It accepts a feature that is about to be
            labeled and a clone of this labeling. By changing properties of the clone, it is possible to
            update labeling's behavior based on feature's attributes.
            </remarks>
        </member>
        <member name="T:Aspose.Gis.Rendering.LineJoin">
            <summary> Determines how lines are rendered at intersections of line segments. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.LineJoin.Miter">
            <summary> Sharp corner. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.LineJoin.Round">
            <summary> Rounded corner. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.LineJoin.Bevel">
            <summary> Diagonal corner. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Map">
            <summary>
            Map is a collection of layers that can be rendered on top of each other via <see cref="T:Aspose.Gis.Rendering.Renderer"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.#ctor(Aspose.Gis.Rendering.Measurement,Aspose.Gis.Rendering.Measurement)">
            <summary>
            Creates new instance of the <c>Map</c> class.
            </summary>
            <param name="width"> Width of the map. </param>
            <param name="height"> Height of the map. </param>
            <exception cref="T:System.ArgumentException" accessor="set"> Unit of width or height is <see cref="F:Aspose.Gis.Rendering.Unit.MapUnits"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Width or height is negative or zero. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.Extent">
            <summary>
            Specifies bounds of map to render.
            If set to <see langword="null"/>, extent is calculated during rendering to include all geometries in all layers.
            </summary>
            <exception cref="T:System.ArgumentException" accessor="set">
            <ul>
            <li><see cref="P:Aspose.Gis.Extent.IsValid"/> is <see langword="false"/>.</li>
            <li><see cref="P:Aspose.Gis.Extent.Width"/> is less or equal to zero.</li>
            <li><see cref="P:Aspose.Gis.Extent.Height"/> is less or equal to zero.</li>
            <li><see cref="P:Aspose.Gis.Extent.SpatialReferenceSystem"/> is <see langword="null"/>.</li>
            </ul>
            </exception>
            <remarks>
            If spatial reference system of the extent is not equal to spatial reference system of the map, extent is being transformed
            to the target spatial reference system during rendering.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.Padding">
            <summary>
            Specifies padding to add to the extent.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is negative.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.Width">
            <summary> Visual width of the map. </summary>
            <exception cref="T:System.ArgumentException" accessor="set">
            <see cref="P:Aspose.Gis.Rendering.Measurement.Unit"/> of the value is <see cref="F:Aspose.Gis.Rendering.Unit.MapUnits"/> or <see cref="F:Aspose.Gis.Rendering.Unit.MetersOnEarth"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is negative or zero. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.Height">
            <summary> Visual height of the map. </summary>
            <exception cref="T:System.ArgumentException" accessor="set">
            <see cref="P:Aspose.Gis.Rendering.Measurement.Unit"/> of the value is <see cref="F:Aspose.Gis.Rendering.Unit.MapUnits"/> or <see cref="F:Aspose.Gis.Rendering.Unit.MetersOnEarth"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is negative or zero. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.Resolution">
            <summary> Resolution to be used to render this map and to convert between <see cref="T:Aspose.Gis.Rendering.Measurement"/>. Defaults to 96. </summary>
            <exception accessor="set" cref="T:System.ArgumentOutOfRangeException">
            Argument is negative or equal to 0.
            </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.BackgroundColor">
            <summary>
            Background color of the map. Defaults to <see cref="P:System.Drawing.Color.Transparent"/>.
            </summary>
            <remarks>
            If transparent background is not supported by the output format, background color is set to white.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.SpatialReferenceSystem">
            <summary><see cref="P:Aspose.Gis.Rendering.Map.SpatialReferenceSystem"/> of the map.</summary>
            <exception accessor="set" cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception accessor="set" cref="T:System.ArgumentException">
            Value is not <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected"/> or <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic"/>.
            </exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.GetEnumerator">
            <summary>Returns an enumerator that iterates through the layers in the map.</summary>
            <returns>An enumerator that can be used to iterate through the layers in the map.</returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.Count">
            <summary>Gets the number of layers in the map.</summary>
            <returns>The number of layers in the map. </returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Map.Item(System.Int32)">
            <summary>Gets the layer at the specified index.</summary>
            <param name="index">The index of the layer to get.</param>
            <returns>The layer at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.VectorLayer,System.Boolean)">
            <summary>
            Creates a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> with default symbolizer and adds it to the map. Layers are rendered in addition order.
            </summary>
            <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/>.</param>
            <param name="keepOpen">
            <see langword="true"/> to leave the vector layer open after the <see cref="T:Aspose.Gis.Rendering.Map"/> object is disposed;
            <see langword="false"/> to dispose the layer.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,System.Boolean)">
            <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> to the map. Layers are rendered in addition order.
            </summary>
            <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/>.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <param name="keepOpen">
            <see langword="true"/> to leave the vector layer open after the <see cref="T:Aspose.Gis.Rendering.Map"/> object is disposed;
            <see langword="false"/> to dispose the layer.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling,System.Boolean)">
            <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> to the map. Layers are rendered in addition order.
            </summary>
            <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/>.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null"/>, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/> will be used.
            </param>
            <param name="keepOpen">
            <see langword="true"/> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.Map"/> object is disposed; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,System.Boolean)">
            <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> to the map. Layers are rendered in addition order.
            </summary>
            <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/>.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null"/>, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/> will be used.
            </param>
            <param name="defaultReferenceSystem">
            Specifies a value for a source spatial reference (layer\sequence) if that is missing. Default <b>null</b> will be used.
            </param>
            <param name="keepOpen">
            <see langword="true"/> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.Map"/> object is disposed; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.FeaturesSequence)">
            <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> to the map. Layers are rendered in addition order.
            </summary>
            <param name="featuresSequence">A features sequence to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/>.</param>
            <exception cref="T:System.ArgumentNullException">Features sequence is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> to the map. Layers are rendered in addition order.
            </summary>
            <param name="featuresSequence">A features sequence to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/>.</param>
            <param name="symbolizer">A symbolizer to use for rendering. If <see langword="null"/>, default symbolizer is used.</param>
            <exception cref="T:System.ArgumentNullException">Features sequence is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling)">
            <summary>
            Creates and adds a <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> to the map. Layers are rendered in addition order.
            </summary>
            <param name="featuresSequence">A features sequence to represent by <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/>.</param>
            <param name="symbolizer">A symbolizer to use for rendering.</param>
            <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null"/>, <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/> will be used.
            </param>
            <exception cref="T:System.ArgumentNullException">Features sequence is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.Rendering.MapLayer)">
            <summary>
            Adds a layer to the map. Layers are rendered in addition order.
            </summary>
            <param name="mapLayer">The layer to be added.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Add(Aspose.Gis.Raster.RasterLayer,Aspose.Gis.Rendering.Colorizers.RasterColorizer,System.Boolean)">
            <summary>
            Creates a <see cref="T:Aspose.Gis.Rendering.RasterMapLayer"/> with default colorizer and adds it to the map.
            </summary>
            <param name="layer">A vector layer to represent by <see cref="T:Aspose.Gis.Raster.RasterLayer"/>.</param>
            <param name="colorizer">A colorizer to use for rendering. If <see langword="null"/>, default colorizer is used.</param>
            <param name="keepOpen">
            <see langword="true"/> to leave the raster layer open after the <see cref="T:Aspose.Gis.Rendering.Map"/> object is disposed;
            <see langword="false"/> to dispose the layer.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Render(System.String,Aspose.Gis.Rendering.Renderer)">
            <summary>
            Renders map into a file.
            </summary>
            <param name="outputPath">Path to the output file.</param>
            <param name="renderer">Renderer to use.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Render(Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Renderer)">
            <summary>
            Renders map into a file.
            </summary>
            <param name="outputPath">Path to the output file.</param>
            <param name="renderer">Renderer to use.</param>
            <exception cref="T:System.ArgumentNullException">Any argument <see langword="null" />.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:Aspose.Gis.GisException">An error while processing or reading GIS data.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Dispose">
            <summary> Disposes resources. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Render(System.String,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map into a file.
            </summary>
            <param name="outputPath">Path to the output file.</param>
            <param name="renderer">Renderer to use.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Render(Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Renderer,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map into a file.
            </summary>
            <param name="outputPath">Path to the output file.</param>
            <param name="renderer">Renderer to use.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Map.Render(Aspose.Gis.Rendering.RenderingContext,Aspose.Gis.Painting.PaintEngine)">
            <summary>
            Renders map via provided paint engine.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.MapLayer">
            <summary>A <c>MapLayer</c>is a base class for layers inside the <see cref="T:Aspose.Gis.Rendering.Map"/>.</summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.MapLayer.Opacity">
            <summary>
            Opacity of the layer.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Argument is less than 0 or greater than 1.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.MapLayer.Dispose">
            <summary> Disposes resources. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.MapToPixelTransformation">
            <summary>
            Transforms values from map coordinates to pixels.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.MapToPixelTransformation.#ctor(System.Double,Aspose.Gis.Common.Coordinate,System.Double,System.Double)">
            <summary>
            Create new instance.
            </summary>
            <param name="mapUnitsPerPixel">MapUnits/Pixel ratio.</param>
            <param name="center">Center of visible extent.</param>
            <param name="outputWidth">Width of output image.</param>
            <param name="outputHeight">Height of output image.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.Measurement">
            <summary>
            A number that indicates a render measurement.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.op_Implicit(System.Double)~Aspose.Gis.Rendering.Measurement">
            <summary>
            Returns a new instance of <c>Measurement</c> that represents length in pixels.
            </summary>
            <param name="pixels">Number of pixels.</param>
            <returns>New instance of <c>Measurement</c> class.</returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Measurement.Zero">
            <summary>
            A measurement of zero length.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.Pixels(System.Double)">
            <summary>
            Returns a new instance of <c>Measurement</c> that represents length in pixels.
            </summary>
            <param name="value">Number of pixels.</param>
            <returns>New instance of <c>Measurement</c> class.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.Points(System.Double)">
            <summary>
            Returns a new instance of <c>Measurement</c> that represents length in points.
            </summary>
            <param name="value">Number of points.</param>
            <returns>New instance of <c>Measurement</c> class.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.Millimeters(System.Double)">
            <summary>
            Returns a new instance of <c>Measurement</c> that represents length in millimeters.
            </summary>
            <param name="value">Number of millimeters.</param>
            <returns>New instance of <c>Measurement</c> class.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.Inches(System.Double)">
            <summary>
            Returns a new instance of <c>Measurement</c> that represents length in inches.
            </summary>
            <param name="value">Number of inches.</param>
            <returns>New instance of <c>Measurement</c> class.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.MapUnits(System.Double)">
            <summary>
            Returns a new instance of <c>Measurement</c> that represents length in maps Spatial Reference units.
            </summary>
            <param name="value">Number of units.</param>
            <returns>New instance of <c>Measurement</c> class.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.MetersOnEarth(System.Double)">
            <summary>
            Returns a new instance of <c>Measurement</c> that represents length in meters on the Earth.
            </summary>
            <param name="value">Number of meters.</param>
            <returns>New instance of <c>Measurement</c> class.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.#ctor(System.Double,Aspose.Gis.Rendering.Unit)">
            <summary>
            Creates new instance.
            </summary>
            <param name="value">A number that indicates the length of the measurement.</param>
            <param name="unit">A unit of measurement.</param>
        </member>
        <member name="P:Aspose.Gis.Rendering.Measurement.Value">
            <summary>
            A number that indicates the length of the measurement.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Measurement.Unit">
            <summary>
            A unit of measurement.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.op_Multiply(Aspose.Gis.Rendering.Measurement,System.Double)">
            <summary>
            Multiplies measurement by factor.
            </summary>
            <param name="measurement">Measurement to multiply.</param>
            <param name="factor">Factor to divide on.</param>
            <returns>A measurement with <see cref="P:Aspose.Gis.Rendering.Measurement.Value"/> multiplied by factor.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.op_Division(Aspose.Gis.Rendering.Measurement,System.Double)">
            <summary>
            Divide measurement by factor.
            </summary>
            <param name="measurement">Measurement to multiply.</param>
            <param name="factor">Factor to divide by.</param>
            <returns>A measurement with <see cref="P:Aspose.Gis.Rendering.Measurement.Value"/> divided by factor.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Measurement.ToString">
            <summary>Returns this instance converted to string.</summary>
            <returns>String representation of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Rendering</c> namespace provides classes for rendering maps.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.NamespaceGroupDoc">
            <summary>
            <c>Aspose.Gis.Rendering</c> namespace provides classes for rendering maps.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.RasterMapLayer">
            <summary>
            A layer inside <see cref="T:Aspose.Gis.Rendering.Map"/> that represents a raster layer data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.RasterMapLayer.#ctor(Aspose.Gis.Raster.RasterLayer,Aspose.Gis.Rendering.Colorizers.RasterColorizer,System.Boolean)">
            <summary>
            Creates new instance.
            </summary>
            <param name="layer">Raster layer.</param>
            <param name="colorizer">Symbolizer to use to render layer. If <see langword="null"/>, default colorizer will be used.</param>
            <param name="keepOpen">
            <see langword="true"/> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> object is disposed; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.RasterMapLayer.Colorizer">
            <summary>
            Colorizer to use to render cells of the raster.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RasterMapLayer.Resampling">
            <summary>
            Specifies warp options of the layer on a map.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RasterMapLayer.SpatialReferenceSystem">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Rendering.RasterMapLayer.Render(Aspose.Gis.Rendering.RenderingContext)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.Rendering.RasterMapLayer.Dispose">
            <summary> Disposes resources. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.RasterMapLayer.GetExtent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.Rendering.RasterMapResampling">
            <summary>
            This class describes how to resample a raster layer when rendering a map.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RasterMapResampling.Width">
            <summary>
            Specifies raster width on a map in pixels and columns.
            If the value is set to 0, the width is automatically computed. The default value is "0".
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RasterMapResampling.Height">
            <summary>
            Specifies raster height on a map in pixels and columns.
            If the value is set to 0, the height is automatically computed. The default value is "0".
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Renderer">
            <summary>
            A base class for renderers.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Renderer.Render(Aspose.Gis.Rendering.Map,System.String)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <exception cref="T:System.ArgumentNullException">Any argument is <see langword="null"/>.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Renderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <exception cref="T:System.ArgumentNullException">Any argument is <see langword="null"/>.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Renderer.Render(Aspose.Gis.Rendering.Map,System.String,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Renderer.Render(Aspose.Gis.Rendering.Map,Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.RendererOptions)">
            <summary>
            Renders map.
            </summary>
            <param name="map">Map to render.</param>
            <param name="outputPath">Path to the output file.</param>
            <param name="options">Renderer-specific options.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.RendererOptions">
            <summary>
            Renderer options.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Renderers">
            <summary>
            Renderers for all supported formats.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Renderers.Svg">
            <summary>
            A renderer that renders into the SVG format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Renderers.GSvg">
            <summary>
            A renderer that renders into the SVG format (no header, see <see cref="M:Aspose.Gis.Geometries.Geometry.ToSvg(Aspose.Gis.Extent)"/>>). 
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Renderers.Png">
            <summary>
            A renderer that renders into the PNG format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Renderers.Jpeg">
            <summary>
            A renderer that renders into the JPEG format.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Renderers.Bmp">
            <summary>
            A renderer that renders into the BMP format.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.RenderingContext">
            <summary>
            A context for rendering a map layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.RenderingContext.#ctor(Aspose.Gis.Rendering.Map)">
            <summary>
            Creates new rendering context that will render on the provided map via provided painter.
            </summary>
            <param name="map"></param>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.Width">
            <summary> Width of the output image. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.Height">
            <summary> Height of the output image. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.PixelWidth">
            <summary> Width in pixels of the output image. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.PixelHeight">
            <summary> Height in pixels of the output image. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.Resolution">
            <summary> Resolution of output image. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.VisibleExtent">
            <summary> Extent that is actually being rendered. This extent keeps proportion and is aligned in the center. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.PixelsExtent">
            <summary> Extent of the output image (0, 0, width-in-pixels, height-in-pixels) </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.ToPixelsClipper">
            <summary> Clips geometries to <see cref="P:Aspose.Gis.Rendering.RenderingContext.PixelsExtent"/> </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.MapToPixelTransformation">
            <summary> Transformation from target SRS to pixels on image. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.TargetSrs">
            <summary> Target SRS to render to. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.MapUnitsPerPixel">
            <summary> Number of map units per one pixel. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.ExtentSetByUser">
            <summary> Whether extent was set by user (not set by user). </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.BackgroundColor">
            <summary> Background color. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.StandardScaleDenominator">
            <summary> Scale denominator </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.MetersPerMapUnit">
            <summary> Geographical srs allows for elliptical curvature. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.LabelsPlacer">
            <summary> Labels placer to be used to add labels. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.RenderingContext.Painter">
            <summary> A painter to use for rendering. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.RenderingContextExtensions">
            <summary>
            Extensions to the <see cref="T:Aspose.Gis.Rendering.RenderingContext"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.RenderingContextExtensions.ToPainterUnits(Aspose.Gis.Rendering.RenderingContext,Aspose.Gis.Rendering.Measurement)">
            <summary>
            Converts measurement to output image units.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.RenderingContextExtensions.ToPaintEngineOptions(Aspose.Gis.Rendering.RenderingContext)">
            <summary>
            Creates paint engine options from rendering context.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.RenderingContextExtensions.ResolveGeometry(Aspose.Gis.Rendering.RenderingContext,Aspose.Gis.Geometries.IGeometry,System.Boolean)">
            <summary>
            Transform geometry to pixels and filter geometries out of extent.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Rendering.Sld</c> namespace provides classes for configuring SLD import.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldBinaryOperator">
            <summary>
            Represents a binary operator expression.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldExpression">
            <summary>
            SLD expression represents an expression in SLD document.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Sld.SldExpression.Invalid">
            <summary>
            Represents an invalid expression.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldExpression.CreateFromFirstAppropriateChild(System.Xml.Linq.XElement)">
            <summary>
            Tries to create an SLD expression from every child of the element and returns first successfully created expression.
            Returns <see cref="F:Aspose.Gis.Rendering.Sld.SldExpression.Invalid"/> on fail.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldExpression.Evaluate(Aspose.Gis.Feature)">
            <summary>
            Evaluates the expression for the provided feature.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldGraphic">
            <summary>
            This class matches sld graphic with the corresponding symbolizer.
            Each symbolizers defines own strategy to apply data from the graphic.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldGraphic.MarkGraphic">
            <summary> Strategy allows to fill the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker"/> from a 'mark' element. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldGraphic.ExternalGraphic">
            <summary> Strategy allows to fill the <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker"/> from a 'ExternalGraphic' element. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldImportOptions">
            <summary>
            Options for the import of Styled Layer Descriptor file (Sld).
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldImportOptions.LoadInternetResources">
            <summary>
            Determines whether Aspose.GIS is allowed to load sources from Internet.
            If set to <see langword="false"/>, schemas with absolute URIs that does not start with 'file://' would not be loaded.
            Default is <see langword="false"/>.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldLiteralExpression">
            <summary>
            An expression that always return the same value.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldTernaryOperator">
            <summary>
            Represents a ternary operator expression.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldUnaryOpeartor">
            <summary>
            Represents an unary operator expression.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldValue">
            <summary>
            A result of evaluation of <see cref="T:Aspose.Gis.Rendering.Sld.SldExpression"/>s.
            </summary>
            <remarks>
            Some operations on values cast them implicitly.
            Whenever one value in comparison or equality operation is numeric, the other one is casted to numeric.
            Whenever an arithmetic operation is performed, both values are casted to numeric.
            Whenever a logic operation is performed, all values are casted to boolean.
            If cast is failed, an <see cref="P:Aspose.Gis.Rendering.Sld.SldValue.Error"/> is returned.
            Cast to numeric succeeds when
            - value is already numeric
            - value is string that can be parsed as numeric
            - value is boolean (true converts to 1, false converts to 0)
            In all other cases cast is failing and the result of computation is <see cref="P:Aspose.Gis.Rendering.Sld.SldValue.Error"/>.
            Cast to boolean succeeds when value is not an error.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.CreateString(System.String)">
            <summary>
            Creates new value from string argument.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.CreateNumeric(System.Double)">
            <summary>
            Creates new value from numeric argument.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.CreateBoolean(System.Boolean)">
            <summary>
            Creates new value from boolean argument.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.Null">
            <summary>
            A null expression.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.Error">
            <summary>
            Represents error in evaluation.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.ValueType">
            <summary>
            Gets type of this value.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.BooleanValue">
            <summary>
            Returns value of this value if its type is boolean.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.NumericValue">
            <summary>
            Returns value of this value if its type is numeric.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.StringValue">
            <summary>
            Returns value of this value if its type is string.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.IsNull">
            <summary> Gets a value indicating if type of this value is null. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.IsError">
            <summary> Gets a value indicating if type of this value is error. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.IsBoolean">
            <summary> Gets a value indicating if type of this value is boolean. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.IsNumeric">
            <summary> Gets a value indicating if type of this value is numeric. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Sld.SldValue.IsString">
            <summary> Gets a value indicating if type of this value is string. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.IsLike(Aspose.Gis.Rendering.Sld.SldValue,Aspose.Gis.Common.GlobOptions)">
            <summary>
            Matches this value against pattern. Casts this value and pattern to strings if needed.
            Fails if this or argument is error or null.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.Not">
            <summary>
            Negates this value. Casts this to bool if needed. Fails if this is error.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.Or(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Logic OR between this value and the argument.
            Fails if both values are errors, or one value is error and another value is false.
            If one value is true and the other one is error, returns true rather then error.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.And(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Logic AND between this value and the argument.
            Fails if both values are errors, or one value is error and another value is true.
            If one value is false and the other one is error, returns false rather then error.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.EqualTo(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Determines if this value equal to the other one.
            Casts values to each other if needed.
            Fails if either of values is error.
            Fails if one value is numeric and other one can not be casted to numeric.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.GreaterThan(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Compares two values.
            Fails if either value is error, null or boolean.
            Fails if one value is numeric and the other one can not be casted to numeric.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.LessThan(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Compares two values.
            Fails if either value is error, null or boolean.
            Fails if one value is numeric and the other one can not be casted to numeric.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.Add(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Adds two values.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.Sub(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Substitutes two values. Fails if either of values is failing to cast to numeric.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.Mul(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Multiplies two values. Fails if either of values is failing to cast to numeric.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.Div(Aspose.Gis.Rendering.Sld.SldValue)">
            <summary>
            Divides two values. Fails if either of values is failing to cast to numeric.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.CastToString">
            <summary>
            Casts value to string. Result is guaranteed to be of type 'string'.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Sld.SldValue.CastToBoolean">
            <summary>
            Casts value to boolean. Result is guaranteed to be of tpe 'boolean'.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Sld.SldValueReferenceExpression">
            <summary>
            An expression that returns value of the feature attribute.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.StrokeStyle">
            <summary>
            Specifies a stroke style.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.StrokeStyle.Solid">
            <summary> Specifies a plain line. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.StrokeStyle.None">
            <summary> Specifies, that no line should be drawn. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.StrokeStyle.Dash">
            <summary> Specifies a dash line. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.StrokeStyle.Dot">
            <summary> Specifies a dotted line. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.StrokeStyle.DashDot">
            <summary> Specifies alternate dots and dashes . </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.StrokeStyle.DashDotDot">
            <summary> Specifies a dash-dot-dot line. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.StrokeStyle.Custom">
            <summary> Custom dash pattern line. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterNetMesh">
            <summary>
            This class allows us to split points by cells to optimize searching for these points.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterNetMesh.#ctor(System.Double)">
            <summary> Create an instance of <see cref="T:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterNetMesh"/> </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterNetMesh.Points">
            <summary> All points from the net. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterNetMesh.Add(Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoint)">
            <summary> Searches for a cell for the specified point, and then adds that point to the net.  </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterNetMesh.ProcessInRadius(Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoint,System.Int32,Aspose.Gis.Rendering.Symbolizers.Clusters.MeshCellCallback)">
            <summary> Searches for the nearest points. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterNetMesh.Remove(Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoint)">
            <summary> Deletes the specified point from the net. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoint">
            <summary>
            This class wraps a regular point in a clustering algorithm.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoint.PointNumber">
            <summary> The point number from an input array. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoint.Point">
            <summary> The point from an input array. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoints">
            <summary>
            The clustered points.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.ClusterPoints.CalculateAverage">
            <summary> Calculates the center of the clustered points. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.Clusters.MeshCellCallback">
            <summary> Represents a delegate, which provides access to points in the cells reading. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.Clusters.NearestPointsClustering">
            <summary>
            The Nearest Points Clustering Algorithm.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.NearestPointsClustering.GetClusters(System.Collections.Generic.IEnumerable{Aspose.Gis.Geometries.IPoint},System.Double)">
            <summary> Create an instance of <see cref="T:Aspose.Gis.Rendering.Symbolizers.Clusters.NearestPointsClustering"/>. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.NearestPointsClustering.GetNextCluster(System.Double)">
            <summary> Returns encountered next cluster if there is more than one with the maximum number of points. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Clusters.NearestPointsClustering.DistanceSquared(Aspose.Gis.Geometries.IPoint,Aspose.Gis.Geometries.IPoint)">
            <summary> Calculates the distance squared between two points. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer">
            <summary> Renders a symbolizer that contains other symbolizers. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.CreateByFeatures(System.Collections.Generic.IReadOnlyList{Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer},System.Action{Aspose.Gis.Rendering.Symbolizers.FeatureContext,Aspose.Gis.Geometries.IGeometry,System.ValueTuple{System.Int32,System.Int32}})">
            <summary>
            Gets a composite renderer that render symbolizer by features.
            </summary>
            <param name="symbolizers">A list of symbolizers contained in composite symbolizer.</param>
            <param name="renderCallback">A callback that will be called to render.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.CreateByLayers(System.Collections.Generic.IReadOnlyList{Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer},System.Action{Aspose.Gis.Rendering.Symbolizers.FeatureContext,Aspose.Gis.Geometries.IGeometry,System.ValueTuple{System.Int32,System.Int32}})">
            <summary>
            Gets a composite renderer that render symbolizer by layers.
            </summary>
            <param name="symbolizers">A list of symbolizers contained in composite symbolizer.</param>
            <param name="renderCallback">A callback that will be called to render.</param>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.LayersCount">
            <summary> Number of layers in symbolizer. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.RenderLayer(Aspose.Gis.Rendering.Symbolizers.FeatureContext,Aspose.Gis.Geometries.IGeometry,System.Int32)">
            <summary> Renders specified feature with specified layer. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.ByFeaturesRenderer.LayersCount">
            <summary> Number of layers in symbolizer. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.ByFeaturesRenderer.RenderLayer(Aspose.Gis.Rendering.Symbolizers.FeatureContext,Aspose.Gis.Geometries.IGeometry,System.Int32)">
            <summary> Renders specified feature with specified layer. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.ByLayersRenderer.LayersCount">
            <summary> Number of layers in symbolizer. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.CompositeSymbolizerRenderer.ByLayersRenderer.RenderLayer(Aspose.Gis.Rendering.Symbolizers.FeatureContext,Aspose.Gis.Geometries.IGeometry,System.Int32)">
            <summary> Renders specified feature with specified layer. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.FeatureContext">
            <summary>
            A context for rendering a single feature.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.GeometryGenerator">
            <summary>
            Decorate a symbolizer to modify feature's geometry before rendering.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.GeometryGenerator.Symbolizer">
            <summary>
            Specifies a symbolizer to apply to the modified geometry.
            Default is <see langword="NullVectorSymbolizer"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.GeometryGenerator.Expression">
            <summary>
            Provides a way to substitute the feature geometry with a one modified for a symbolizer.
            Default is <see langword="null"/> (use feature geometry as-is).
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor">
            <summary> Specifies side to be aligned horizontally. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor.Center">
            <summary> Specifies that centers will be aligned. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor.Left">
            <summary> Specifies that left sides will be aligned. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.HorizontalAnchor.Right">
            <summary> Specifies that right sides will be aligned. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer">
            <summary>
            A symbolizer that renders several other symbolizers.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.#ctor">
            <summary>
            Creates new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.#ctor(Aspose.Gis.Rendering.Symbolizers.RenderingOrder)">
            <summary>
            Creates new instance.
            </summary>
            <param name="renderingOrder">
            Determines the rendering order.
            <ul>
            <li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByFeatures"/> -
            render feature with all symbolizers, then proceed to the next feature. </li>
            <li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByLayers"/> -
            render all features with a symbolizer, then proceed with drawing features to the next symbolizer. </li>
            </ul>
            </param>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.RenderingOrder">
            <summary>
            Determines the rendering order.
            <ul>
            <li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByFeatures"/> -
            render all symbolizers for the feature, then proceed to the next feature. </li>
            <li><see cref="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByLayers"/> -
            render all features with the symbolizer, then proceed to the next symbolizer. </li>
            </ul>
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.Count">
            <summary>Gets the number of symbolizers.</summary>
            <returns>The number of symbolizers. </returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.Item(System.Int32)">
            <summary>Gets the symbolizer at the specified index .</summary>
            <param name="index">The zero-based index of the symbolizer to get. </param>
            <returns>The symbolizer at the specified index.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.LayeredSymbolizer.Add(Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Adds the specified symbolizer.
            </summary>
            <param name="symbolizer">The symbolizer to add.</param>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.MarkerCluster">
            <summary>
            Marker cluster symbolizer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerCluster.#ctor(Aspose.Gis.Rendering.Measurement)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerCluster" /> class.
            </summary>
            <param name="distance">Specifies the distance that collects the nearest points.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The argument is less than or equal to zero.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerCluster.#ctor(Aspose.Gis.Rendering.Symbolizers.MarkerCluster)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerCluster" /> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerCluster" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerCluster.Marker">
            <summary> Specifies the marker symbolizer in the cluster center. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerCluster.NestedMarker">
            <summary> Specifies the marker symbolizer for nested cluster points. The default is <see cref="P:Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer.Null"/>.</summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerCluster.FeaturesBasedConfiguration">
            <summary>
            A callback that is used to configure this symbolizer before rendering a cluster center.
            </summary>
            <remarks>
            This callback is invoked before rendering every cluster center. It accepts a features that are about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on features' attributes.
            </remarks>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine">
            <summary>
            Marker line symbolizer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine" /> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerLine.#ctor(Aspose.Gis.Rendering.Symbolizers.MarkerLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine" /> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerLine" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.Marker">
            <summary> Specifies the marker symbolizer along the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.Interval">
            <summary> Specifies the interval between markers along the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.OffsetAlongLine">
            <summary> Specifies the offset along the line for the first marker. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.Offset">
            <summary>
            Specifies offset from the original line.
            For positive distance the offset will be at the left side of the input line (relative to the line direction).
            For a negative distance it will be at the right side.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.RotateMarkers">
            <summary> Specifies whether markers should be rotated along the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerLine.FeatureBasedConfiguration">
            <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
            <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill">
            <summary>
            Marker pattern fill symbolizer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill" /> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.#ctor(Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill" /> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.Marker">
            <summary> Specifies the marker symbolizer for filling. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.HorizontalInterval">
            <summary> Specifies the horizontal interval between markers. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.VerticalInterval">
            <summary> Specifies the vertical interval between markers. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.HorizontalDisplacement">
            <summary> Specifies the horizontal offset for markers in even horizontal line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.VerticalDisplacement">
            <summary> Specifies the vertical offset for markers in even vertical line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MarkerPatternFill.FeatureBasedConfiguration">
            <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
            <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType">
            <summary>
            A shape type of the marker.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Circle">
            <summary> Circle shape. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Triangle">
            <summary> Triangle shape. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Square">
            <summary> Square shape. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Star">
            <summary> Star shape. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.Cross">
            <summary> Cross shape. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.MarkerShapeType.X">
            <summary> 'X' letter shape. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer">
            <summary>
            Applies correct symbolizer to a feature geometry according to its geometry type.
            </summary>
            <remarks>
            This is useful for layers of the Mixed geometry type or for layers containing geometry collections.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer.#ctor">
            <summary>
            Creates new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer.PointSymbolizer">
            <summary>
            Specifies a symbolizer to use for point geometries in the layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer.LineSymbolizer">
            <summary>
            Specifies a symbolizer to use for line geometries in the layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.MixedGeometrySymbolizer.PolygonSymbolizer">
            <summary>
            Specifies a symbolizer to use for polygon geometries in the layer.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.Rendering.Symbolizers</c> namespace provides classes for configuring rendering vector features.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.NullVectorSymbolizer">
            <summary>
            The <c>NullSymbolizer</c> draws nothing and effectively skips rendering of a geometry it is applied to.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.NullVectorSymbolizer.Instance">
            <summary>
            Gets an instance of <c>NullSymbolizer</c>.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.OffsetBuilder">
            <summary>
            This class calculates offsets for shapes.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.OffsetBuilder.BuildForPolygon(Aspose.Gis.Geometries.IPolygon,System.Double)">
            <summary>
            Builds offsets for a polygon.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.OffsetBuilder.BuildForLine(System.Collections.Generic.IReadOnlyList{Aspose.Gis.Common.Coordinate},System.Double)">
            <summary>
            Builds offsets for a polyline
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker">
            <summary>
            This symbolizer renders a provided raster image.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.#ctor(System.String)">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker"/> class. </summary>
            <param name="imagePath">Path to the file.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.#ctor(Aspose.Gis.AbstractPath)">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker"/> class. </summary>
            <param name="imagePath">Path to the file.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.#ctor(Aspose.Gis.Rendering.Symbolizers.RasterImageMarker)">
            <summary> Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker"/> class. </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Width">
            <summary> Specifies the width of the marker. </summary>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than zero. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Height">
            <summary> Specifies the height of the marker. </summary>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than zero. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Opacity">
            <summary> Opacity of the layer. Default value is 1.0. </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Argument is less than 0 or greater than 1.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.HorizontalAnchorPoint">
            <summary> specifies which side of a marker shape will be aligned horizontally with the point location. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.VerticalAnchorPoint">
            <summary> Specifies which side of a marker shape will be aligned vertically with the point location. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.HorizontalOffset">
            <summary> Specifies horizontal offset from a point location to the shape anchor point. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.VerticalOffset">
            <summary> Specifies vertical offset from a point location to the shape anchor point. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Rotation">
            <summary>
            Specifies the rotation of the symbol about its center point, in decimal degrees.
            Positive values indicate rotation in the clockwise direction, negative values indicate counter-clockwise rotation.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.FeatureBasedConfiguration">
            <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
            <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RasterImageMarker.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.RenderingOrder">
            <summary>
            Determines the rendering order.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByFeatures">
            <summary>
            Render feature with all symbolizers, then proceed to the next feature.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.RenderingOrder.ByLayers">
            <summary>
            Render all features with a symbolizer, then proceed with drawing features to the next symbolizer.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.Rule">
            <summary>
            A user-defined rule for <see cref="T:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Rule.CreateFilterRule(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Creates new rule that applies a symbolizer to feature whenever it passes filter.
            </summary>
            <param name="filter">Determines when symbolizer should be used.</param>
            <param name="symbolizer">Symbolizer to apply.</param>
            <exception cref="T:System.ArgumentNullException">Filter is <see langword="null"/>.</exception>
            <returns> New Rule object. </returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Rule.CreateElseRule(Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Creates new rule that applies a symbolizer to feature whenever it doesn't match any filter rule.
            </summary>
            <param name="symbolizer">Symbolizer to apply.</param>
            <returns> New Rule object. </returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.IsElseRule">
            <summary>
            Gets a value indicating whether this rule is "else-rule".
            </summary>
            <remarks>
            "Else-rule" applies symbolizer to a feature if feature doesn't match any filter rule.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.IsFilterRule">
            <summary>
            Gets a value indicating whether this rule is "filter-rule".
            </summary>
            <remarks>
            "filter-rule" applies symbolizer to a feature if <see cref="P:Aspose.Gis.Rendering.Symbolizers.Rule.Filter"/> returns <see langword="true"/> for the feature.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.Filter">
            <summary>
            Determines if "filter-rule" should apply symbolizer to the feature.
            If returns <see langword="true"/> symbolizer is used; otherwise, feature is skipped.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.Symbolizer">
            <summary>
            Symbolizer to apply to the feature.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.SldMinScaleDenominator">
            <summary> Min scale denominator imported from SLD. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Rule.SldMaxScaleDenominator">
            <summary> Max scale denominator imported from SLD. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Rule.#ctor(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Symbolizers.Rule.RuleType)">
            <summary>
            Creates new rule.
            </summary>
            <param name="filter">Determines when symbolizer should be used.</param>
            <param name="symbolizer">Symbolizer to use.</param>
            <param name="ruleType">Type of the rule.</param>
            <exception cref="T:System.ArgumentNullException">Any of the arguments is <see langword="null"/>.</exception>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer">
            <summary>
            Applies a symbolizer to feature geometries according to user-defined rules.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Count">
            <summary>Gets the number of rules.</summary>
            <returns>The number of rules. </returns>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Item(System.Int32)">
            <summary>Gets the rule at the specified index .</summary>
            <param name="index">The zero-based index of the rule to get. </param>
            <returns>The rule at the specified index.</returns>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Add(System.Func{Aspose.Gis.Feature,System.Boolean},Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Adds new <see cref="T:Aspose.Gis.Rendering.Symbolizers.Rule"/>.
            </summary>
            <param name="filter">Determines when symbolizer should be applied to a feature.</param>
            <param name="symbolizer">Symbolizer to apply to a feature when <paramref name="filter"/> returns true.</param>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.AddElseRule(Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Adds a symbolizer that will be applied to features that don't match any filtering rule.
            </summary>
            <param name="symbolizer">A symbolizer.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.Add(Aspose.Gis.Rendering.Symbolizers.Rule)">
            <summary>
            Adds a rule.
            </summary>
            <param name="rule">Rule to add.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.RuleBasedSymbolizer.GetEnumerator">
            <summary>Returns an enumerator that iterates through rules.</summary>
            <returns>An enumerator that can be used to iterate through rules.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.SimpleFill">
            <summary>
            Simple polygon symbolizer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleFill.#ctor">
            <summary>
            Creates new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleFill.#ctor(Aspose.Gis.Rendering.Symbolizers.SimpleFill)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleFill"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleFill" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.FillColor">
            <summary>
            Specifies the color and transparency for filling.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeColor">
            <summary> Specifies the color and transparency given to the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeWidth">
            <summary> Specifies the width of the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeLineJoin">
            <summary> Determines how lines are rendered at intersection of line segments. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeStyle">
            <summary> Specifies how the symbol lines should be drawn. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeDashPattern">
            <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and spaces
            in dashed lines.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.StrokeDashOffset">
            <summary> Specifies the distance from the start of a line to the beginning of a dash pattern. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.FillStyle">
            <summary>
            Specifies the fill style.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.HorizontalOffset">
            <summary>
            Specifies horizontal offset from a point location to the rendered shape.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.VerticalOffset">
            <summary>
            Specifies vertical offset from a polygon location to the rendered shape.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleFill.FeatureBasedConfiguration">
            <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
            <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleFill.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.SimpleLine">
            <summary>
            Simple line symbolizer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleLine.#ctor">
            <summary>
            Creates new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleLine.#ctor(Aspose.Gis.Rendering.Symbolizers.SimpleLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleLine"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleLine" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Color">
            <summary> Specifies the color and transparency given to the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Width">
            <summary> Specifies the width of the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.LineJoin">
            <summary> Determines how lines are rendered at intersection of line segments. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Style">
            <summary> Specifies how the symbol lines should be drawn. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.DashPattern">
            <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and spaces
            in dashed lines.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.DashOffset">
            <summary> Specifies the distance from the start of a line to the beginning of a dash pattern. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.CapStyle">
            <summary> Specifies how lines are rendered at their ends. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Offset">
            <summary>
            Specifies offset from the original line.
            For positive distance the offset will be at the left side of the input line (relative to the line direction).
            For a negative distance it will be at the right side.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleLine.FeatureBasedConfiguration">
            <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
            <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleLine.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker">
            <summary>
            Simple point symbolizer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.#ctor(Aspose.Gis.Rendering.Symbolizers.SimpleMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker"/> class.
            </summary>
            <param name="other">The other <see cref="T:Aspose.Gis.Rendering.Symbolizers.SimpleMarker" /> to copy data from.</param>
            <exception cref="T:System.ArgumentNullException">The argument is <see langword="null" />.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.FillColor">
            <summary> Specifies the color and transparency for filling. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.Size">
            <summary> Specifies the size of the marker. </summary>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than zero. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeColor">
            <summary> Specifies the color and transparency given to the line. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeWidth">
            <summary> Specifies the width of the line. </summary>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Value is less than to zero. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeLineJoin">
            <summary> Determines how lines are rendered at intersection of line segments. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeStyle">
            <summary> Specifies how the symbol lines should be drawn. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeDashPattern">
            <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and spaces
            in dashed lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set"> Any value in array is less or equal to zero. </exception>
            <exception cref="T:System.ArgumentNullException" accessor="set"> Argument is <see langword="null"/>. </exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.StrokeDashOffset">
            <summary> Specifies the distance from the start of a line to the beginning of a dash pattern. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.ShapeType">
            <summary> Specifies the shape of the marker. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.HorizontalAnchorPoint">
            <summary> Specifies which side of a marker shape will be aligned horizontally with the point location. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.VerticalAnchorPoint">
            <summary> Specifies which side of a marker shape will be aligned vertically with the point location. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.HorizontalOffset">
            <summary> Specifies horizontal offset from a point location to the shape anchor point. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.VerticalOffset">
            <summary> Specifies vertical offset from a point location to the shape anchor point. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.Rotation">
            <summary>
            Specifies the rotation of the symbol about its center point, in decimal degrees.
            Positive values indicate rotation in the clockwise direction, negative values indicate counter-clockwise rotation.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.FeatureBasedConfiguration">
            <summary>
            A callback that is used to configure this symbolizer before rendering a feature.
            </summary>
            <remarks>
            This callback is invoked before rendering every feature. It accepts a feature that is about to be
            rendered and a clone of this symbolizer. By changing properties of the clone, it is possible to
            update symbolizer's behavior based on feature's attributes.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.SimpleMarker.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this instance.</returns>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.Stroke">
            <summary> A stroke. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Stroke.Color">
            <summary> Specifies the stroke color. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Stroke.Width">
            <summary> Specifies the stroke width. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Stroke.Style">
            <summary> Specifies the stroke style. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Stroke.LineJoin">
            <summary> Determines how lines are rendered at intersections of line segments. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Stroke.CapStyle">
            <summary> Specifies how lines are rendered at their ends. </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Stroke.DashPattern">
            <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and
            spaces in dashed lines.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.Stroke.DashOffset">
            <summary>
            Specifies an array of distances that specifies the lengths of alternating dashes and
            spaces in dashed lines.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Stroke.ToPen(Aspose.Gis.Rendering.RenderingContext)">
            <summary> Creates a pen that renders this stroke. </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.Symbolizers.Stroke.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer">
            <summary>
            The abstract root class for the symbolizers that render vector features.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer.Null">
            <summary>
            The <see cref="T:Aspose.Gis.Rendering.Symbolizers.NullVectorSymbolizer"/> draws nothing and effectively skips rendering of a geometry it is applied to.
            </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor">
            <summary> Specifies side to be aligned vertically. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor.Center">
            <summary> Specifies that centers will be aligned. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor.Top">
            <summary> Specifies that top sides will be aligned. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Symbolizers.VerticalAnchor.Bottom">
            <summary> Specifies that bottom sides will be aligned </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.Unit">
            <summary>
            A unit of measurement.
            </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Unit.Pixels">
            <summary> Specifies pixels. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Unit.Points">
            <summary> Specifies points. There are 72 points in inch. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Unit.Millimeters">
            <summary> Specifies millimeters. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Unit.Inches">
            <summary> Specifies inches. One inch is 25.4 millimeters. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Unit.MapUnits">
            <summary> Specifies Spatial Reference specific map units. </summary>
        </member>
        <member name="F:Aspose.Gis.Rendering.Unit.MetersOnEarth">
            <summary> Specifies a length in actual meters on the Earth regardless what is the <see cref="P:Aspose.Gis.Rendering.Map.SpatialReferenceSystem"/>. </summary>
        </member>
        <member name="T:Aspose.Gis.Rendering.VectorMapLayer">
            <summary>
            A layer inside <see cref="T:Aspose.Gis.Rendering.Map"/> that represents a vector layer data.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.FeaturesSequence)">
            <summary>
            Creates new instance with default symbolizer.
            </summary>
            <param name="featuresSequence">Features sequence.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer)">
            <summary>
            Creates new instance with default symbolizer.
            </summary>
            <param name="featuresSequence">Features sequence.</param>
            <param name="symbolizer">Symbolizer to use to render layer. If <see langword="null"/>, default symbolizer will be used.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.FeaturesSequence,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates new instance with default symbolizer.
            </summary>
            <param name="featuresSequence">Features sequence.</param>
            <param name="symbolizer">Symbolizer to use to render layer. If <see langword="null"/>, default symbolizer will be used.</param>
            <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null"/>, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/> will be used.
            </param>
            <param name="defaultReferenceSystem">
            Specifies a value for a source spatial reference (layer\sequence) if that is missing. Default <b>null</b> will be used.
            </param>          
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.VectorLayer,System.Boolean)">
            <summary>
            Creates new instance with default symbolizer.
            </summary>
            <param name="layer">Vector layer.</param>
            <param name="keepOpen">
            <see langword="true"/> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> object is disposed; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,System.Boolean)">
            <summary>
            Creates new instance.
            </summary>
            <param name="layer">Vector layer.</param>
            <param name="symbolizer">Symbolizer to use to render layer. If <see langword="null"/>, default symbolizer will be used.</param>
            <param name="keepOpen">
            <see langword="true"/> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> object is disposed; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling,System.Boolean)">
            <summary>
            Creates new instance.
            </summary>
            <param name="layer">Vector layer.</param>
            <param name="symbolizer">
            Symbolizer to use to render layer. If <see langword="null"/>, default symbolizer will be used.
            </param>
            <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null"/>, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/> will be used.
            </param>
            <param name="keepOpen">
            <see langword="true"/> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> object is disposed; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.#ctor(Aspose.Gis.VectorLayer,Aspose.Gis.Rendering.Symbolizers.VectorSymbolizer,Aspose.Gis.Rendering.Labelings.Labeling,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,System.Boolean)">
            <summary>
            Creates new instance.
            </summary>
            <param name="layer">Vector layer.</param>
            <param name="symbolizer">
            Symbolizer to use to render layer. If <see langword="null"/>, default symbolizer will be used.
            </param>
            <param name="labeling">
            Labeling to use to label features in layer. If <see langword="null"/>, default <see cref="T:Aspose.Gis.Rendering.Labelings.NullLabeling"/> will be used.
            </param>
            <param name="defaultReferenceSystem">
            Specifies a value for a source spatial reference (layer\sequence) if that is missing. Default <b>null</b> will be used.
            </param>          
            <param name="keepOpen">
            <see langword="true"/> to leave the layer open after the <see cref="T:Aspose.Gis.Rendering.VectorMapLayer"/> object is disposed; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">Layer is <see langword="null"/>.</exception>
        </member>
        <member name="P:Aspose.Gis.Rendering.VectorMapLayer.FeaturesSequence">
            <summary>
            The features sequence represented by this <c>VectorMapLayer</c>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer">
            <summary>
            Symbolizer to use to render features of the layer.
            </summary>
        </member>
        <member name="P:Aspose.Gis.Rendering.VectorMapLayer.Labeling">
            <summary>
            Specifies warp options of the map layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.ImportSld(System.String,Aspose.Gis.Rendering.Sld.SldImportOptions)">
            <summary>
            Imports style from Styled Layer Descriptor file located at the specified path.
            </summary>
            <param name="path">Path to the Styled Layer Descriptor file.</param>
            <param name="options">Import options.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML.</exception>
            <exception cref="T:System.FormatException">No SLD style was found in the XML.</exception>
            <remarks>
            This method overwrites value of the <see cref="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer"/> property.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.ImportSld(Aspose.Gis.AbstractPath,Aspose.Gis.Rendering.Sld.SldImportOptions)">
            <summary>
            Imports style from Styled Layer Descriptor file located at the specified path.
            </summary>
            <param name="path">Path to the Styled Layer Descriptor file.</param>
            <param name="options">Import options.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML.</exception>
            <exception cref="T:System.FormatException">No SLD style was found in the XML.</exception>
            <remarks>
            This method overwrites value of the <see cref="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer"/> property.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.ImportSldFromString(System.String,Aspose.Gis.Rendering.Sld.SldImportOptions)">
            <summary>
            Imports style from the specified Styled Layer Descriptor string.
            </summary>
            <param name="sld">Styled Layer Descriptor.</param>
            <param name="options">Import options.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML.</exception>
            <exception cref="T:System.FormatException">No SLD style was found in the XML.</exception>
            <remarks>
            This method overwrites value of the <see cref="P:Aspose.Gis.Rendering.VectorMapLayer.Symbolizer"/> property.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.Rendering.VectorMapLayer.Dispose">
            <summary>
            Disposes resources.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SavingOptions">
            <summary>
            Options for saving <see cref="T:Aspose.Gis.FeaturesSequence"/> to file.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SavingOptions.DriverOptions">
            <summary> Driver-specific options for the output layer. </summary>
        </member>
        <member name="P:Aspose.Gis.SavingOptions.SpatialReferenceSystem">
            <summary> Driver-specific options for the output layer.</summary>
            <remarks> If not specified <see cref="P:Aspose.Gis.SavingOptions.SpatialReferenceSystem"/> of the input features sequence is used. </remarks>
        </member>
        <member name="P:Aspose.Gis.SavingOptions.AttributesConverter">
            <summary>
            A custom converter for attributes.
            If not <see langword="null" />, it is called for each attribute of the source layer and is expected to change it if necessary.
            </summary>
            <remarks> Attribute name and data type cannot be changed. </remarks>
        </member>
        <member name="T:Aspose.Gis.SpatialFeaturesSequence">
            <summary>
            <see cref="T:Aspose.Gis.SpatialFeaturesSequence"/> represents a set of vector features with resolved Spatial Refernce System.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferenceSystemMode">
            <summary>
            Specifies a mode of Spatial Reference System (SRS) writing in database
            if it's an unknown SRS.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferenceSystemMode.ThrowException">
            <summary> Throw exceptions if it's an unknown SRS for the database. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferenceSystemMode.WriteInSystemTable">
            <summary> Write SRS info in system table if it's an unknown SRS for the database. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferenceSystemMode.SetupToZero">
            <summary> Setup the SRID of a geometry to 'zero' if it's an unknown SRS for the database. </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Axis">
            <summary>
            An axis describes one dimension of SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Axis.#ctor(System.String,Aspose.Gis.SpatialReferencing.AxisDirection)">
            <summary>
            Creates new instance.
            </summary>
            <param name="name"> Name of the axis. </param>
            <param name="direction"> Direction of the axis. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Axis.Name">
            <summary> Name of this axis. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Axis.Direction">
            <summary> Direction of this axis. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsEastWestAxis">
            <summary> Detects if direction of axis is East or West. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsNorthSouthAxis">
            <summary> Detects if direction of axis is North or South. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsUpDownAxis">
            <summary> Detects if direction of axis is Up or Down. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Axis.IsOtherAxis">
            <summary> Detects if this axis direction is Other. </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Axis.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Axis.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.AxisDirection">
            <summary>
            Axis direction defines direction at which axis is pointing.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Invalid">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.North">
            <summary>
            Axis pointing to the north.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.South">
            <summary>
            Axis pointing to the south.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.East">
            <summary>
            Axis pointing to the east.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.West">
            <summary>
            Axis pointing to the west.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Up">
            <summary>
            Axis pointing up.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Down">
            <summary>
            Axis pointing down.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.AxisDirection.Other">
            <summary>
            Axis pointing to some other direction. This might be 'X' axis in geocentric SRS (it points to prime meridian).
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.BursaWolfParameters">
            <summary>
            Class that contains parameters of Bursa-Wolf formula to transform to another datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Null">
            <summary>
            Special value, indicating that parameters are unknown.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates new instance of <see cref="T:Aspose.Gis.SpatialReferencing.BursaWolfParameters"/>.
            </summary>
            <param name="dx"> Dx in meters. </param>
            <param name="dy"> Dy in meters. </param>
            <param name="dz"> Dz in meters. </param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates new instance of <see cref="T:Aspose.Gis.SpatialReferencing.BursaWolfParameters"/>.
            </summary>
            <param name="dx"> Dx in meters. </param>
            <param name="dy"> Dy in meters. </param>
            <param name="dz"> Dz in meters. </param>
            <param name="rx"> Rx in seconds. </param>
            <param name="ry"> Ry in seconds. </param>
            <param name="rz"> Rz in seconds. </param>
            <param name="scale"> Scale in parts per million. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Dx">
            <summary> Dx in meters. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Dy">
            <summary> Dy in meters. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Dz">
            <summary> Dz in meters. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Rx">
            <summary> Rx in seconds. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Ry">
            <summary> Ry in seconds. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Rz">
            <summary> Rz in seconds. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Scale">
            <summary> Scale in parts per million. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.IsNull">
            <summary>
            Determine whether this instance is <see cref="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Null"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.CreateFromToWgs84Entry(Aspose.Gis.Epsg.ToWgs84Entry)">
            <summary>
            Creates new instance from EPSG database entry.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
            <exception cref="T:System.InvalidOperationException">
            Object can not be represented in WKT. This happens if it contains <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/>
            or <see cref="F:System.Double.NegativeInfinity"/> values.
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.Equals(Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.op_Equality(Aspose.Gis.SpatialReferencing.BursaWolfParameters,Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.op_Inequality(Aspose.Gis.SpatialReferencing.BursaWolfParameters,Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.BursaWolfParameters.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
            <remarks>
            Since Equals of this class uses comparison of doubles with delta,
            nothing better then a constant can be used for this method.
            You are encouraged not to use objects of this class as keys in hash table, to avoid performance losidentifier2s.
            </remarks>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem">
            <summary>
            Compound SRS unites two underlying SRS, none of which can be compound.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Type">
            <summary>
            Type of this Compound SRS. Can be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic"/> if
            this Compound SRS is combination of geographic and vertical SRS, or <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected"/> if
            this Compound SRS is combination of projected and vertical SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.AsGeographic">
            <summary>
            Return geographic representation of this SRS. If this compound SRS indeed represents a geographic SRS, the result will
            be three dimensional geographic SRS (with longitude, latitude, height dimensions). Otherwise an exception will be thrown.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.AsProjected">
            <summary>
            Return projected representation of this SRS. If this compound SRS indeed represents a projected SRS, the result will
            be three dimensional projected SRS (with X, Y, height dimensions). Otherwise an exception will be thrown.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.IsCompound">
            <summary>
            Returns <see langword="true"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.AsCompound">
            <summary>
            Return this.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Head">
            <summary>
            First underlying SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Tail">
            <summary>
            Second underlying SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.DimensionsCount">
            <summary>
            Number of dimensions. For compound SRS this is sum of number of dimensions of underlying SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.HasPrimeMeridian">
            <summary>
            Compound SRS has prime meridian if any of underlying SRS have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.PrimeMeridian">
            <summary>
            Return prime meridian of this SRS.
            If both <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Head"/> and <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Tail"/> have prime meridian - return prime meridian of head.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.HasGeographicDatum">
            <summary>
            Compound SRS have geographic datum if any of underlying SRS have geographic datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.GeographicDatum">
            <summary>
            Return geographic datum of this SRS.
            If both <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Head"/> and <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Tail"/> have geographic datum - return geographic datum of head.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.GetAxis(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis"/> that describes dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Axis that describes dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.GetUnit(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit"/> of dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Unit of dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.Validate(System.String@)">
            <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)"/> for validity description.
            </summary>
            <param name="errorMessage"> Description of invalidity (if result is <see langword="false"/>)</param>
            <returns> If this SRS is valid - <see langword="true"/>, otherwise - <see langword="false"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>.
            </summary>
            <param name="other">Other SRS.</param>
            <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="head"> First underlying SRS. </param>
            <param name="tail"> Second underlying SRS. </param>
            <param name="identifier"> Identifier of this SRS. </param>
            <exception cref="T:System.ArgumentNullException"> One of underlying SRS is null. </exception>
            <exception cref="T:System.InvalidOperationException"> One of underlying SRS is compound. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Ellipsoid">
            <summary>
            Ellipsoid represents an ellipsoid, which approximates earth.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Wgs84">
            <summary>
            WGS 84 Ellipsoid.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Wgs72">
            <summary>
            WGS 72 Ellipsoid.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Grs80">
            <summary>
            GRS 1980 Ellipsoid.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Airy">
            <summary>
            Airy ellipsoid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.IsEquivalent(Aspose.Gis.SpatialReferencing.Ellipsoid,Aspose.Gis.SpatialReferencing.Ellipsoid)">
            <summary>
            Determines if two ellipsoids are equivalent.
            If ellipsoid A is equivalent to ellipsoid B, then they have same semi major axis and inverse flattening.
            </summary>
            <param name="ellipsoid1"> First ellipsoid. </param>
            <param name="ellipsoid2"> Second ellipsoid. </param>
            <returns> bool value, indicating whether two ellipsoids are equivalent. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.#ctor(System.String,System.Double,System.Double,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Creates new Ellipsoid.
            </summary>
            <param name="name"> Name of the ellipsoid. </param>
            <param name="semiMajorAxis"> Semi major axis of ellipsoid. </param>
            <param name="inverseFlattening"> Inverse flattening of ellipsoid. Should be 0 to create a spheroid. </param>
            <param name="identifier"> Identifier of the ellipsoid. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.IsValid">
            <summary> Detects whether ellipsoid is valid: its semi major axis is more then 0 and inverse flattening is positive or equal to 0. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.IsSphere">
            <summary> Detects whether this ellipsoid is a sphere. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.SemiMajorAxis">
            <summary> Semi major axis of ellipsoid. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.InverseFlattening">
            <summary> Inverse flattening of ellipsoid. 0 if this is a sphere. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.SemiMinorAxis">
            <summary> Semi minor axis of ellipsoid. Equals to semi major axis if this is a sphere. </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.IsEquivalent(Aspose.Gis.SpatialReferencing.Ellipsoid)">
            <summary>
            Determines if two ellipsoids are equivalent.
            If ellipsoid A is equivalent to ellipsoid B, then they have same semi major axis and inverse flattening.
            </summary>
            <param name="other"> Other ellipsoid. </param>
            <returns> bool value, indicating whether two ellipsoids are equivalent. </returns>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Ellipsoid.Properties">
            <summary>
            Class representing properties of an ellipsoid.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Ellipsoid.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
            <exception cref="T:System.InvalidOperationException">
            Object can not be represented in WKT. This happens if it contains <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/>
            or <see cref="F:System.Double.NegativeInfinity"/> values.
            </exception>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder">
            <summary>
            Represents order of axises in geocentric SRS.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.Invalid">
            <summary> Geocentric SRS is invalid and axises order can not be determined. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.XYZ">
            <summary> Order is X, Y, Z. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.XZY">
            <summary> Order is X, Z, Y. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.YXZ">
            <summary> Order is Y, X, Z. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.YZX">
            <summary> Order is Y, Z, X. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.ZXY">
            <summary> Order is Z, X, Y. </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.ZYX">
            <summary> Order is Z, Y, X. </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem">
            <summary>
            Geocentric SRS is 3 dimensional cartesian SRS with origin at earth center.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.LinearUnit">
            <summary>
            Unit, used in this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.AxisesOrder">
            <summary>
            Order of axises in this SRS.
            If this SRS is not valid and has wrong axises directions, <see cref="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.Invalid"/> is returned.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.Type">
            <summary>
            Return <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geocentric"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.AsGeocentric">
            <summary>
            Return this.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.DimensionsCount">
            <summary>
            Return 3, since geocentric SRS is always three dimensional.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.HasGeographicDatum">
            <summary>
            Return <see langword="true"/>, since geocentric SRS always have geographic datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.GeographicDatum">
            <summary>
            Return geographic datum of this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.HasPrimeMeridian">
            <summary>
            Return <see langword="true"/>, since geocentric SRS always have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.PrimeMeridian">
            <summary>
            Return prime meridian of this SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.GetAxis(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis"/> that describes dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Axis that describes dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.GetUnit(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit"/> of dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Unit of dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.Validate(System.String@)">
            <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)"/> for validity description.
            </summary>
            <param name="errorMessage"> Description of invalidity (if result is <see langword="false"/>)</param>
            <returns> If this SRS is valid - <see langword="true"/>, otherwise - <see langword="false"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.Unit,Aspose.Gis.SpatialReferencing.GeographicDatum,Aspose.Gis.SpatialReferencing.PrimeMeridian,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Creates new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="linearUnit"> Unit that is used for values in this SRS. Can't be null. </param>
            <param name="datum"> Datum of this SRS. Can't be null. </param>
            <param name="primeMeridian"> Prime meridian of this SRS. Can't be null. </param>
            <param name="axis0"> Axis that describes coordinates of zero dimension. </param>
            <param name="axis1"> Axis that describes coordinates of first dimension. </param>
            <param name="axis2"> Axis that describes coordinates of second dimension. </param>
            <param name="identifier"> Identifier of this SRS. </param>
            <exception cref="T:System.ArgumentNullException">
            One of required parameters is null.
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters">
            <summary>
            Parameters to create geocentric SRS.
            Parameters have reasonable defaults, so you will have to assign only some of them.
            If you assign <see langword="null"/> to any parameter, a default value will be used.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.Name">
            <summary>
            Name of geocentric SRS. Default is "Unnamed".
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.Datum">
            <summary>
            Datum of geocentric SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs84"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.PrimeMeridian">
            <summary>
            Prime meridian of this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Greenwich"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.LinearUnit">
            <summary>
            Units to be used in this SRS. Defaults to <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.XAxis">
            <summary>
            Axis of geocentric SRS that describes 'X' dimension (axis that points at prime meridian). 
            </summary>
            <exception cref="T:System.ArgumentException"> Axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.Other"/>. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.YAxis">
            <summary>
            Axis of geocentric SRS that describes 'Y' dimension (axis that points to the left or to the right of X axis on equatorial plane).
            Defaults to axis with <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East"/> direction.
            </summary>
            <exception cref="T:System.ArgumentException">
            Axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.West"/> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East"/>.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.ZAxis">
            <summary>
            Axis of geocentric SRS that describes 'Z' dimension (axis that points to the north or south pole).
            Defaults to axis with <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North"/> direction.
            </summary>
            <exception cref="T:System.ArgumentException">
            Axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North"/> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.South"/>.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters.AxisesOrder">
            <summary>
            Order of axises. Defaults to <see cref="F:Aspose.Gis.SpatialReferencing.GeocentricAxisesOrder.XYZ"/>.
            </summary>
            <exception cref="T:System.ArgumentException"> Thrown in setter when argument is not a valid enum member. </exception>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder">
            <summary>
            Represents order of axises in geographic SRS.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.Invalid">
            <summary>
            Geographic SRS is invalid and axises order can not be determined.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.LongitudeLatitude">
            <summary>
            Order is (Longitude, Latitude).
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.LatitudeLongitude">
            <summary>
            Order is (Latitude, Longitude).
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.GeographicDatum">
            <summary>
            Geographic datum relates longitude and latitude to particular place on earth.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs84">
            <summary>
            WGS 84 datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs72">
            <summary>
            WGS 72 datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Nad83">
            <summary>
            NAD 83 datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Etrs89">
            <summary>
            ETRS 89 datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Osgb36">
            <summary>
            OSGB 1936 datum.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.IsEquivalent(Aspose.Gis.SpatialReferencing.GeographicDatum,Aspose.Gis.SpatialReferencing.GeographicDatum)">
            <summary>
            Determines if two datums are equivalent.
            Same coordinates of equivalent datums match same place on Earth.
            Some parameters of equivalent datums can be different, for example <see cref="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name"/>.
            </summary>
            <param name="datum1"> First datum. </param>
            <param name="datum2"> Second datum. </param>
            <returns> bool value, indicating whether two datums are equivalent. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.#ctor(System.String,Aspose.Gis.SpatialReferencing.Ellipsoid,Aspose.Gis.SpatialReferencing.BursaWolfParameters,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Creates new instance.
            </summary>
            <param name="name"> Name of this datum. </param>
            <param name="ellipsoid"> Ellipsoid of this datum. Can't be null. </param>
            <param name="toWgs84Parameters">
            Parameters, that can be given to bursa wolf formula, to convert coordinates in this datum to coordinates in WGS84 datum.
            If this datum is close to WGS84 and no transformation needed, pass bursa wolf parameters with all values set to 0.
            If null, ToWgs84 will be set to <see cref="P:Aspose.Gis.SpatialReferencing.BursaWolfParameters.IsNull"/> parameters.
            </param>
            <param name="identifier"> Identifier of this datum. </param>
            <exception cref="T:System.ArgumentNullException"> <see cref="F:Aspose.Gis.SpatialReferencing.GeographicDatum.ellipsoid"/> is null. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Ellipsoid">
            <summary>
            Ellipsoid, used in this datum to approximate Earth.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.ToWgs84Parameters">
            <summary>
            BursaWolfParamters that can be used to transform coordinates in this datum to coordinates in WGS84 datum.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.IsEquivalent(Aspose.Gis.SpatialReferencing.GeographicDatum)">
            <summary>
            Determines if two datums are equivalent.
            Same coordinates of equivalent datums match same place on Earth.
            Some parameters of equivalent datums can be different, for example <see cref="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name"/>.
            </summary>
            <param name="other"> Other datum. </param>
            <returns> bool value, indicating whether two datums are equivalent. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeographicDatum.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
            <exception cref="T:System.InvalidOperationException">
            Object can not be represented in WKT. This happens if it contains <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/>
            or <see cref="F:System.Double.NegativeInfinity"/> values.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicDatum.IdentityName">
            <summary>
            Gets identity name of the datum. This is a part of OGC name without prime meridian name suffix.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem">
            <summary>
            A Geographic SRS is an SRS that is based on longitude and latitude.
            A Geographic SRS can be two dimensional or three dimensional.
            If geographic SRS is three dimensional, then it is actually a compound SRS of two dimensional SRS and vertical SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="identifier"> Identifier of this SRS. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.Type">
            <summary>
            Returns <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AsGeographic">
            <summary>
            Returns this.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.DimensionsCount">
            <summary>
            Returns dimensions count in this SRS. For geographic SRS this can be:
            two - if this is single geographic SRS.
            three - if this is compound SRS, which consists of single, two dimensional, geographic SRS and vertical SRS, that adds third dimension.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.HasPrimeMeridian">
            <summary>
            Returns <see langword="true"/>, since geographic SRS always have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.HasGeographicDatum">
            <summary>
            Returns <see langword="true"/>, since geographic SRS always have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AngularUnit">
            <summary>
            Unit, used for angular dimensions, in this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AxisesOrder">
            <summary>
            Order of axises in this SRS.
            If this SRS is not valid and has wrong axises directions, <see cref="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.Invalid"/> is returned.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters">
            <summary>
            Parameters to create geographic SRS.
            Parameters have reasonable defaults, so you will have to assign only some of them.
            If you assign <see langword="null"/> to any parameter, a default value will be used.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.Name">
            <summary>
            Name of geographic SRS. Default is "Unnamed".
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.Datum">
            <summary>
            Datum of geographic SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs84"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.PrimeMeridian">
            <summary>
            Prime meridian of this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Greenwich"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.AngularUnit">
            <summary>
            Units to be used in this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Degree"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.LongitudeAxis">
            <summary>
            Axis that describes longitude. Default is axis with east direction.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East"/> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.West"/>.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.LatitudeAxis">
            <summary>
            Axis that describes latitude. Defaults is axis with north direction.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North"/> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.South"/>.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters.AxisesOrder">
            <summary>
            Order of axises. Defaults to <see cref="F:Aspose.Gis.SpatialReferencing.GeographicAxisesOrder.LongitudeLatitude"/>.
            </summary>
            <exception cref="T:System.ArgumentException"> Thrown in setter when argument is not a valid enum member. </exception>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.IdentifiableObject">
            <summary>
            Represents an object that might have EPSG code and name.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name">
            <summary>
            Name of this object.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.EpsgCode">
            <summary>
            If this objects identifier is EPSG identifier - return its code. Otherwise - return -1.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Identifier">
            <summary>
            Identifier of this identifiable object.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.IdentifiableObject.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.IdentifiableObject.#ctor(System.String,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Creates new instance.
            </summary>
            <param name="name"> Name of instance. </param>
            <param name="identifier"> Identifier of instance. </param>
            <exception cref="T:System.ArgumentNullException"> name is null. </exception>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Identifier">
            <summary>
            Represents an identifier - a reference to external description of an object.
            If you create a SRS from WKT, <see cref="T:Aspose.Gis.SpatialReferencing.Identifier"/> corresponds to "AUTHORITY" keyword.
            </summary>
            <example>
            WGS 84 Spatial reference system have EPSG code 4326, so it might contain identifier:
            <code>new <see cref="T:Aspose.Gis.SpatialReferencing.Identifier"/> { <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName"/> = "EPSG", <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier"/> = 4326 };</code>
            WGS 84 Ellipsoid have EPSG code 7030, and it might contain identifier:
            <code>new <see cref="T:Aspose.Gis.SpatialReferencing.Identifier"/> { <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName"/> = "EPSG", <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier"/> = 7030 };</code>
            </example>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.Epsg(System.Int32)">
            <summary>
            Creates new Identifier that represents EPSG identifier with code <paramref name="epsgCode"/>.
            </summary>
            <param name="epsgCode"> Epsg code. </param>
            <returns>
            New identifier with <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName"/> "EPSG" and <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier"/> <paramref name="epsgCode"/>.
            If <paramref name="epsgCode"/> is less then 0 - return <see langword="null"/>;
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.#ctor(System.String,System.String)">
            <summary>
            Create new instance.
            </summary>
            <param name="authorityName"> <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName"/>. </param>
            <param name="authorityUniqueIdentifier"> <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier"/>. </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="authorityName"/> or <paramref name="authorityUniqueIdentifier"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName">
            <summary>
            A name of authority, which gave an <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier"/>.
            </summary>
            <example>EPSG</example>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityUniqueIdentifier">
            <summary>
            A unique way to represent an object within a <see cref="P:Aspose.Gis.SpatialReferencing.Identifier.AuthorityName"/>.
            </summary>
            <example>4326</example>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.GetEpsgCode">
            <summary>
            If this object represents a valid EPSG identifier (e.g. - authority name is "EPSG" and authority unique identifier is integer) -
            return it. Otherwise - return -1.
            </summary>
            <returns>
            EPSG identifier represented by this object. If this object doesn't represent an EPSG identifier - return -1.
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.Equals(Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.GetHashCode">
            <summary>Serves as the default hash function. </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.op_Equality(Aspose.Gis.SpatialReferencing.Identifier,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Identifier.op_Inequality(Aspose.Gis.SpatialReferencing.Identifier,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">The A instance.</param>
            <param name="b">The B instance.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem">
            <summary>
            This class is used to represent Compound SRS as Geographic SRS.
            Uses compound SRS, that contains Geographic SRS, to implement <see cref="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem"/> in the following way:
            All <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> members are passed to compound SRS.
            All extra members defined in <see cref="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem"/> are passed to geographic SRS within compound SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.#ctor(Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem)">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.IsCompound">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.AsProjected">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.AsGeocentric">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.AsVertical">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.AsLocal">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.AsCompound">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.DimensionsCount">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.PrimeMeridian">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.GeographicDatum">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.Validate(System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.GetAxis(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.GetUnit(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.AngularUnit">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundGeographicSpatialReferenceSystem.AxisesOrder">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem">
            <summary>
            This class is used to represent Compound SRS as Projected SRS.
            Uses compound SRS, that contains Projected SRS, to implement <see cref="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem"/> in the following way:
            All <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/> members are passed to compound SRS.
            All extra members defined in <see cref="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem"/> are passed to projected SRS within compound SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.#ctor(Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem)">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.IsCompound">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.AsGeographic">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.AsGeocentric">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.AsVertical">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.AsLocal">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.AsCompound">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.DimensionsCount">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.PrimeMeridian">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.GeographicDatum">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.Validate(System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.GetAxis(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.GetUnit(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.Base">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.Projection">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.LinearUnit">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.AngularUnit">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.CompoundProjectedSpatialReferenceSystem.AxisesOrder">
            <inheritdoc />
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.DatumTypes.Other">
            <summary> Unspecified vertical datum type (2000). </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.DatumTypes.Orthometric">
            <summary> A vertical datum for orthometric heights that are measured along the plumb line (2001). </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.DatumTypes.Ellipsoidal">
            <summary>
            A vertical datum for ellipsoidal heights that are measured along the normal to the
            ellipsoid used in the definition of horizontal datum (2002).
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.DatumTypes.BarometricAltitude">
            <summary> The vertical datum of altitudes or heights in the atmosphere (2003). </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.DatumTypes.Normal">
            <summary> A normal height system (2004). </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.DatumTypes.Geoid">
            <summary> A vertical datum of geoid model derived heights, also called GPS-derived heights (2005). </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.DatumTypes.Depth">
            <summary> This attribute is used to support the set of datums generated for hydrographic engineering projects (2006). </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.Default">
            <summary>
            Contains defaults for various SRS parameters.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.SpatialReferenceSystemName">
            <summary> Default SRS name ("Unnamed"). </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.GeographicDatum">
            <summary> Default geographic datum (<see cref="P:Aspose.Gis.SpatialReferencing.GeographicDatum.Wgs84"/>). </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.PrimeMeridian">
            <summary> Default prime meridian (<see cref="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Greenwich"/>). </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.AngularUnit">
            <summary> Default angular unit (<see cref="P:Aspose.Gis.SpatialReferencing.Unit.Degree"/>). </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.LinearUnit">
            <summary> Default linear unit (<see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter"/>). </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.VerticalUnit">
            <summary> Default vertical unit (<see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter"/>). </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.LongitudeAxis">
            <summary> Default longitude axis. Has east direction. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.LatitudeAxis">
            <summary> Default latitude axis. Has north direction. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.GeocentricXAxis">
            <summary> Default geocentric X axis. Has other direction. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.GeocentricYAxis">
            <summary> Default geocentric Y axis. Has east direction. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.GeocentricZAxis">
            <summary> Default geocentric Z axis. Has north direction. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.ProjectedXAxis">
            <summary> Default projected X axis. Has east direction. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.ProjectedYAxis">
            <summary> Default projected Y axis. Has north direction. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.Default.VerticalAxis">
            <summary> Default vertical axis. Has up direction. </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.NamesMapping">
            <summary>
            Rename table represents a key-value storage with OGC and ESRI names.
            This is "many to many" mapping, that is, two ESRI names can be mapped to one OGC name,
            two OGC names, can be mapped to one ESRI name.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.NamesMapping.Add(System.String,System.String)">
            <summary>
            Add new pair of names to rename table.
            First added pairs takes precedence, see example of <see cref="M:Aspose.Gis.SpatialReferencing.Internal.NamesMapping.RenameEsriToOgc(System.String)"/>.
            </summary>
            <param name="ogcName">OGC name.</param>
            <param name="esriName">ESRI name.</param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.NamesMapping.RenameEsriToOgc(System.String)">
            <summary>
            Returns OGC name of argument. 
            First added pairs takes precedence, see example.
            </summary>
            <param name="esri">Argument.</param>
            <returns>
            OGC name of argument. If there is no such ESRI name in table - return null.
            </returns>
            <example><code>
            var mapping = new NamesMapping();
            mapping.Add("esri_name", "ogc_name_1");
            mapping.Add("esri_name", "ogc_name_2");
            mapping.RenameEsriToOgc("esri_name); // "ogc_name_1"
            </code></example>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.NamesMapping.RenameOgcToEsri(System.String)">
            <summary>
            Returns ESRI name of argument. 
            First added pairs takes precedence.
            </summary>
            <param name="ogc">Argument.</param>
            <returns>
            ESRI name of argument. If there is no such OGC name in table - return null.
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.NamesMapping.RenameEsriToOgc``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Renames all keys in dictionary from ESRI to OGC.
            </summary>
            <typeparam name="TValue">Type of dictionary values.</typeparam>
            <param name="dictionary">Dictionary.</param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.NamesMapping.RenameOgcToEsri``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Renames all keys in dictionary from OGC to ESRI.
            </summary>
            <typeparam name="TValue">Type of dictionary values.</typeparam>
            <param name="dictionary">Dictionary.</param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.NamesMapping.RenameKey``1(System.Collections.Generic.IDictionary{System.String,``0},System.String,System.String)">
            <summary>
            Renames key in dictionary.
            If there is no <paramref name="oldKey"/> in dictionary - do nothing.
            If there already is <paramref name="newKey"/> in dictionary - override it.
            </summary>
            <param name="dictionary"> Dictionary. </param>
            <param name="oldKey">Old key.</param>
            <param name="newKey">New key</param>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.OgcEsriSrsTransformer">
            <summary>
            Transforms spatial reference systems to ESRI or OGC variant.
            </summary>
            <remarks>
            Methods that transform SRS return new SRS, with changed string properties (like datum name, unit name, etc).
            Some more complex conversion happens for projections (for examples, OGCs Polar_Stereographc is split into
            Stereographic_North_Pole or Stereographic_South_Pole when converted to ESRI)
            </remarks>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.OgcEsriSrsTransformer.ConvertToOgc(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Converts SRS to OGC (renames string fields, convert projection parameters).
            If SRS names / projection parameters are already in OGC variant, does nothing.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.OgcEsriSrsTransformer.ConvertToEsri(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Converts SRS to ESRI variant (renames string fields, convert projection parameters).
            If SRS names / projection parameters are already in ESRI variant, does nothing.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.OgcEsriSrsTransformer.GetProjectionParametersNamesMapping(System.String)">
            <summary> Finds NamesMapping that should be used to rename parameters of the projection with the specified name. </summary>
            <returns> NamesMapping that should be used for parameters renaming; null, if no renaming is required.</returns>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.OgcEsriSrsTransformer.DatumsNamesMapping">
            <summary>
            ESRI/OGC mapping of datum names.
            ESRI names, that can be transformed to OGC names just by removing a 'D_' prefix are not present.
            </summary>
            <remarks>
            Data source - https://github.com/Esri/projection-engine-db-doc
            ESRI names, that can be transformed to OGC names just by removing a 'D_' prefix were removed from
            the table. The table was created manually (and by one-time-use scripts). We should automate its generation
            and put it into separate file.
            </remarks>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.OgcEsriSrsTransformer.ProjectionParametersNamesMappings">
            <summary>
            Key of this dictionary is name of the projection. Value is names mapping that should be applied to projection parameters name,
            in order to transform them between OGC and ESRI.
            For example, for albers projection, when transforming from ESRI to OGC, "central_meridian" should be renamed to "longitude_of_center"
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo">
            <summary>
            Represents an information about the projection parameter.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo.Find(System.String)">
            <summary>
            Finds information for the parameter with specified name.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo.Find(System.Int32)">
            <summary>
            Finds information for the parameter with specified EPSG code.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo.ParameterType">
            <summary>
            Type of the parameter (angular, linear or other)
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo.GetOgcName">
            <summary>
            Function that returns preferred OGC name of the parameter. This name can depend on the projection method for the parameter.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo.Names">
            <summary>
            All possible names of the parameter.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo.EpsgCodes">
            <summary>
            All possible codes of the parameter in EPSG database.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo.DefaultValue">
            <summary>
            Default value of the parameter.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.ProjectionsRegistry">
            <summary>
            Holds information about projections, their names, their parameters names.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.ProjectionsRegistry.IdentifyProjection(Aspose.Gis.SpatialReferencing.Projection)">
            <summary>
            Detects identifier of projection.
            </summary>
            <param name="projection">Projection.</param>
            <returns>Identifier of projection. <see cref="F:Aspose.Gis.Projections.ProjectionMethodIdentifier.Invalid"/> if no identifier could be detected. </returns>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.ProjectionsRegistry.EpsgToProjectionId">
            <summary>
            Mapping from EPSG codes to projection identifiers.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.Internal.ProjectionsRegistry.NameToProjectionId">
            <summary>
            Mapping from OGC projection names to identifiers.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem">
            <summary>
            A Geographic SRS is an SRS that is based on longitude and latitude.
            This is default implementation of geographic SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.Unit,Aspose.Gis.SpatialReferencing.GeographicDatum,Aspose.Gis.SpatialReferencing.PrimeMeridian,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Creates new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="angularUnit"> Unit that is used for values in this SRS. Can't be null. </param>
            <param name="datum"> Datum of this SRS. Can't be null. </param>
            <param name="primeMeridian"> PrimeMeridian of this SRS. Can't be null. </param>
            <param name="axis0"> Axis that describes coordinates of zero dimension. </param>
            <param name="axis1"> Axis that describes coordinates of first dimension. </param>
            <param name="identifier"> Identifier of this SRS. </param>
            <exception cref="T:System.ArgumentNullException">
            One of required parameters is null. One axis is null and the other one is not.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.AngularUnit">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.DimensionsCount">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.GeographicDatum">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.PrimeMeridian">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.AxisesOrder">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.GetAxis(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.GetUnit(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.Validate(System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleGeographicSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem">
            <summary>
            Projected SRS is a result of application a projection to geographic SRS.
            This is default implementation of projected SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem,Aspose.Gis.SpatialReferencing.Projection,Aspose.Gis.SpatialReferencing.Unit,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Creates new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="base"> Underlying geographic SRS, to which projection is applied. Can't be null. </param>
            <param name="projection"> Projection that is applied to geographic SRS. Can't be null. </param>
            <param name="linearUnit"> Unit that is used for linear values. Can't be null. </param>
            <param name="axis0"> Axis that describes dimension 0. </param>
            <param name="axis1"> Axis that describes dimension 1. </param>
            <param name="identifier"> Identifier of this SRS. </param>
            <exception cref="T:System.ArgumentNullException">
            One of required parameters is null. One axis is null and the other one is not.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.Base">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.Projection">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.LinearUnit">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.AngularUnit">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.DimensionsCount">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.PrimeMeridian">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.GeographicDatum">
            <inheritdoc />
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.AxisesOrder">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.GetAxis(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.GetUnit(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.Validate(System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>.
            </summary>
            <param name="other">Other SRS.</param>
            <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Internal.SingleProjectedSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Internal.SrsFromEpsgFactory">
            <summary>
            Creates SRS by its EPSG code.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.LocalDatum">
            <summary>
            Indicates method used for measurements in local spatial reference system.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalDatum.#ctor(System.String,System.Int32,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance.
            </summary>
            <param name="name"> name of datum. </param>
            <param name="datumType"> integer number, representing type of datum. </param>
            <param name="identifier"> identifier of datum. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalDatum.DatumType">
            <summary>
            An integer number, indicating measurement method that had been used.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalDatum.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalDatum.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem">
            <summary>
            Local SRS related coordinates to some object, not earth.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Type">
            <summary>
            Return <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Local"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.AsLocal">
            <summary>
            Return this.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.LocalDatum">
            <summary>
            Datum, that describes measurements method.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Unit">
            <summary>
            Unit of this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.DimensionsCount">
            <summary>
            Number of dimensions in this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.HasPrimeMeridian">
            <summary>
            Returns <see langword="false"/>, since Local SRS doesn't have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.PrimeMeridian">
            <summary>
            Throws <see cref="T:System.InvalidOperationException"/>, since Local SRS doesn't have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.HasGeographicDatum">
            <summary>
            Returns <see langword="false"/>, since Local SRS doesn't have geographic datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.GeographicDatum">
            <summary>
            Throws <see cref="T:System.InvalidOperationException"/>, since Local SRS doesn't have geographic datum.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Validate(System.String@)">
            <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)"/> for validity description.
            </summary>
            <param name="errorMessage"> Description of invalidity (if result is <see langword="false"/>)</param>
            <returns> If this SRS is valid - <see langword="true"/>, otherwise - <see langword="false"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.GetAxis(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis"/> that describes dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Axis that describes dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.GetUnit(System.Int32)">
            <summary>
            Get <see cref="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.Unit"/> of dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Unit of dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>.
            </summary>
            <param name="other">Other SRS.</param>
            <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.LocalDatum,Aspose.Gis.SpatialReferencing.Unit,System.Collections.Generic.IEnumerable{Aspose.Gis.SpatialReferencing.Axis},Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="localDatum"> Datum of this SRS. </param>
            <param name="unit"> Unit of this SRS. </param>
            <param name="axises"> Axises of this SRS. </param>
            <param name="identifier"> Identifier of this SRS. </param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.NamespaceDoc">
            <summary>
            <c>Aspose.Gis.SpatialReferencing</c> namespace provides classes for working with spatial references (coordinate reference systems).
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.ParameterType">
            <summary>
            Determines type of parameter in <see cref="T:Aspose.Gis.SpatialReferencing.Projection"/>.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.ParameterType.Other">
            <summary>
            Type of parameter is unknown or none of the below.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.ParameterType.Linear">
            <summary>
            Type of parameter is linear (for example "false_easting").
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.ParameterType.Angular">
            <summary>
            Type of parameter is angular (for example "longitude_of_origin").
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.PrimeMeridian">
            <summary>
            PrimeMeridian represents a meridian at which longitude is defined to be 0.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Greenwich">
            <summary>
            Greenwich meridian.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.PrimeMeridian.#ctor(System.String,System.Double,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary> Creates new instance. </summary>
            <param name="name"> Name of this prime meridian. </param>
            <param name="longitude"> Longitude of prime meridian relative to Greenwich in degrees. </param>
            <param name="identifier"> Identifier of prime meridian. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.PrimeMeridian.Longitude">
            <summary>
            Distance from Greenwich meridian to prime meridian in degrees.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.PrimeMeridian.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.PrimeMeridian.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
            <exception cref="T:System.InvalidOperationException">
            Object can not be represented in WKT. This happens if it contains <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/>
            or <see cref="F:System.Double.NegativeInfinity"/> values.
            </exception>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder">
            <summary>
            Represents order of axises in geographic SRS.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.Invalid">
            <summary>
            Projected SRS is invalid and axises order can not be determined.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.XY">
            <summary>
            Order is (X, Y). (X is horizontal (East, West), Y is vertical (North, South)).
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.YX">
            <summary>
            Order is (Y, X). (X is horizontal axis (East, West), Y is vertical axis (North, South)).
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem">
            <summary>
            Projected SRS is a result of application a projection to geographic SRS.
            A projected SRS can be two dimensional or three dimensional.
            If projected SRS is three dimensional, then it is actually a compound SRS of two dimensional projected SRS and one dimensional vertical SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="identifier"> Identifier of this SRS. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Type">
            <summary>
            Returns <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.AsProjected">
            <summary>
            Return this.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.DimensionsCount">
            <summary>
            Returns dimensions count in this SRS. For projected SRS this can be:
            two - if this is single projected SRS.
            three - if this is compound SRS, which consists of single, two dimensional, projected SRS and vertical SRS, that adds third dimension.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.HasPrimeMeridian">
            <summary>
            Returns true, since projected SRS always have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.HasGeographicDatum">
            <summary>
            Returns true, since projected SRS always have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Base">
            <summary>
            Geographic SRS to which <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection"/> was applied to get this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection">
            <summary>
            Projection, that was applied to <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Base"/> to get this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.LinearUnit">
            <summary>
            Unit, that is used for linear dimensions in this SRS and for linear parameters of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.AngularUnit">
            <summary>
            Unit, that is used for angular values in this SRS and for angular parameters of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Projection"/>.
            Matches angular unit of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.Base"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.AxisesOrder">
            <summary>
            Order of axises in this SRS.
            If this SRS is not valid and has wrong axises directions, <see cref="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.Invalid"/> is returned.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.GetTransformationToBase">
            <summary>
            Gets transformation from this SRS to underlying geographic SRS. Returns null if transformation is failed to be created.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem.GetTransformationFromBase">
            <summary>
            Gets transformation from underlying geographic SRS to this SRS. Returns null if transformation is failed to be created.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters">
            <summary>
            Parameters to create projected SRS. Some of parameters have defaults.
            Some parameters have reasonable defaults, so you don't have to assign only them.
            If you assign <see langword="null"/> to those parameters, a default value will be used.
            <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.ProjectionMethodName"/> and <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Base"/> don't have defaults -
            you have to assign some non <see langword="null"/> value to this properties.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.#ctor">
            <summary>
            Creates new instance.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Name">
            <summary>
            Name of projected SRS. Default is "Unnamed".
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.LinearUnit">
            <summary>
            Units to be used in this SRS. Default is <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Base">
            <summary>
            Base geographic SRS (SRS to which projection is applied).
            You MUST set this property to not <see langword="null"/> value in order to create valid SRS,
            this property does not have any default.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.XAxis">
            <summary>
            Axis that describes X (horizontal) dimension. Defaults to axis with east direction.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.East"/> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.West"/>.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.YAxis">
            <summary>
            Axis that describes Y (vertical) dimension. Defaults to axis with north direction.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown from setter if axis direction is not <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.North"/> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.South"/>.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.AxisesOrder">
            <summary>
            Order of axises. Defaults to <see cref="F:Aspose.Gis.SpatialReferencing.ProjectedAxisesOrder.XY"/>.
            </summary>
            <exception cref="T:System.ArgumentException"> Thrown in setter when argument is not a valid enum member. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.ProjectionMethodName">
            <summary>
            Name of projection method. There is no default and you MUST set this parameter to not <see langword="null"/> value, since
            projected SRS with no projection name is useless.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.ProjectionMethodIdentifier">
            <summary>
            Identifier of projection method. There is no default value, you might set this parameter to not <see langword="null"/> value,
            if you want attach identifier to projection. If you do so - its up to you to ensure that identifier in consistent projection method
            name (projection method name will not change when you set this property).
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.AddProjectionParameter(System.String,System.Double)">
            <summary>
            Adds projection parameter to this SRS. If parameter with such name already was added - update it.
            </summary>
            <param name="parameterName"> Name of projection parameter. </param>
            <param name="value">
            Value of parameter. Unit of value should be in <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.LinearUnit"/>
            or <see cref="P:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem.AngularUnit"/> of <see cref="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.Base"/>.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="parameterName"/> is null. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.GetProjectionParameter(System.String)">
            <summary>
            Gets projection parameter with specified name.
            </summary>
            <param name="parameterName"> Name of parameter. </param>
            <returns> Projection parameter value. </returns>
            <exception cref="T:System.ArgumentNullException"> Parameter name is null. </exception>
            <exception cref="T:System.InvalidOperationException"> Parameter with such name is not set. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters.ProjectionParameters">
            <summary>
            Returns dictionary of projection parameters
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Projection">
            <summary>
            Represents a projection method with parameters, that transforms (longitude, latitude) to (x, y).
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Projection.LinearParametersUnit">
            <summary>
            Unit that is used for linear parameters.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Projection.AngularParametersUnit">
            <summary>
            Unit that is used for angular parameters.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.GetParameterValue(System.String,Aspose.Gis.SpatialReferencing.ParameterType)">
            <summary>
            Gets parameter with specified name of this projection.
            </summary>
            <param name="name"> Name of parameter. </param>
            <param name="type">
            Type of parameter.
            Defines unit factor that will be deapplied:
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Linear"/> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.LinearParametersUnit"/> will be deapplied and result will be in meters.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Angular"/> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.AngularParametersUnit"/> will be deapplied and result will be in radians.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Other"/> parameter value will be returned 'as is'.
            </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
            <exception cref="T:System.InvalidOperationException"> There is no parameter with this name. </exception>
            <returns>Parameter with specified name.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.TryGetParameterValue(System.String,Aspose.Gis.SpatialReferencing.ParameterType)">
            <summary>
            Gets parameter with specified name of this projection. If there are no such parameter - returns <see langword="null"/>.
            </summary>
            <param name="name"> Name of parameter. </param>
            <param name="type">
            Type of parameter.
            Defines unit factor that will be deapplied:
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Linear"/> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.LinearParametersUnit"/> will be deapplied and result will be in meters.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Angular"/> then <see cref="P:Aspose.Gis.SpatialReferencing.Projection.AngularParametersUnit"/> will be deapplied and result will be in radians.
            if type is <see cref="F:Aspose.Gis.SpatialReferencing.ParameterType.Other"/> parameter value will be returned 'as is'.
            </param>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
            <returns>Parameter with specified name or <see langword="null"/> if it is not present.</returns>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Projection.ParametersNames">
            <summary>
            Gets an enumerable collection of names of parameters given to this projection
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.IsEquivalent(Aspose.Gis.SpatialReferencing.Projection)">
            <summary>
            Determines is two projections are equivalent. Equivalent projections map (longitude, latitude) to (x, y) in the
            same way.
            </summary>
            <param name="other">Other projection</param>
            <returns><see langword="true"/> if projections are equivalent, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.IsEquivalent(Aspose.Gis.SpatialReferencing.Projection,Aspose.Gis.SpatialReferencing.Projection)">
            <summary>
            Determines is two projections are equivalent. Equivalent projections map (longitude, latitude) to (x, y) in the
            same way.
            </summary>
            <param name="projection1">First projection.</param>
            <param name="projection2">Second projection.</param>
            <returns><see langword="true"/> if projections are equivalent, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Double},Aspose.Gis.SpatialReferencing.Identifier,System.Boolean)">
            <summary>
            Create new instance.
            </summary>
            <param name="name"> Name of projection. </param>
            <param name="parameters"> Parameters of this projection. Can't be null. </param>
            <param name="identifier"> Identifier of projection method. </param>
            <param name="isOgc"> Whether this projection is known to be in OGC format. </param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.CloneParametersDictionary">
            <summary>
            Clone parameters.
            </summary>
            <returns>Clone of parameters dictionary.</returns>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Projection.ProjectionMethodIdentifier">
            <summary>
            Return projection method identifier of this projection.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.TryGetParameterValue(Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo)">
            <summary>
            Get parameter represented by parameter info.
            </summary>
            <returns>
            Parameter of projection with specified parameter info.
            <see langword="null"/>, if such parameter was not found.
            Value is always in radians for angular parameters or in meters for linear parameters.
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.GetParameterValueOrDefault(Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo)">
            <summary>
            Get parameter represented by parameter info.
            </summary>
            <returns>
            Parameter of projection with specified parameter info or its default value.
            Value is always in radians for angular parameters or in meters for linear parameters.
            </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.HasParameter(Aspose.Gis.SpatialReferencing.Internal.ProjectionParameterInfo)">
            <summary>
            Detects whether this projections has parameter represented by identifier.
            </summary>
            <returns><see langword="true"/>, if projections has such parameter, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Projection.OgcProjection">
            <summary>
            Returns projection, that represents same projection with this instance, but with OGC naming.
            Might return 'this' itself, if this projection already has OGC naming.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue,Aspose.Gis.SpatialReferencing.GeographicDatum)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
            <param name="projectionValue"> Value to create from. </param>
            <param name="datum"> Datum of the SRS. </param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
            <exception cref="T:System.InvalidOperationException">
            Object can not be represented in WKT. This happens if it contains <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/>
            or <see cref="F:System.Double.NegativeInfinity"/> values.
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.TryConvertMercatorTo2SP(Aspose.Gis.SpatialReferencing.Ellipsoid,Aspose.Gis.SpatialReferencing.Projection@)">
            <summary>
            Converts Mercator_1SP to 2SP case.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.AddParameterFromWkt(System.Collections.Generic.IDictionary{System.String,System.Double},Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Adds parameter defined in WktCompositeValue to <paramref name="parameters"/>.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Projection.HaveSameParameterValue(Aspose.Gis.SpatialReferencing.Projection,Aspose.Gis.SpatialReferencing.Projection,System.String)">
            <summary>
            Detects whether projections have same value of a parameter with parameter name.
            </summary>
            <param name="projection1">Projection 1.</param>
            <param name="projection2">Projection 2.</param>
            <param name="parameterName">Name of parameter.</param>
            <returns>Whether projections have same parameter value.</returns>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem">
            <summary>
            Spatial reference system maps coordinates to places on Earth.
            There are different types of SRS, see <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type"/>.
            What's more, if type of SRS is <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic"/> or
            <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected"/>, SRS can be compound or single, see <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Wgs84">
            <summary>
            WGS 84 (EPSG:4326) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.WebMercator">
            <summary>
            Web Mercator (EPSG:3857) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Wgs72">
            <summary>
            WGS 72 (EPSG:4322) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Nad83">
            <summary>
            NAD 83 (EPSG:4269) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Etrs89">
            <summary>
            ETRS 89 (EPSG:4258) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Etrs89LambertConformalConic">
            <summary>
            ETRS 89 / Lambert Conformal Conic (EPSG:3034) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Etrs89LambertAzimuthalEqualArea">
            <summary>
            ETRS 89 / ETRS Lambert Azimuthal Equal Area (EPSG:3035) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Osgb36">
            <summary>
            OSGB 36 (EPSG:4277) spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Osgb36BritishNationalGrid">
            <summary>
            OSGB 36 / British National Grid (EPSG:27700) spatial reference system.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Determines if two SRS are equivalent.
            Same coordinates of equivalent SRS match same place on Earth.
            Some parameters of equivalent SRS can be different, for example <see cref="P:Aspose.Gis.SpatialReferencing.IdentifiableObject.Name"/>.
            </summary>
            <param name="srs1"> First SRS. </param>
            <param name="srs2"> Second SRS. </param>
            <returns> bool value, indicating whether two SRS are equivalent. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromWkt(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)">
            <summary>
            Creates a new <c>SpatialReferenceSystem</c> based on WKT (Well-Known Text) string.
            </summary>
            <param name="wkt"> WKT string. </param>
            <param name="value">
            When this methods returns <see langword="true"/>, contains an SRS created from WKT; otherwise,
            contains <see langword="null"/>.
            </param>
            <returns><see langword="true"/> if SRS was successfully created; <see langword="false"/> otherwise.</returns>
            <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromWkt(System.String)"/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromWkt(System.String)">
            <summary>
            Creates a new <c>SpatialReferenceSystem</c> based on WKT (Well-Known Text) string.
            </summary>
            <param name="wkt"> WKT string. </param>
            <returns> New <c>SpatialReferenceSystem</c>. </returns>
            <exception cref="T:System.ArgumentNullException"> Argument is <see langword="null"/>. </exception>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
            <exception cref="T:System.NotSupportedException"> WKT root element is not supported (for examples it is FITTED_CS). </exception>
            <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromWkt(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)"/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromEpsg(System.Int32)">
            <summary>
            Create a spatial reference system based the specified EPSG code.
            </summary>
            <param name="epsg">EPSG code of the spatial reference system.</param>
            <returns>A new spatial reference system with the specified EPSG code.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> Argument is not positive. </exception>
            <exception cref="T:System.NotSupportedException">The specified EPSG code is unknown.</exception>
            <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromEpsg(System.Int32,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)"/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateFromEpsg(System.Int32,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem@)">
            <summary>
            Create a spatial reference system based the specified EPSG code.
            </summary>
            <param name="epsg">EPSG code of the spatial reference system.</param>
            <param name="value">
            When this methods returns <see langword="true"/>, contains a SRS with the specified EPSG code; otherwise,
            contains <see langword="null"/>.
            </param>
            <returns><see langword="true"/> if specified EPSG code is known and SRS was created; <see langword="false"/> otherwise.</returns>
            <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromEpsg(System.Int32)"/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateGeographic(Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystemParameters,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create geographic SRS from custom parameters.
            </summary>
            <param name="parameters"> Parameters to create from. </param>
            <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
            <returns> New Geographic SRS. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateGeocentric(Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystemParameters,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create geocentric SRS from custom parameters.
            </summary>
            <param name="parameters"> Parameters to create from. </param>
            <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
            <returns> New Geocentric SRS. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateProjected(Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystemParameters,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create projected SRS from custom parameters.
            </summary>
            <param name="parameters"> Parameters to create from. </param>
            <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
            <returns> New Projected SRS. </returns>
            <exception cref="T:System.InvalidOperationException">
            Base SRS in parameters is <see langword="null"/>.
            Projection method in parameters is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateVertical(System.String,Aspose.Gis.SpatialReferencing.VerticalDatum,Aspose.Gis.SpatialReferencing.Unit,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create vertical SRS.
            </summary>
            <param name="name"> Name of SRS. If <see langword="null"/>. </param>
            <param name="verticalDatum"> Datum to be used in SRS. </param>
            <param name="verticalUnit">
            Unit to be used in SRS. If <see langword="null"/>, <see cref="P:Aspose.Gis.SpatialReferencing.Unit.Meter"/> will be used.
            </param>
            <param name="verticalAxis">
            Axis with "up" or "down" direction, to be used in SRS. If <see langword="null"/>, axis with up direction will be used.
            </param>
            <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
            <returns> New Vertical SRS. </returns>
            <exception cref="T:System.InvalidOperationException"> <paramref name="verticalAxis"/> direction is not up or down. </exception>
            <exception cref="T:System.ArgumentNullException"> Some of required parameters is null. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateCompound(System.String,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create compound SRS.
            </summary>
            <param name="name"> Name of new SRS. </param>
            <param name="head"> Head SRS of new SRS. </param>
            <param name="tail"> Tail SRS of new SRS. </param>
            <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
            <returns> New Compound SRS.</returns>
            <exception cref="T:System.ArgumentNullException"> Any argument except <paramref name="identifier"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.InvalidOperationException"> <paramref name="head"/> or <paramref name="tail"/> are compound SRS themselves. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateLocal(System.String,Aspose.Gis.SpatialReferencing.LocalDatum,Aspose.Gis.SpatialReferencing.Unit,System.Collections.Generic.ICollection{Aspose.Gis.SpatialReferencing.Axis},Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create local SRS.
            </summary>
            <param name="name"> Name of SRS. </param>
            <param name="datum"> Datum to be used in SRS. </param>
            <param name="unit"> Unit to be used in SRS. </param>
            <param name="axises"> Axises to be used in SRS. Must be non empty</param>
            <param name="identifier">
            Identifier, that will be attached to SRS. Attaching an Identifier will not modify other SRS parameters.
            Its up to you to ensure consistency of identifier and SRS parameters.
            </param>
            <returns> New Local SRS. </returns>
            <exception cref="T:System.InvalidOperationException"> <paramref name="axises"/> is empty. </exception>
            <exception cref="T:System.ArgumentNullException"> Any argument, except <paramref name="identifier"/> is null. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateFromWktCompositeValue(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new SRS from <see cref="T:Aspose.Gis.Common.Formats.Wkt.WktCompositeValue"/>.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
            <exception cref="T:System.NotSupportedException"> WKT represents FITTED_CS. </exception>
            <returns> New SRS. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)">
            <summary>
            Determine if this SRS is valid.
            </summary>
            <remarks>
            Valid SRS must have valid ellipsoid.
            - Geographic SRS must have exactly one East/West axis, exactly one North/South axis, and optional Up/Down axis
              (optional axis is present when geographic SRS is a compound of 2D geographic SRS and vertical SRS).
            - Projected SRS must have exactly one East/West axis, exactly one North/South axis, and optional Up/Down axis
              (optional axis is present when projected SRS is a compound of 2D geographic SRS and vertical SRS).
            - Geocentric SRS must have exactly one East/West axis, exactly one North/South axis and exactly one Other axis.
            - Vertical SRS must have exactly one Up/Down axis.
            - Local SRS must have at least one axis. Axises directions doesn't meter.
            - Compound SRS must be a combination of a valid Geographic/Projected and a valid Vertical SRS.
            </remarks>
            <param name="errorMessage"> If method return <see langword="false"/>, then this is description of invalidity. </param>
            <returns> <see langword="true"/> if SRS is valid, <see langword="false"/> otherwise. </returns>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsValid">
            <summary>
            Same as <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)"/>, but don't return error message.
            </summary>
            <returns> <see langword="true"/> if SRS is valid, <see langword="false"/> otherwise. </returns>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type">
            <summary>
            Gets type of this SRS, see <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound">
            <summary>
            Returns whether this SRS is compound (a union of two SRS).
            Following combinations of SRS in compound SRS are considered valid:
            Geographic SRS + Vertical SRS, in this case type of compound SRS will be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic"/>.
            Projected SRS + Vertical SRS, in this case type of compound SRS will be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected"/>.
            If combination of SRSs differs, type of compound SRS will be <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Unknown"/>.
            </summary>
            <remarks>
            In WKT this is COMPD_CS.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsSingle">
            <summary>
            Returns whether this SRS is single (not a union of two SRS).
            </summary>
            <remarks>
            In WKT this is any coordinate system, except COMPD_CS.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeographic">
            <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem"/>.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type"/> to find out if conversion is possible.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsProjected">
            <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem"/>.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type"/> to find out if conversion is possible.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeocentric">
            <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem"/>.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type"/> to find out if conversion is possible.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsVertical">
            <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem"/>.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type"/> to find out if conversion is possible.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsLocal">
            <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem"/>.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type"/> to find out if conversion is possible.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsCompound">
            <summary>
            Returns this SRS converted to <see cref="T:Aspose.Gis.SpatialReferencing.CompoundSpatialReferenceSystem"/>.
            Use <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound"/> to find out if conversion is possible.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Conversion is not possible.
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.DimensionsCount">
            <summary>
            Returns number of dimensions in this SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.GetAxis(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis"/> that describes dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Axis that describes dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.GetUnit(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit"/> of dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Unit of dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasPrimeMeridian">
            <summary>
            Returns whether this SRS has prime meridian.
            This is true for every geographic, projected and geocentric SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.PrimeMeridian">
            <summary>
            Returns prime meridian of this SRS.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            This SRS does not have prime meridian. <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasPrimeMeridian"/>
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasGeographicDatum">
            <summary>
            Determines whether this SRS has geographic datum.
            This is true for every geographic, projected and geocentric SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.GeographicDatum">
            <summary>
            Returns geographic datum of this SRS.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            This SRS does not have geographic datum. <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.HasGeographicDatum"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.ExportToWkt">
            <summary>
            Returns representation of this SRS as WKT string.
            The result WKT string will match OGC 01-009 specification, usually named "WKT1".
            </summary>
            <returns> WKT representation of this SRS. </returns>
            <exception cref="T:System.InvalidOperationException">
            This SRS representation would contain <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/> or <see cref="F:System.Double.NegativeInfinity"/>.
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation@)">
            <summary>
            Creates transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.
            </summary>
            <param name="targetSrs">Another <c>SpatialReferenceSystem</c>.</param>
            <returns>Transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.</returns>
            <returns><see langword="true"/> if transformation was created successfully; <see langword="false"/> otherwise.</returns>
            <param name="value">
            When this methods returns <see langword="true"/>, contains a transformation; otherwise, contains <see langword="null"/>.
            </param>
            <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.CreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.
            </summary>
            <param name="targetSrs">Another <c>SpatialReferenceSystem</c>.</param>
            <returns>Transformation from this <c>SpatialReferenceSystem</c> to another <c>SpatialReferenceSystem</c>.</returns>
            <exception cref="T:System.NotSupportedException">
            Transformation between this <c>SpatialReferenceSystem</c> and argument is not supported.
            This can happen, because one of the projections is not supported, or one of the systems is <see cref="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem"/> or
            <see cref="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem"/>.
            </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation is failed to be created because of wrong parameters inside <c>SpatialReferenceSystem</c>.
            </exception>
            <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.TryCreateTransformationTo(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation@)"/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>.
            </summary>
            <param name="other">Other SRS.</param>
            <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.GetLinearizationTolerance(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Returns default linearization tolerance for the SRS. SRS can be null.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Export this SRS as WKT to <paramref name="writer"/>.
            </summary>
            <param name="writer"> Writer to which SRS will be exported. </param>
            <exception cref="T:System.InvalidOperationException">
            SRS can not be represented in WKT. This happens if SRS contains <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/>
            or <see cref="F:System.Double.NegativeInfinity"/> values.
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="identifier"> Identifier of this SRS. </param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.ValidateEllipsoid(System.String@)">
            <summary>
            Validate ellipsoid of geographic datum (if SRS has geographic datum).
            </summary>
            <param name="errorMessage">string, describing reason of invalidity.</param>
            <returns> true if SRS doesn't have ellipsoid, OR it is valid. false if SRS has ellipsoid AND it is invalid.</returns>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemAdjuster">
            <summary>
            SRS adjuster transforms various input SRS to the single destination SRS.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemAdjuster.#ctor(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,System.Boolean)">
            <summary> Creates new instance. </summary>
            <param name="defaultSource">SRS to be used as source when geometry to transform has no SRS.</param>
            <param name="target">Target SRS.</param>
            <param name="skipTransformationErrors">Whether transformation errors should be skipped.</param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemAdjuster.Target">
            <summary>
            Destination SRS of this adjuster.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemAdjuster.Transform(Aspose.Gis.Geometries.IGeometry)">
            <summary> Transforms the geometry to the destination SRS. </summary>
            <remarks>
            Whenever SRS of the input geometry is equal to null, defaultSource is used as input SRS.
            The following transformation rules apply:
            - if input geometry is null or empty, return input as is.
            - if target SRS is null, clone input and return (do not change clone's SRS to null).
            - if input SRS is null or equal to target, clone input and set its SRS to target. No transformation is done.
            - Otherwise, perform transformation from input SRS to target SRS.
            </remarks>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation">
            <summary>
            Spatial reference system transformation transforms geometries from source spatial reference system to target spatial reference system.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.#ctor(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates new instance.
            </summary>
            <param name="sourceSrs"> Source <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>. </param>
            <param name="targetSrs"> Target <see cref="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem"/>. </param>
            <exception cref="T:System.NotSupportedException">
            Transformation between given spatial reference systems is not supported.
            </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Transformation is failed to be created because of wrong parameters inside SRS. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Source">
            <summary>
            Source spatial reference system.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Target">
            <summary>
            Target spatial reference system.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Transform(Aspose.Gis.Geometries.IGeometry)">
            <summary>
            Transforms geometry from source spatial reference system to target spatial reference system.
            </summary>
            <param name="geometry"> Geometry to transform. </param>
            <returns> New geometry in target spatial reference system. </returns>
            <exception cref="T:System.ArgumentNullException"> Geometry is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentException">
            Geometries <see cref="P:Aspose.Gis.Geometries.IGeometry.SpatialReferenceSystem"/> is not <see langword="null"/> and doesn't equivalent to
            <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.Source"/>
            </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Transformation failed. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.IsEmpty">
            <summary>
            Determines whether this transformation is empty - will not change any geometry passed to it
            (because source is equivalent to target or source equal to null or target equal to null).
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.CreateProjection(Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem)">
            <summary>
            Create Projection, that represents projection from projected SRS.
            </summary>
            <param name="projectedSrs">SRS.</param>
            <returns>Projection.</returns>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException"> Projection can not be created. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemTransformation.GetToWgs84Parameters(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Returns ToWgs84 parameters for argument. If argument has defined ToWgs84 parameters - return it, otherwise,
            try to look up in registry.
            </summary>
            <param name="srs">Argument.</param>
            <returns>BursaWolfParameters to transform SRS to WGS84.</returns>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType">
            <summary>
            Represents type of spatial reference system.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Unknown">
            <summary>
            Default value.
            Can be returned from <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Type"/> if this is a compound SRS with invalid combination of
            underlying SRSs. See <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsCompound"/>.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic">
            <summary>
            Geographic SRS is based on angular longitude and angular latitude.
            Geographic SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeographicSpatialReferenceSystem"/>
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeographic"/> method.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geocentric">
            <summary>
            Geocentric SRS is three dimensional cartesian SRS with origin at Earth center.
            Geocentric SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.GeocentricSpatialReferenceSystem"/>
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsGeocentric"/> method.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Projected">
            <summary>
            Projected SRS is based on linear X and linear Y. It is the result of application a projection on a <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Geographic"/> SRS.
            Projected SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.ProjectedSpatialReferenceSystem"/>
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsProjected"/> method.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Vertical">
            <summary>
            Vertical SRS describes linear height coordinate.
            Vertical SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem"/>
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsVertical"/> method.
            </summary>
        </member>
        <member name="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Local">
            <summary>
            Local SRS relates coordinates to some object, other them Earth.
            Local SRS can be converted to <see cref="T:Aspose.Gis.SpatialReferencing.LocalSpatialReferenceSystem"/>
            via <see cref="P:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.AsLocal"/> method.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.TransformationException">
            <summary>
            Transformation exception is thrown when error occurs during transformation of coordinate or during transformation creation.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor">
            <summary>
            Create new instance.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor(System.String)">
            <summary>
            Create new instance.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance.
            </summary>
            <param name="message">Error message.</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.TransformationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Create new instance.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.AddLongitudeTransformation">
            <summary>
            Simple transformation that modifies second coordinate (longitude).
            Is used in order to change coordinate, so it become relative to Greenwich.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.AddLongitudeTransformation.#ctor(System.Double)">
            <summary>
            Create new instance.
            </summary>
            <param name="delta"> Value that will be added to longitude. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.AddLongitudeTransformation.IsThreeDimensional">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfForwardTransformation">
            <summary>
            Transforms coordinates between datums.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfForwardTransformation.#ctor(Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
            <summary>
            Create new instance.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfForwardTransformation.IsThreeDimensional">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfInverseTransformation">
            <summary>
            Transforms coordinate between datum. Opposite to <see cref="T:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfForwardTransformation"/>,
            given parameters to transform from datum1 to datum2 transforms coordinates from datum2 to datum1.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfInverseTransformation.#ctor(Aspose.Gis.SpatialReferencing.BursaWolfParameters)">
            <summary>
            Create new instance.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfInverseTransformation.IsThreeDimensional">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.BursaWolfInverseTransformation.DoTransform(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.CompositeCoordinateTransformation">
            <summary>
            Composite coordinate transformation represents a coordinate transformation, that consists of other coordinate transformations.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.CompositeCoordinateTransformation.#ctor(System.Collections.Generic.IReadOnlyCollection{Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation})">
            <summary>
            Create new instance.
            </summary>
            <param name="transformations"> List of transformations, this instance will contain. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="transformations"/> is <see langword="null"/>. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.CompositeCoordinateTransformation.IsThreeDimensional">
            <summary>
            Determines whether this transformation operates on three dimensions.
            Composite coordinate transformation is three dimensional if any underlying transformation is three dimensional.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation">
            <summary>
            Transforms coordinates.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation.Null">
            <summary>
            Return null transformation - transformation that does nothing.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation.IsThreeDimensional">
            <summary>
            Determines whether this transformation operates on three dimensions.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation.Transform(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Applies transformation to coordinates.
            </summary>
            <param name="inX"> Input X coordinate. </param>
            <param name="inY"> Input Y coordinate. </param>
            <param name="inZ">
            Input Z coordinate. If transformation is not three dimensional this property is copied to output Z coordinate.
            </param>
            <param name="outX"> Output X coordinate. </param>
            <param name="outY"> Output Y coordinate. </param>
            <param name="outZ">
            Output Z coordinate. If transformation is not three dimensional, value of this property is equal to input Z.
            </param>
            <returns>
            Value indicating whether transformation is successful.
            </returns>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.CoordinateTransformation.NullTransformation">
            <summary>
            Represents 'do nothing' transformation.
            </summary>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.GeocentricToGeographicTransformation">
            <summary>
            Transforms coordinates from three dimensional geocentric cartesian system to (longitude, latitude, height).
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.GeocentricToGeographicTransformation.#ctor(Aspose.Gis.SpatialReferencing.Ellipsoid)">
            <summary>
            Create new instance.
            </summary>
            <param name="ellipsoid">Ellipsoid.</param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.GeocentricToGeographicTransformation.IsThreeDimensional">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.GeocentricToGeographicTransformation.DoTransform(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Transform geocentric (x, y, z) to (longitude, latitude, height).
            </summary>
            <param name="x">Geocentric X in meters.</param>
            <param name="y">Geocentric Y in meters.</param>
            <param name="z">Geocentric Z in meters.</param>
            <param name="longitude"> Longitude in radians. </param>
            <param name="latitude"> Latitude in radians. </param>
            <param name="height"> Height in radians. </param>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.GeographicToGeocentricTransformation">
            <summary>
            Transforms coordinates from (longitude, latitude, height) to three dimensional cartesian geocentric system.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.GeographicToGeocentricTransformation.#ctor(Aspose.Gis.SpatialReferencing.Ellipsoid)">
            <summary>
            Create new instance.
            </summary>
            <param name="ellipsoid">Ellipsoid.</param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.GeographicToGeocentricTransformation.IsThreeDimensional">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.GeographicToGeocentricTransformation.DoTransform(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Transform (longitude, latitude, height) to geocentric (x, y, z)
            </summary>
            <param name="longitude"> Longitude in radians. </param>
            <param name="latitude"> Latitude in radians. </param>
            <param name="height"> Height in radians. </param>
            <param name="x">Geocentric X in meters.</param>
            <param name="y">Geocentric Y in meters.</param>
            <param name="z">Geocentric Z in meters.</param>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.GeographicToProjectedTransformation">
            <summary>
            Applies projection to (longitude, latitude).
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.GeographicToProjectedTransformation.#ctor(Aspose.Gis.Projections.Projection)">
            <summary>
            Create new instance.
            </summary>
            <param name="projection"> Projection. </param>
            <exception cref="T:System.ArgumentNullException"> Projection is null. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.GeographicToProjectedTransformation.IsThreeDimensional">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.ProjectedToGeographicTransformation">
            <summary>
            Transforms projected coordinates to geographic (longitude, latitude).
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.ProjectedToGeographicTransformation.#ctor(Aspose.Gis.Projections.Projection)">
            <summary>
            Create new instance.
            </summary>
            <param name="projection"> Projection. </param>
            <exception cref="T:System.ArgumentNullException"> Projection is null. </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.ProjectedToGeographicTransformation.IsThreeDimensional">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.UnitDenormalization">
            <summary>
            This transformation denormalizes units and axises.
            For description of what normalization is, see <see cref="T:Aspose.Gis.SpatialReferencing.Transformation.UnitNormalization"/>.
            This transformations changes 'normalized' coordinates to coordinates in given SRS, that may have different axis order,
            directions and units.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.UnitDenormalization.#ctor(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Create new instance.
            </summary>
            <param name="srs">SRS.</param>
            <exception cref="T:System.ArgumentNullException">Argument is null.</exception>
            <remarks>
            It is assumed that SRS is valid.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.UnitDenormalization.IsThreeDimensional">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.UnitDenormalization.DoTransform(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Transformation.UnitNormalization">
            <summary>
            This transformation normalizes units and axises.
            Normalized coordinates have this properties:
            - All values are in meters and radians.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.UnitNormalization.#ctor(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Create new instance.
            </summary>
            <param name="srs">SRS.</param>
            <exception cref="T:System.ArgumentNullException">Argument is null.</exception>
            <remarks>
            It is assumed that SRS is valid.
            </remarks>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Transformation.UnitNormalization.IsThreeDimensional">
            <inheritdoc/>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Transformation.UnitNormalization.DoTransform(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.Unit">
            <summary>
            Represent measurement unit.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Unit.Meter">
            <summary> Get Unit that represents meters. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Unit.Radian">
            <summary> Get Unit that represents radians. </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Unit.Degree">
            <summary> Get Unit that represents degrees. </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Unit.#ctor(System.String,System.Double,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance.
            </summary>
            <param name="name">Name of unit.</param>
            <param name="factor">Factor to meter, if this is length unit, or to radian, if this is angle unit.</param>
            <param name="identifier">Identifier of unit.</param>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Unit.Apply(System.Double)">
            <summary>
            Converts argument to unit, described by this instance.
            </summary>
            <param name="value"> Value to convert. Must be in radians or meters. </param>
            <returns> Value, converted to this unit. </returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Unit.Deapply(System.Double)">
            <summary>
            Converts argument from unit, described by this instance, to radians or meters.
            </summary>
            <param name="value"> Value to convert. </param>
            <returns> Value converted to radians or meters. </returns>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.Unit.Factor">
            <summary>
            Factor to meter, if this is length unit, factor to radian, if this is angle unit.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Unit.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.Unit.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
            <exception cref="T:System.InvalidOperationException">
            Object can not be represented in WKT. This happens if it contains <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.PositiveInfinity"/>
            or <see cref="F:System.Double.NegativeInfinity"/> values.
            </exception>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.VerticalDatum">
            <summary>
            Indicates method used for vertical measurements.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalDatum.#ctor(System.String,System.Int32,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Create new instance.
            </summary>
            <param name="name"> name of datum. </param>
            <param name="datumType"> integer number, representing type of datum. </param>
            <param name="identifier"> identifier of datum. </param>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalDatum.DatumType">
            <summary>
            An integer number, indicating method that had been used.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalDatum.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalDatum.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <summary>
            Exports this object to writer.
            </summary>
            <param name="writer"> Writer to which object will be exported. </param>
        </member>
        <member name="T:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem">
            <summary>
            Vertical SRS is a one dimensional SRS that describes height coordinates.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.VerticalUnit">
            <summary>
            Unit that is used in this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.VerticalDatum">
            <summary>
            Datum that is used in this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.Type">
            <summary>
            Return <see cref="F:Aspose.Gis.SpatialReferencing.SpatialReferenceSystemType.Vertical"/>.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.AsVertical">
            <summary>
            Returns this SRS.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.DimensionsCount">
            <summary>
            Returns 1, since vertical SRS is always one dimensional.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.GetAxis(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Axis"/> that describes dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Axis that describes dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.GetUnit(System.Int32)">
            <summary>
            Get <see cref="T:Aspose.Gis.SpatialReferencing.Unit"/> of dimension.
            </summary>
            <param name="dimension"> Number of dimension. </param>
            <returns> Unit of dimension. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="dimension"/> is less then 0 or greater or equals to <see cref="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.DimensionsCount"/>
            </exception>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.HasGeographicDatum">
            <summary>
            Returns <see langword="false"/>, since Vertical SRS doesn't have geographic datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.GeographicDatum">
            <summary>
            Throws <see cref="T:System.InvalidOperationException"/>, since Vertical SRS doesn't have geographic datum.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.HasPrimeMeridian">
            <summary>
            Returns <see langword="false"/>, since Vertical SRS doesn't have prime meridian.
            </summary>
        </member>
        <member name="P:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.PrimeMeridian">
            <summary>
            Throws <see cref="T:System.InvalidOperationException"/>, since Vertical SRS doesn't have prime meridian.
            </summary>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.Validate(System.String@)">
            <summary>
            Determine if this SRS is valid. See <see cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.Validate(System.String@)"/> for validity description.
            </summary>
            <param name="errorMessage"> Description of invalidity (if result is <see langword="false"/>)</param>
            <returns> If this SRS is valid - <see langword="true"/>, otherwise - <see langword="false"/>.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Detects whether this SRS is equivalent to other SRS. <seealso cref="M:Aspose.Gis.SpatialReferencing.SpatialReferenceSystem.IsEquivalent(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/>.
            </summary>
            <param name="other">Other SRS.</param>
            <returns>bool value, indicating whether this SRS is equivalent to other SRS.</returns>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.#ctor(System.String,Aspose.Gis.SpatialReferencing.VerticalDatum,Aspose.Gis.SpatialReferencing.Unit,Aspose.Gis.SpatialReferencing.Axis,Aspose.Gis.SpatialReferencing.Identifier)">
            <summary>
            Creates new instance.
            </summary>
            <param name="name"> Name of this SRS. </param>
            <param name="verticalDatum"> Vertical datum of this SRS. Can't be null. </param>
            <param name="verticalUnit"> Unit of this SRS. Can't be null. </param>
            <param name="axis">
            Axis that describes height coordinates.
            Must have <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.Up"/> or <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.Down"/> direction.
            If it is null, axis with <see cref="F:Aspose.Gis.SpatialReferencing.AxisDirection.Up"/> will be used.
            </param>
            <param name="identifier"> Identifier of this SRS. Can be null. </param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="axis"/> has wrong <see cref="T:Aspose.Gis.SpatialReferencing.AxisDirection"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="verticalDatum"/> or <paramref name="verticalUnit"/> is null.
            </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.CreateFromWkt(Aspose.Gis.Common.Formats.Wkt.WktCompositeValue)">
            <summary>
            Creates new instance from WktCompositeValue.
            </summary>
            <exception cref="T:System.FormatException"> Hierarchy of wkt values, their order or types, is wrong. </exception>
        </member>
        <member name="M:Aspose.Gis.SpatialReferencing.VerticalSpatialReferenceSystem.ExportToWkt(Aspose.Gis.Common.Formats.Wkt.WktWriter)">
            <inheritdoc />
        </member>
        <member name="T:Aspose.Gis.VectorLayer">
            <summary>
            Represents a vector layer.
            A vector layer is a collection of geographic features, stored in a file.
            </summary>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Open(System.String,Aspose.Gis.FileDriver)">
            <summary>
            Open the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <returns>A read-only layer.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
            <summary>
            Open the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <returns>A read-only layer.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Open(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Open the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>A read-only layer.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Open(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Open the layer for reading.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>A read-only layer.</returns>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver)">
            <summary>
            Creates the layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <returns>A write-only layer.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Creates the layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>A write-only layer.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
            <summary>
            Creates the layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <returns>A write-only layer.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions)">
            <summary>
            Creates the layer and opens it for adding new features.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <returns>A write-only layer.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error writing the feature to the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(System.String,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Create(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.DriverOptions,Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)">
            <summary>
            Creates the layer and opens it for appending.
            </summary>
            <param name="path">Path to the file.</param>
            <param name="driver">Driver to use.</param>
            <param name="options">Driver-specific options.</param>
            <param name="spatialReferenceSystem">Spatial reference system.</param>
            <returns>An instance of <see cref="T:Aspose.Gis.VectorLayer" />.</returns>
            <exception cref="T:System.ArgumentNullException">The path is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system is not supported by the driver.
            Use <see cref="M:Aspose.Gis.FileDriver.SupportsSpatialReferenceSystem(Aspose.Gis.SpatialReferencing.SpatialReferenceSystem)"/> to check whether spatial reference system is supported.
            </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Convert(System.String,Aspose.Gis.FileDriver,System.String,Aspose.Gis.FileDriver)">
            <summary>
            Convert a layer to a different format.
            </summary>
            <param name="sourcePath">Path to the layer that will be converted.</param>
            <param name="sourceDriver">The format driver for the source layer.</param>
            <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
            <param name="destinationDriver">The format driver for the destination layer.</param>
            <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Convert(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver)">
            <summary>
            Convert a layer to a different format.
            </summary>
            <param name="sourcePath">Path to the layer that will be converted.</param>
            <param name="sourceDriver">The format driver for the source layer.</param>
            <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
            <param name="destinationDriver">The format driver for the destination layer.</param>
            <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Convert(System.String,Aspose.Gis.FileDriver,System.String,Aspose.Gis.FileDriver,Aspose.Gis.ConversionOptions)">
            <summary>
            Convert a layer to a different format.
            </summary>
            <param name="sourcePath">Path to the layer that will be converted.</param>
            <param name="sourceDriver">The format driver for the source layer.</param>
            <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
            <param name="destinationDriver">The format driver for the destination layer.</param>
            <param name="options">Options for the conversion procedure.</param>
            <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options"/> is not supported by <paramref name="destinationDriver"/>.
            </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Convert(Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.AbstractPath,Aspose.Gis.FileDriver,Aspose.Gis.ConversionOptions)">
            <summary>
            Convert a layer to a different format.
            </summary>
            <param name="sourcePath">Path to the layer that will be converted.</param>
            <param name="sourceDriver">The format driver for the source layer.</param>
            <param name="destinationPath">Path to the layer that will created as a result of conversion.</param>
            <param name="destinationDriver">The format driver for the destination layer.</param>
            <param name="options">Options for the conversion procedure.</param>
            <exception cref="T:System.ArgumentNullException">Either of paths is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Options object has an incorrect type for this driver.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading or writing the feature to/from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.NotSupportedException">
            Spatial reference system specified in <paramref name="options"/> is not supported by <paramref name="destinationDriver"/>.
            </exception>
            <exception cref="T:Aspose.Gis.SpatialReferencing.TransformationException">
            Transformation of features geometry from source spatial reference system to target spatial reference system failed.
            </exception>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.Count">
            <summary>
            Gets the number of features in this layer.
            </summary>
            <value>
            The number of features in this layer.
            </value>
            <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Aspose.Gis.Feature"/>.
            </value>
            <param name="index">The index of the feature.</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:Aspose.Gis.GisException">Error reading the feature from the file.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.GeometryType">
            <summary>
            Gets the type of the geometry for the layer.
            </summary>
            <value>
            The type of the geometry.
            </value>
            <exception cref="T:System.InvalidOperationException"> is thrown if layer is opened write-only.</exception>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.Driver">
            <summary>
            Gets the <see cref="P:Aspose.Gis.VectorLayer.Driver" /> that instantiated this layer.
            </summary>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.ConstructFeature">
            <summary>
            Creates (but does not add to the layer) a new feature with attributes matching the collection of attributes of this layer.
            When done with setting data for the feature, use <see cref="M:Aspose.Gis.VectorLayer.Add(Aspose.Gis.Feature)" /> to add the feature to the layer.
            </summary>
            <returns>A new feature.</returns>
            <remarks>
            Changes to <see cref="P:Aspose.Gis.VectorLayer.Attributes" /> are not allowed after calling this method.
            </remarks>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.CopyAttributes(Aspose.Gis.FeaturesSequence)">
            <summary>
            Copies attributes of other <see cref="T:Aspose.Gis.VectorLayer" /> to this one.
            </summary>
            <param name="featuresSequence">The features sequence to copy attributes from.</param>
            <exception cref="T:System.ArgumentNullException">The input layer is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.CopyAttributes(Aspose.Gis.FeaturesSequence,Aspose.Gis.IAttributesConverter)">
            <summary>
            Copies attributes of other <see cref="T:Aspose.Gis.VectorLayer" /> to this one.
            </summary>
            <param name="featuresSequence">The features sequence to copy attributes from.</param>
            <param name="converter">An instance of custom <see cref="T:Aspose.Gis.IAttributesConverter" /> that will process the attributes one by one.</param>
            <exception cref="T:System.ArgumentNullException">The input layer is <see langword="null" />.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Dispose">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Add(Aspose.Gis.Feature)">
            <summary>
            Adds a new feature to the layer, if supported by the <see cref="T:Aspose.Gis.VectorLayer" />'s <see cref="P:Aspose.Gis.VectorLayer.Driver" />.
            </summary>
            <param name="feature">The feature to add.</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the layer is read-only.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Add(Aspose.Gis.Feature,Aspose.Gis.IFeatureStyle)">
            <summary>
            Adds a new feature with the specified style to the layer, if supported by the <see cref="T:Aspose.Gis.VectorLayer" />'s <see cref="P:Aspose.Gis.VectorLayer.Driver" />.
            </summary>
            <param name="feature">The feature to add.</param>
            <param name="style"> The feature style. Use <see langword="null"/> to indicate missing style. </param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the layer does not support styles or the layer is read-only.</exception>
            <exception cref="T:System.InvalidOperationException"> is thrown if the the editable layers does not support styles.</exception>
            <exception cref="T:System.ArgumentException"> is thrown if the style does not match driver type.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.RemoveAt(System.Int32)">
            <summary>
            Remove the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <param name="index">The index of the feature.</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the layer is not editable.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.ReplaceAt(System.Int32,Aspose.Gis.Feature)">
            <summary>
            Replace the <see cref="T:Aspose.Gis.Feature"/> at the specified index.
            </summary>
            <param name="index">The index of the feature.</param>
            <param name="feature">The feature to set.</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the layer is not editable.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is out of range.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.NearestTo(System.Double,System.Double)">
            <summary>Gets the nearest feature to the provided coordinate.</summary>
            <param name="x">X of the coordinate.</param>
            <param name="y">Y of the coordinate.</param>
            <returns>The nearest feature to the provided coordinate.</returns>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.NearestTo(Aspose.Gis.Geometries.IPoint)">
             <summary>Gets the nearest feature to the provided point.</summary>
             <param name="point">The point.</param>
             <returns>The nearest feature to the provided point.</returns>
            <exception cref="T:System.ArgumentNullException">Point is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Point is empty or not valid.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Join(Aspose.Gis.VectorLayer,Aspose.Gis.Relationship.Joins.JoinOptions)">
            <summary>
            Joins a layer to the current layer.
            </summary>
            <param name="layer">A layer to join.</param>
            <param name="options">Join parameters.</param>
            <returns>A new layer as a result of join two layers.</returns>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.JoinByGeometry(Aspose.Gis.VectorLayer,Aspose.Gis.Relationship.Joins.JoinByGeometryOptions)">
            <summary>
            Joins a layer to the current layer by geometry.
            </summary>
            <param name="layer">A layer to join.</param>
            <param name="options">Join parameters.</param>
            <returns>A new layer as a result of join two layers.</returns>
            <exception cref="T:System.ArgumentNullException"> Argument is null. </exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.UseAttributesIndex(System.String,System.String,System.Boolean)">
            <summary>
            Loads attribute index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereGreater``1(System.String,``0)"/>.
            If index does not exist creates it first. Use <paramref name="forceRebuild"/> to force index recreation.
            </summary>
            <param name="indexPath">Path to the index file.</param>
            <param name="attributeName">Name of the attribute to build index on.</param>
            <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Attribute with such name does not exist in the layer.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.InvalidOperationException">Index for the specified attribute already loaded for this layer.</exception>
            <exception cref="T:Aspose.Gis.GisException">File exists and it is not an attribute index file created by Aspose.GIS.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.UseAttributesIndex(Aspose.Gis.AbstractPath,System.String,System.Boolean)">
            <summary>
            Loads attribute index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereGreater``1(System.String,``0)"/>.
            If index does not exist creates it first. Use <paramref name="forceRebuild"/> to force index recreation.
            </summary>
            <param name="indexPath">Path to the index file.</param>
            <param name="attributeName">Name of the attribute to build index on.</param>
            <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
            <exception cref="T:System.ArgumentNullException">Argument is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Attribute with such name does not exist in the layer.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.InvalidOperationException">Index for the specified attribute already loaded for this layer.</exception>
            <exception cref="T:Aspose.Gis.GisException">File exists and it is not an attribute index file created by Aspose.GIS.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.UseSpatialIndex(System.String,System.Boolean)">
            <summary>
            Loads spatial index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Geometries.IGeometry)"/>
            and <see cref="M:Aspose.Gis.VectorLayer.NearestTo(System.Double,System.Double)"/>.
            If index does not exist creates it first. Use <paramref name="forceRebuild"/> to force index recreation.
            </summary>
            <param name="indexPath">Path to the index file.</param>
            <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
            <exception cref="T:System.ArgumentNullException">Path is <see langword="null"/>.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.InvalidOperationException">Spatial index is already loaded for this layer.</exception>
            <exception cref="T:Aspose.Gis.GisException">File exists and it is not a spatial index file created by Aspose.GIS.</exception>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.UseSpatialIndex(Aspose.Gis.AbstractPath,System.Boolean)">
            <summary>
            Loads spatial index to speed up filtering by attributes value in filter methods like <see cref="M:Aspose.Gis.FeaturesSequence.WhereIntersects(Aspose.Gis.Geometries.IGeometry)"/>
            and <see cref="M:Aspose.Gis.VectorLayer.NearestTo(System.Double,System.Double)"/>.
            If index does not exist creates it first. Use <paramref name="forceRebuild"/> to force index recreation.
            </summary>
            <param name="indexPath">Path to the index file.</param>
            <param name="forceRebuild">Whether to recreate index even if it already exists.</param>
            <exception cref="T:System.ArgumentNullException">Path is <see langword="null"/>.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
            <exception cref="T:System.InvalidOperationException">Spatial index is already loaded for this layer.</exception>
            <exception cref="T:Aspose.Gis.GisException">File exists and it is not a spatial index file created by Aspose.GIS.</exception>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.Attributes">
            <summary> Gets the collection of custom attributes for features in this <see cref="T:Aspose.Gis.VectorLayer" />. </summary>
            <value> The collection of attributes. </value>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.AsInMemory">
            <summary>
            Create a layer clon as the InMemory format.
            </summary>
            <returns>The InMemory Layer.</returns>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj"> The object to compare with the current object.</param>
            <returns> true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.#ctor(Aspose.Gis.DriverOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Gis.VectorLayer"/> class.
            </summary>
            <param name="options">Open options.</param>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Aspose.Gis.VectorLayer" />.
            </summary>
            <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources;
            <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.Indices">
            <summary> A collection of indexes. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.XYPrecisionModel">
            <summary> Precision model to apply to X and Y coordinates. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.ZPrecisionModel">
            <summary> Precision model to apply to Z coordinates. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.MPrecisionModel">
            <summary> Precision model to apply to M coordinates. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.CreateMidpoints">
            <summary> Need to create Midpoints in each geometry segment. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.DeleteNearPoints">
            <summary> Need to delete near points in each geometry. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.DeleteNearPointsDistance">
            <summary> Distance for <see cref="P:Aspose.Gis.VectorLayer.DeleteNearPoints"/> option. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.SimplifySegments">
            <summary> Need to simplify segments in each geometry. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.SimplifySegmentsDistance">
            <summary> Distance for <see cref="P:Aspose.Gis.VectorLayer.SimplifySegments"/> option. </summary>
        </member>
        <member name="P:Aspose.Gis.VectorLayer.CloseLinearRing">
            <summary> Close LinearRing in each geometry if it needs. </summary>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.ReduceGeometryPrecision(Aspose.Gis.Geometries.Geometry)">
            <summary> Reduces precision of the geometry according to precision models. </summary>
        </member>
        <member name="M:Aspose.Gis.VectorLayer.ApplyOptionsPrecision(Aspose.Gis.Geometries.IGeometry)">
            <summary> Reduces precision of the geometry according to precision models. Clone if necessary. </summary>
        </member>
        <member name="T:Aspose.GeoCalculator.DegreeBased.DecimalDegreesConverter">
            <summary>
            Provides conversion for Decimal Degrees (DD) format.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.DegreeBased.DecimalDegreesConverter.AsPointText(System.Double,System.Double)">
            <summary>
            Returns the calculated position as string in Decimal Degrees (DD) format.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <returns>String in Decimal Degrees (DD) format.</returns>
        </member>
        <member name="T:Aspose.GeoCalculator.DegreeBased.DegreeBasedConverter">
            <summary>
            Base class for degree based format converters. Inherited classes should be stateless.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.DegreeBased.DegreeBasedConverter.ValidatePoint(System.Decimal,System.Decimal,System.String@)">
            <summary>
            Validates point coordinates.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <param name="message">Message that returns when result is false.</param>
            <returns>True if coordinates are valid, False otherwise.</returns>
        </member>
        <member name="T:Aspose.GeoCalculator.DegreeBased.DegreeBasedParser">
            <summary>
            Provides methods to parse coordinates in degree based formats.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.DegreeBased.DegreeBasedParser.TryParsePointText(System.String,Aspose.Gis.Geometries.IPoint@)">
            <summary>
            Converts the string that contains сoordinates to IPoint object. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">A string that contains coordinates to convert.
            The string should contain both coordinate latitude and longitude.
            Coordinates should be separated by whitespace, by comma or by semicolon.
            </param>
            <param name="point">When this method returns, contains the IPoint object with parsed coordinates, if the conversion succeeded, or null if the conversion failed.</param>
            <returns>True if text was parsed successfully, otherwise False.</returns>
            <remarks>
            Examples: "80° 151°", "74°50.82', 172°08.21'", "80°;151°"
            </remarks>
        </member>
        <member name="T:Aspose.GeoCalculator.DegreeBased.DegreeDecimalMinutesConverter">
            <summary>
            Provides convertations for Degree Decimal Minutes (DDM) format.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.DegreeBased.DegreeDecimalMinutesConverter.AsPointText(System.Double,System.Double)">
            <summary>
            Returns the calculated position as string in Degree Decimal Minutes (DDM) format.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <returns>String in Degree Decimal Minutes (DDM) format.</returns>
        </member>
        <member name="M:Aspose.GeoCalculator.DegreeBased.DegreeDecimalMinutesConverter.CoordinateAsText(System.Double,System.String)">
            <summary>
            Converts a single coordinate as text.
            </summary>
            <param name="coordinate">Single coordinate, it can be latitude or longitude.</param>
            <param name="degreeFormat">A standard or custom numeric format string, which be applied to degree string only.</param>
            <returns>Converted coordinate.</returns>
        </member>
        <member name="T:Aspose.GeoCalculator.DegreeBased.DegreeMinutesSecondsConverter">
            <summary>
            Provides conversion for Degree Minutes Seconds (DMS) format.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.DegreeBased.DegreeMinutesSecondsConverter.AsPointText(System.Double,System.Double)">
            <summary>
            Returns the calculated position as string in Degree Minutes Seconds (DMS) format.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <returns>String in Degree Minutes Seconds (DMS) format.</returns>
        </member>
        <member name="M:Aspose.GeoCalculator.DegreeBased.DegreeMinutesSecondsConverter.CoordinateAsText(System.Double,System.String)">
            <summary>
            Converts a single coordinate as text.
            </summary>
            <param name="coordinate">Single coordinate, it can be latitude or longitude.</param>
            <param name="degreeFormat">A standard or custom numeric format string, which be applied to degree string only.</param>
            <returns>Converted coordinate.</returns>
        </member>
        <member name="T:Aspose.GeoCalculator.GeoRef.GeoRefConverter">
            <summary>
            Provides conversion for World Geographic Reference System (GeoRef) format.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.GeoRef.GeoRefConverter.AsPointText(System.Double,System.Double)">
            <summary>
            Returns the calculated position as string in World Geographic Reference System (GeoRef) format.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <returns>String in World Geographic Reference System (GeoRef) format.</returns>
        </member>
        <member name="T:Aspose.GeoCalculator.GeoRef.GeoRefParser">
            <summary>
            Provides methods to parse coordinates in GeoRef format.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.GeoRef.GeoRefParser.TryParsePointText(System.String,Aspose.Gis.Geometries.IPoint@)">
            <summary>
            Converts the string in GeoRef format to IPoint object. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">A string in GeoRef format.</param>
            <param name="point">When this method returns, contains the IPoint object with parsed coordinates, if the conversion succeeded, or null if the conversion failed.</param>
            <returns>True if text was parsed successfully, otherwise False.</returns>
            <remarks>
            Examples: MGNE09105081.
            </remarks>
        </member>
        <member name="T:Aspose.GeoCalculator.Mgrs.MgrsConverter">
            <summary>
            Provides conversion for Military Grid Reference System (MGRS) format with WGS 84 datum.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.Mgrs.MgrsConverter.AsPointText(System.Double,System.Double)">
            <summary>
            Returns the calculated position as string in Military Grid Reference System (MGRS) format.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <returns>String in Military Grid Reference System (MGRS) format.</returns>
        </member>
        <member name="M:Aspose.GeoCalculator.Mgrs.MgrsConverter.UpsCalculate(System.Double,System.Double)">
            <summary>
            This method converts the point from south or north polar regions using UPS
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <returns></returns>
        </member>
        <member name="M:Aspose.GeoCalculator.Mgrs.MgrsConverter.UtmCalculate(System.Double,System.Double)">
            <summary>
            This method converts the points between -80 and +84 latitude using UTM
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <returns></returns>
        </member>
        <member name="M:Aspose.GeoCalculator.Mgrs.MgrsHelper.CalculateUtmZoneSet(System.Int32)">
            <summary>
            Returns number of set of utm zones combined in groups.
            </summary>
            <param name="zoneNumber">UTM zone number.</param>
            <returns>Number of set of zone belong to.</returns>
        </member>
        <member name="T:Aspose.GeoCalculator.Mgrs.MgrsParser">
            <summary>
            Provides methods to parse text in MGRS format.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.Mgrs.MgrsParser.TryParsePointText(System.String,Aspose.Gis.Geometries.IPoint@)">
            <summary>
            Converts the string in MGRS format to IPoint object. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">A string in MGRS format.</param>
            <param name="point">When this method returns, contains the IPoint object with parsed coordinates, if the conversion succeeded, or null if the conversion failed.</param>
            <returns>True if text was parsed successfully, otherwise False.</returns>
            <remarks>
            Examples: 29VMK2877586175
            </remarks>
        </member>
        <member name="T:Aspose.GeoCalculator.Usng.UsngConverter">
            <summary>
            Provides conversion for United States National Grid (USNG) format with WGS 84 datum.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.Usng.UsngConverter.AsPointText(System.Double,System.Double)">
            <summary>
            Returns the calculated position as string in United States National Grid (USNG) format.
            </summary>
            <param name="latitude">Position latitude.</param>
            <param name="longitude">Position longitude.</param>
            <returns>String in  United States National Grid (USNG) format.</returns>
        </member>
        <member name="M:Aspose.GeoCalculator.Usng.UsngConverter.ValidatePoint(System.Decimal,System.Decimal,System.String@)">
            <summary>
            Validates point coordinates.
            </summary>
            <param name="latitude">Position latitude. For USNG format it should be between -80.0 and +84.0.</param>
            <param name="longitude">Position longitude.</param>
            <param name="message">Message that returns when result is false.</param>
            <returns>True if coordinates are valid, False otherwise.</returns>
        </member>
        <member name="T:Aspose.GeoCalculator.Usng.UsngParser">
            <summary>
            Provides methods to parse text in USNG format.
            </summary>
        </member>
        <member name="M:Aspose.GeoCalculator.Usng.UsngParser.TryParsePointText(System.String,Aspose.Gis.Geometries.IPoint@)">
            <summary>
            Converts the string in USNG format to IPoint object. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">A string in USNG format.</param>
            <param name="point">When this method returns, contains the IPoint object with parsed coordinates, if the conversion succeeded, or null if the conversion failed.</param>
            <returns>True if text was parsed successfully, otherwise False.</returns>
            <remarks>
            Examples: 29VMK2877586175.
            </remarks>
        </member>
        <member name="T:Aspose.Crypto.DigestAlgorithm">
            <summary>
            Supported algorithms. Subset of an origin System.Security.Cryptography.DigestAlgorithm.
            </summary>
        </member>
        <member name="T:Aspose.Crypto.HashSetGeneric`1">
            <summary>
            Replace the 'HashSetGeneric' from Aspose.Word by the regular 'HashSet'.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Aspose.Crypto.HashUtilCore">
            <summary>
            Hash utils.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.HashUtilCore.ComputeHash(Aspose.Crypto.DigestAlgorithm,System.Byte[])">
            <summary> Select an algorithm implementation and compute a hash </summary>
        </member>
        <member name="T:Aspose.Crypto.RsaSignatureVerifier">
            <summary>
            Performs RSA digital signature verification.
            </summary>
            <remarks>
            This class should be fully inline after obfuscation to increase anti-patch protection.
            </remarks>
        </member>
        <member name="M:Aspose.Crypto.RsaSignatureVerifier.VerifySignature(System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Checks license signature.
            </summary>
            <returns><c>true></c> if license signature is correct; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Aspose.Crypto.RsaSignatureVerifier.GetAlgorithmPrefix(System.Byte[])">
            <summary>
            The hash prefix for the digest algorithm of this verifier.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.RsaSignatureVerifier.GetAlgorithm(System.Byte[])">
            <summary>
            The digest algorithm corresponded to a verifier key modulus length.
            </summary>
        </member>
        <member name="T:Aspose.Crypto.Sha256">
            <summary>
            Represents data structure for Sha256 (Message Digest) computation and provides
            necessary methods to compute.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.Sha256.Initialize">
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.Sha256.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Performs the hash algorithm on the data provided.
            </summary>
            <param name="array">The array containing the data.</param>
            <param name="ibStart">The position in the array to begin reading from.</param>
            <param name="cbSize">How many bytes in the array to read.</param>
        </member>
        <member name="M:Aspose.Crypto.Sha256.HashFinal">
            <summary>
            Performs any final activities required by the hash algorithm.
            </summary>
            <returns>The final hash value.</returns>
        </member>
        <member name="M:Aspose.Crypto.Sha256.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Crypto.Sha256"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.Sha256.Update(System.Byte[],System.Int32)">
            <summary>Process a block of data.</summary>
            <param name="inputBuffer">The block of data to process.</param>
            <param name="inputOffset">Where to start in the block.</param>
        </member>
        <member name="M:Aspose.Crypto.Sha256.FinalUpdate(System.Byte[],System.Int32,System.Int32)">
            <summary>Process the last block of data.</summary>
            <param name="inputBuffer">The block of data to process.</param>
            <param name="inputOffset">Where to start in the block.</param>
            <param name="inputCount">How many bytes need to be processed.</param>
            <returns>The results of the completed hash calculation.</returns>
        </member>
        <member name="M:Aspose.Crypto.Sha256.Padding(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Pads the final block.
            </summary>
            <param name="inputBuffer">The block of data to process.</param>
            <param name="inputOffset">Where to start in the block.</param>
            <param name="inputCount">How many bytes need to be processed.</param>
        </member>
        <member name="T:Aspose.Crypto.SmartComparator1">
            <summary>
            One of the comparators used for complication of byte buffers comparison.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.SmartComparator1.AddBuffer1(System.IO.MemoryStream,System.Byte[],System.Int32)">
            <summary>
            The first buffer to compare should be passed here.
            </summary>
            <param name="dummyParam1"></param>
            <param name="buffer1">The buffer.</param>
            <param name="dummyParam2"></param>
            <returns></returns>
        </member>
        <member name="T:Aspose.Crypto.SmartComparator2">
            <summary>
            One of the comparators used for complication of byte buffers comparison.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.SmartComparator2.#ctor(Aspose.Crypto.SmartComparator1,System.Byte[],System.Boolean,System.Boolean)">
            <summary>
            The second buffer to compare must be passed here.
            </summary>
            <param name="dummyParam1"></param>
            <param name="buffer2">The buffer.</param>
            <param name="dummyParam2"></param>
            <param name="dummyParam3"></param>
        </member>
        <member name="M:Aspose.Crypto.SmartComparator2.AddComparator1(System.Int32[],Aspose.Crypto.SmartComparator1)">
            <summary>
            The first comparator must be added here.
            </summary>
            <param name="dummyParam1"></param>
            <param name="comparator1">The comparator.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Crypto.SmartComparator2.PerformComparison1(System.Boolean)">
            <summary>
            Performs comparison of the second half of the buffers.
            </summary>
            <param name="dummyParam1"></param>
        </member>
        <member name="M:Aspose.Crypto.SmartComparator2.PassControlToComparator3(System.String,System.Boolean)">
            <summary>
            Passes control to the comparator 3.
            </summary>
            <param name="dummyParam1"></param>
            <param name="isDummy">Must be false to really pass control.</param>
        </member>
        <member name="T:Aspose.Crypto.SmartComparator3">
            <summary>
            One of the comparators used for complication of byte buffers comparison.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.SmartComparator3.#ctor(Aspose.Crypto.SmartComparator2)">
            <summary>
            Comparator 2 should be passed here.
            </summary>
            <param name="comparator2">Comparator 2.</param>
        </member>
        <member name="T:Aspose.Crypto.StringUtil">
            <summary>
            String utils to use in license algorithms.
            Replace implementation the 'StringUtil' from Aspose.Word.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.StringUtil.HasChars(System.String)">
            <summary>
            Returns true if the string is not null and not empty.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.StringUtil.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Check if the text contains the specified string.
            Works both for .NET 2.0 and .NET 1.1
            </summary>
        </member>
        <member name="M:Aspose.Crypto.StringUtil.IndexOfIgnoreCase(System.String,System.String)">
            <summary>
            Platform abstract version of 'source.IndexOf(value, StringComparison.InvariantCultureIgnoreCase)'.
            </summary>
        </member>
        <member name="T:Aspose.Crypto.VerificationSupervisor">
            <summary>
            Contains flags set by the meaningful comparer methods. This is necessary to ensure
            that crackers have not cut out the entry point of the verification algorithm located
            in LicenseCore.VerifySignature() and all the methods have been called. The flags should
            be set by 3 comparer methods subsequently, each method must check if the previous method
            has been invoked. 
            
            Also see SignatureInvalidFlag in this class.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.VerificationSupervisor.Clear">
            <summary>
            Made accessible so license unit tests can reset the static state properly.
            </summary>
        </member>
        <member name="M:Aspose.Crypto.VerificationSupervisor.EnsureIfAllMethodsInvoked">
            <summary>
            Returns 0x100 if all methods have been invoked properly, returns 0x1000 otherwise.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aspose.Crypto.VerificationSupervisor.SignatureInvalidFlag">
            <summary>
            If EnsureIfAllMethodsInvoked says that verification methods were called and 
            SignatureInvalidFlag is zero, then the  signature was verified and it was correct.
            
            This is set to greater than zero if signature verification failed at some stage.
            </summary>
        </member>
        <member name="P:Aspose.Crypto.VerificationSupervisor.MethodCalledFlag1">
            <summary>
            Used for checking if methods 1 and 2 were invoked. Initial value = 0x30. Method 1
            must check it and if it is 0x30, set it to 0xff, otherwise leave intact.
            Method 2 then must check it and if it is 0xff, set it to 0x80, otherwise leave intact.
            </summary>
        </member>
        <member name="P:Aspose.Crypto.VerificationSupervisor.MethodCalledFlag2">
            <summary>
            Used for checking if method 3 was invoked. Initial value = true. Method 3 must
            set it to false.
            </summary>
        </member>
        <member name="T:Dynabic.Metered.BillingGateway">
             <summary>
             This is the primary interface to the BanckleBilling Gateway.
             </summary>
             <remarks>
             This class interacts with:
             <ul>
             <li><see cref="T:Dynabic.Metered.SubscriptionService">Subscriptions</see></li>
             </ul>  
             </remarks>
             <example>
             Quick Start Example:
             <code>
             using System
             using BanckleBilling
            
             namespace BanckleBillingExample
             {
                 class Program
                 {
                     static void Main(string[] args)
                     {
                         var gateway = new BillingGateway
                         {
                             Environment = Environment.PRODUCTION,
                             PublicKey = "a_public_key",
                             PrivateKey = "a_private_key"
                         }
            
                         var request = new SubscriptionRequest
                         {
                             ProductId = 11,
                             ...
                             CustomerRequest = new CustomerRequest
                             {
                                 Name = "John Doe",
                                 ...
                             }
                         }
            
                         SubscriptionResponse subscription = gateway.Subscription.Create(request)
            
                         Console.WriteLine(String.Format("Subscription ID: {0}", subscription.Id))
                         Console.WriteLine(String.Format("Status: {0}", subscription.Status))
                     }
                 }
             }
             </code>
             </example>
        </member>
        <member name="M:Dynabic.Metered.Crypto.RemoveUtf8BomIfPresent(System.String)">
            <summary>
            Remove the UTF8 BOM, if present (BILLING-757)
            this causes the client/server signatures to not correspond, 
            although the content and the key are identical
            </summary>
        </member>
        <member name="T:Dynabic.Metered.MeteredObfuscation">
            <summary>
            Specifies obfuscation settings for EazFuscator.
            </summary>
        </member>
        <member name="F:Dynabic.Metered.MeteredObfuscation.ExcludeVirtualization">
            <summary>
            Set to False to enable virtualization for Metered obfuscation through EazFuscator.
            </summary>
        </member>
        <member name="T:Dynabic.Metered.PricingPlan">
            <summary>
            Represents basic information about a PricingPlan
            </summary>
        </member>
        <member name="P:Dynabic.Metered.PricingPlan.Id">
            <summary>
            Id of the PricingPlan record
            </summary>
        </member>
        <member name="P:Dynabic.Metered.PricingPlan.Name">
            <summary>        
            Name of the PricingPlan
            </summary>
        </member>
        <member name="P:Dynabic.Metered.PricingPlan.ProductItems">
            <summary>
            A list of ProductItems represented as a collection of ProductItem objects
            </summary>
        </member>
        <member name="P:Dynabic.Metered.PricingPlan.ProductId">
            <summary>
            Id of the Product to which PricingPlan is attached
            </summary>
        </member>
        <member name="T:Dynabic.Metered.PricingPlanList">
            <summary>
            A list of PricingPlans
            </summary>
        </member>
        <member name="T:Dynabic.Metered.Product">
            <summary>
            Represents a Product.
            </summary> 
        </member>
        <member name="P:Dynabic.Metered.Product.Id">
            <summary>
            Product's unique identifier
            </summary>
        </member>
        <member name="P:Dynabic.Metered.Product.Name">
            <summary>
            Name of the Product
            </summary>
        </member>
        <member name="P:Dynabic.Metered.Product.PricingPlans">
            <summary>
            A list of Pricing Plans represented as a collection of PricingPlanRequest objects
            </summary>
        </member>
        <member name="T:Dynabic.Metered.ProductItem">
            <summary>
            Product Item
            </summary>
        </member>
        <member name="P:Dynabic.Metered.ProductItem.Id">
            <summary>
            ProductItem's unique identifier. It is generated and managed by database
            </summary>
        </member>
        <member name="P:Dynabic.Metered.ProductItem.Name">
            <summary>
            Name of the ProductItem
            </summary>
        </member>
        <member name="T:Dynabic.Metered.ProductItemList">
            <summary>
            A list of ProductItems
            </summary>
        </member>
        <member name="T:Dynabic.Metered.ProductList">
            <summary>
            A list of Products
            </summary>
        </member>
        <member name="T:Dynabic.Metered.Subscription">
            <summary>
            Represents a Subscription
            (Customers make Subscriptions to Products)
            </summary>
        </member>
        <member name="P:Dynabic.Metered.Subscription.SubscriptionPricingPlans">
            <summary>
            A list of SubscriptionPricingPlans to be assigned to the Subscription
            </summary>
        </member>
        <member name="P:Dynabic.Metered.Subscription.FilteredStatus">
            <summary>
            Actual status of the Subscription (e.g. Active, Trialing, BillNotPaid, Expired etc.
            </summary>
        </member>
        <member name="P:Dynabic.Metered.SubscriptionItem.SubscriptionId">
            <summary>
            The subscription identifier
            </summary>      
        </member>
        <member name="P:Dynabic.Metered.SubscriptionItem.ProductItemId">
            <summary>
            The product item identifier
            </summary>
        </member>
        <member name="P:Dynabic.Metered.SubscriptionItem.Quantity">
            <summary>
            The value of the quantity
            </summary>     
        </member>
        <member name="P:Dynabic.Metered.SubscriptionItem.UpdateDescription">
            <summary>
            The update details
            </summary>
        </member>
        <member name="P:Dynabic.Metered.SubscriptionItem.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Dynabic.Metered.SubscriptionItem.UnitName">
            <summary>
            The unit name
            </summary>      
        </member>
        <member name="P:Dynabic.Metered.SubscriptionItem.IsQuantityAccumulated">
            <summary>
            Whether this item is an acumulator. When set to true it
            will influence the way subscription items are updated.
            </summary>
        </member>
        <member name="T:Dynabic.Metered.SubscriptionItemList">
            <summary>
            A lists of the subscription's components.
            </summary>
        </member>
        <member name="T:Dynabic.Metered.SubscriptionPricingPlan">
            <summary>
            Represents basic information about a PricingPlan
            </summary>
        </member>
        <member name="P:Dynabic.Metered.SubscriptionPricingPlan.Id">
            <summary>
            Id of the PricingPlan record
            </summary>
        </member>
        <member name="P:Dynabic.Metered.SubscriptionPricingPlan.PricingPlan">
            <summary>
            Product price plan of this subscription
            </summary>
        </member>
        <member name="T:Dynabic.Metered.SubscriptionPricingPlansList">
            <summary>
            A list of PricingPlans
            </summary>
        </member>
        <member name="T:Dynabic.Metered.SubscriptionService">
            <summary>
            Provides metered license related RESTful API calls
            </summary>
        </member>
        <member name="M:Dynabic.Metered.SubscriptionService.GetProductById(System.Int64)">
            <summary>
            Gets a Product by Id.
            </summary>
            <param name="id">The Id of the Product to be retrieved. </param>
            <returns>A Product object corresponding to the specified ProductId. </returns>
        </member>
        <member name="M:Dynabic.Metered.SubscriptionService.UpdateSubscriptionItems(System.Int64,Dynabic.Metered.SubscriptionItemList)">
            <summary>
            Updates the subscription item.
            </summary>
            <param name="id"> The Id of the Subscription </param>
            <param name="items">The subscription items.</param>
        </member>
        <member name="M:Dynabic.Metered.SubscriptionService.GetSubscriptionItems(System.Int64)">
            <summary>
            Gets the subscription items.
            </summary>
            <param name="id">The subscription id.</param>
            <returns>SubscriptionItemList</returns>
        </member>
        <member name="T:Dynabic.Metered.SubscriptionsList">
            <summary>
            A list of Subscriptions represented as a collection of SubscriptionResponse objects
            </summary>
        </member>
    </members>
</doc>
